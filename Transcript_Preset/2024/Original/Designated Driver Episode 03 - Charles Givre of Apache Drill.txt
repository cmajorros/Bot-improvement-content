 Hi everybody and welcome to a designated driver, the happy hour or happy half hour podcast where we get to meet somebody from a database community and some platform that integrates with the patchy superset and get to know them over a beer or whatever beverage there into for those who don't know what a patchy superset is if you're from a different crowd then we're an open source BI tool and part of the Apache software foundations. If you don't want to host and configure open source software, we also work for preset, which is a sass version of that a commercial offering with some extra bells and whistles on top of it so you can try that out for free if you'd like. But in as far as this episode goes, we've got a special guest from Apache drill today, so let's go ahead and do some self introductions. I'll go ahead and pass the mic to Beto first. Alright, hey, hey everyone. My name is Beto, Beto Jalmeida. I am a superset commuter PMC member. I've been working with the project for almost seven years now and superset connects to more than 50 different databases. That's, I think, at the bulk of the work I do is making sure it integrates nicely with whatever database you want to use. But I do work all across the stack. I'm also passionate about data visualization. So that's what I do. See, and what beer did you bring today? You can make that. Oh, yeah, today it was hard to find a drill related beer. I got to be called the space camper. I assume if you go to space camp, they're going to be drills. Oh, okay. It's an impure IPA. I'll go ahead and go next. Then I'm Evan Rusakis. I'm also a superset PMC member and work for preset as a developer advocate. So you probably see me making a bunch of noise on GitHub and Slack and various other places where superset things happen. And today, since, you know, we're all dependent on the ASF here and ASFs arguably dependent on us and drill and superset are dependent on each other. I brought circular dependency. A local brewery called cerebral. They make good stuff. Then I'll pass it over to Charles. I got to thank you, Evan and Beto for having me today. My name is Charles Ghibri. I'm the PMC chair actually for Apache drill and I've been involved in that for, I don't know, I don't know how long now, 67 years. I co-authored the Riley book about it. And I've been just working on it for a long time. My day job, I do a lot of like cyber security and data analytics work. I also teach in that, in that theme. And for my beer, I was boring and I just brought a Moldello negra. Because we actually just cleaned out our drink refrigerator and that was what was available. But there it is. It's a classic choice. You use that one when you're studying to be a beer judge. It's classical classic examples. Oh, right. Yeah, definitely. Well, that's fantastic. And I, first off, I just wanted to say thanks for, you know, being not only a part of the show, but part of the Super Set community. You've contributed to our product and that's an unusual thing of one of our guests. So thanks for participating and making our little world better. But I'm generally curious how you got involved with drill. What's kind of the origin story of the project and your role there? Sure. So my story was that I had been working on some government contracts for and doing some cyber security data analytics. And we kept running into this problem where there's all this data all over the place. And it's in a lot of different formats. And I was that I went to the strata conference. I think it was in Silicon Valley. And I was talking to a guy I'm Ted Dunning and his wife, Ellen Friedman. And I was just kind of talking to him about, you know, yeah, we're trying to do this project. It's really, really quite difficult. They kind of I think Ellen mentioned to me like, hey, if you tried drill. Okay. So I went home, downloaded it, tried it out. And at the time, it frankly worked really poorly. But the possibility of being able to write ad hoc queries across disparate data sets without having to like load them into anything. In the cyber world, I wasn't so much concerned about like the being able to query data lakes at scale. It was more of just like, I have this data. It's in all these different formats. I don't want to write ETL jobs or I think scripts just to do that because I don't even know if it's worth doing. So it was really intriguing to me. So I kind of started following it and following the threads and there was this whole discussion at the time about getting drilled to be able to read web server logs. I was like, that's intriguing. And so just kind of one thing led to another and I went to another strata conference, bumped into Ted now and again and started talking to them and Ted said something to me where he's like, you know, I always wanted to get drill to query pcap files for anyone who's not aware of pcaps. Raw network traffic. And so that's a big data source for us cyber security folks. And when he said that, it was just kind of like that was a real light bulb moment for me. Well, if you could have this tool that could you could point it at arbitrary data and just query it using sequels at scale and you can this thing scales. That's incredible. So I started at that. That was really the moment for me when I was like, OK, I really do have to learn this. I took it back to my bosses at Booz Allen and time. And I was like, look, this could be a, this could be a really major thing. And that was when I discovered that you know, if you're working for a consultancy going to them and saying, Hey, I have a great way where we can reduce the number of billable hours we charging is not a great argument. You know that they're going to be really into. But for it seemed like a really great enabler though. And so over the years, I've I've you drilled not so much as like the query engine for big data, but more of as the Swiss Army knife or Swiss Army chain saw to quote the pro book for for data, whereas you can throw it at a lot of things so that you can iterate very quickly. And you can you can work with data. Without having to kind of deal with all the plumbing that goes behind it. And so that that kind of was it was and is my interest in drill. And I also had the same strata conference. I think I think one or two. I went to a bunch of them in a row. And then I that was when I got introduced to superset. And I remember sitting in Max's presentation about it. One of the early ones and just thinking like, holy crap. If you combine superset with drill. That's an amazing possible like the possibilities there are really incredible because you have this tool that can help you visualize you can work with the SQL based data sources. And then you have this query engine that can in theory at least query virtually any data. That's really neat and that we need to make that happen. So that kind of was what inspired me to start working on the drill SQL Alchemy connect dialogues. And that took me a while. And I was working on it with another guy. John, John, John, and you know, eventually we both kind of got that got that out the door. But that was kind of the how I got into all this. That's cool. I feel that's a very common problem like trying to find data, get the data together. So you get to the point where you can start like analyzing, look at the data. I come from oceanography. I used to be a climate scientist. And and climate scientists they solve this problem also like in different ways, but it's also the same idea like Remember reading we spend like 80% of the time trying to get the data to the point where it's useful. And so which is why it's important to have tools that let you just like fast forward that. Yeah, I think it's I think it's a very common problem in last couple of years. I was, you know, I worked at a startup and I mean, even, even relatively common data sources like you'll find businesses that they run their business off of a share drive full of Excel files. And the ability to be able to run SQL queries across that whole folder is something like they would never even think to do. But so like if you had data in that format, that becomes trivial with with drill. Because you can just point it at folder as you can point it at single files. You can point it at other data sources and it just becomes very easy to start working with data like that. Yeah, and you know, looking at your website, it connects to all sorts of things that our users typically ask us about when they start getting serious. Like it's inevitable that somebody's going to say, how do I connect to a mom or other, some other no SQL thing or their S. Yeah, but it's or whatever. So you can provide that missing link there. Yep. Yeah, it's always either, you know, you guys are the presto Trino kind of that usual list. How do your users or customers or whatever you refer to them as compare you against that it's the comparison's got to be inevitable. It is. So for the last three years, I was I was trying to build a startup around this concept. Unfortunately, we didn't end up working out, but I can kind of answer it just from my perspective and working with people with doing this. What I kind of tended to see and this is maybe maybe this is just my perspective on this. I'll speak for anybody else, but where I saw drill is being more useful like the presto and Trino. What I saw was they work really well with data lakes, but the second you like if you try to run them on a laptop, it's not quite the same experience. And the number of different types of data sources that they work with is definitely not as diverse as drill is. And so at the other piece that drill does it's a really unique feature is the schema discovery piece of it. So what drill can do and if you're thinking like with relational databases, that's not such a big deal. But if you talk about things like that, you can do it. It's such a big deal. But if you talk about things like XML files or you know, I mentioned PCAP or other things like that, the fact that you can just point drill at them and you don't have to tell it what kind, you know, columns, the names, the data types, all that kind of stuff. The fact that it can just figure that out for you is a huge differentiator and it's a I can tell you from all the polar requests that we debug. It's not an easy problem. It's one of those things that sounds really easy until he's ready to do it. And that's another kind of key thing. So I view it more as that like that I'll use the phrase again that Swiss Army chainsaw for data versus like that query engine that you'll put on the data like I think that when Dremio kind of diverged from drill, they kind of from my perspective, at least took that more of, you know, enterprise data, a approach versus that, you know, like rip any data part. So that's kind of how I see it as being as the the distinguishing factor. But I mean other people, I have no like people use it for all kinds of things. And yeah, I don't really know, but that's my perspective at least. And how does it work with I mean, I've used through in the past, but I never went in depth into architecture. How does it work when you're querying files? Does it create an index? The first time or is it always like scanning everything? So it's it depends is the answer drill has a metastore feature. And so what you can do is you can basically have drill scan the file and extract the metadata. What that will do is that in theory, at least that will give it schema information that is used for query planning. You can also skip that process and just query the data. And then yeah, it scans it every time. I think you mentioned you had some form of a little demo. I don't want to put you on the spot or anything. But if you want to show that that beat that might explain a lot of what's going on. Yeah, sure. If you needed a minute to get that going, we can check in on our beers real quick and curious, you know, how are they doing well. How's yours, Beto? I was curious about that one. It's it's okay. It's it's an impure IPA. I don't think it's any special. It's it is good. It's just nothing stands out. Well, I'm going to go ahead and make an endorsement here. I don't know where you can get cerebral outside of Colorado. But this is a fooder called IPA, which is a lot of weird things. But I don't know if you've seen fooders, but they're these giant barrels essentially. And so they've barrel aged this cold IPA and cold IPA is like using AL East fermented at longer temperatures. So it's like a hybrid. Oh, anyway, this thing's knocking it out of the park for me. So I just had to use on that for a moment. Anyway, sorry to disrupt the demo. Looks like you're right. Okay. Fire remote. Alright, so I thought I would just kind of show just some of the different different data sources that you can query with drill. I'm not I'm obviously if you can query them, then you can do other things like visualizations and do all sorts of fun stuff. Drill uses more or less standard SQL. So if you the dialect is closest to my sequel. So if you have experience with my sequel, the learning curve is like this, like near nothing. So it's very it's really straightforward there. So this is. Query and regular files is really not all that interesting because it just looks like Query and regular files. So here is the CSV file. You can run any kind of SQL on that. So, you know, big deal. This is just on my local disk. Now what's neat though is you can also do things like I can connect this to Dropbox, for example. And let's see what we've got here. I I queued up a bunch of queries here, but so we're running the risk of a live demos here. So I'll pull this up and let's see what we got here. We'll totally understand polish it up. Yeah, awesome. What is this Dropbox that root that HGT, okay, here we go. I will say queering Dropbox is a little bit slower just because I don't think their APIs really meant to do this sort of thing. But this is this is querying a file live from Dropbox. So again, you can write SQL queries this way. You don't have to like move data around. You can just have at it with this. And another thing that I'll mention is drill does have the capability of drilling into these nested objects. So if I wanted to pull out these individual fields, you can do that and you can aggregate on them and you can do all sorts of stuff like that. So it's it's it's pretty neat like that. Now that's kind of a so this is a JSON file. You can also come on. Come on. There we go. I don't know how my computer's not. Okay, you can also talk to things like to not kind of non traditional data sources. And so this example here is Splunk. I have an instance running on my local machine here. And so this is a you can query Splunk with with drill. Hopefully. There we go. And there's there's a lot to this. So, but what's really neat is you can't so like for example, let's just do server wasn't server IP. And this is just some data I generated. So I don't know what's going to show here. Just kind of to show how this works. And the beauty of this stuff is that you don't have to learn Splunk's query language to do this. So this is for me, I'm I'm a lazy person and don't want to learn other other query languages. So if I wanted to do these kinds of things, it that just makes it that's just you know, really nice. Now drill also is quite extendable. So I can do things you can do things like. So I wrote a whole bunch of different UDFs that are useful. Sorry user defined functions that are useful for security analysis. So for example, and I hope I just reset this computer and I didn't. Let's try. So I wrote a suite of server IP. All right. So, so this is a idea after uses like a table to get the mapping between IP and country. Oh, hang on. Yeah, it's using the maximum database. I have a feeling I just didn't install this function on here. I'm not remembering what it's called. Anyway, OK, demo foul. In any event, there I have a suite of like network analysis functions that can do can geolocate IPs. There's other ones that are now part of drill that can do things like. Ripper part user agent strings. You can parse URLs pull out all the different components of that. And then you can analyze that. So it makes working with this data really fast because you don't have to like write, you know, pull in modules into all that kind of stuff. Do that. This example is queer is a module that this was something that I wrote that I'm kind of proud of, which is the drills API connector. So this query right here is actually it's pulling down data from GitHub's API. And you can see like this is this is telling these are all the all of the. All the repos that belong to the Apache organization. And so you can you can query that again, you don't have to learn any of the mechanics of the API. You can just literally query it like it's an SQL with SQL. So this will do all sorts of cool stuff like it will handle OAuth. It will handle pagination. So if you if your API is limited 200 records per request, it can blast out as many different requests as you need to get your data source. So it's insanely powerful. Another kind of neat thing is you can query Google sheets with this. I saw that I've been sort of following the superset integration with Google sheets. But one of the things you can do with drill is you can actually query that as well again with SQL and then you can merge that across other data sources. So to others that if you another API I was messing around with if you want to know about Pokemon you can query the Pokemon API. And also here you're querying different. Like schemas, but I assume you can write a query that joins these schemas together. Yeah, absolutely. And that's just really a standard join like you just have to have two columns that contain the same data. They don't have to be the same data type that you could just kind of point that out. Another kind of anything you can query PDF files that have tables in the withdrawal. So that's. That's kind of other neat need for each or. Oh, so here the last thing I'll show you is this. So this is this is querying a PCAP file. And this was something that Ted Dunning wrote and it's insanely fast. And what's neat about this also is you can there's a some other syntactic sugar you can use, which will roll up PCAPs into network sessions. So if you just query the file by itself you get each packet as an individual row. If you turn this sessionize option on you get those compressed into sessions and you get different metadata. So if you're doing network analytics it's really, really super useful. So that's my kind of I could go on and show you more random crap that you'll do, but that's I think you can get the idea. So this is the kind of thing I love just you know, bringing data together, especially if you can use SQL sequence like the lingua franca. It really makes it easy because like if I want to share data with you and you have a platform like this, I mean I can just send you the query. Yeah, and you can you know, and over the last like over the last few years in drill, we've done a lot with the access controls. So the drill from years ago is nothing like the drill of today with respect to access controls. We've also done a lot around the schema discovery works just way better than it did in years past. And another thing that we've added another really, really useful functionality is the ability to both read and write two data sources. So most data sources now can are bidirectional. So you can read and some of them you can append to, but I mean, drill is originally intended for just reading data, but it is nice to like, like let's say you have a Splunk instance. You could theoretically use drill to push data back in this one as well as just squaring it. So, so yeah, could you edit the table on the PDF? Right. Is that asking you to? So you can't write data back out to to to I think as far as file formats, you can write out to like CSV JSON and hard. Yeah, yeah, yeah, that will be cool. I notice you're using a lot of dot notations in your schemas. Is that because superset doesn't support catalogs? It's not exposed. It's like a hierarchy of catalog schema table. That's a good question. I wrote to be honest, I wrote that part of the like the driver a really long time ago and I honestly don't remember. Yeah, okay. I'm asking because we are adding support this week to catalog as a hierarchical level. So it might make it easier. I don't know. Yeah, I think the drill they can choose Dropbox and then they can have. So, drill, drill does support that so you can like, you know, do a use query and then, you know, yeah, you can, you can do that. Yeah, I feel that's becoming more and more common with like modern databases. I was going to ask a kind of related question since you're obviously a superset user and contributor as well. I wondered if there's anything that's kind of on your superset, superset wish list that would make life easier or better for real users. So, I would love, I don't know if like something I thought about doing a bit is working a little bit on the connector, the less SQL Alchemy driver to just get better schema metadata now that actually drill produces better schema metadata. I would love to see, I think this is probably just inevitable. It's more gen AI kind of integrated into the interface. One of the things that we did at my company was we built a text to SQL query generator assistant and I was surprised at how well that worked with drill and when you can provide it the schema information. So, the ability to just be like, hey, how many widgets do I sell in the last three quarters and have it just generate a query that does that? I think that would be really slick and then integrate that into the overall tool like, oh, and run the query every other day and send it to me or something like that. We do have that at preset. I saw that. I thought that as a premium feature. Yeah, so it analyzes your database schema and then you can write queries. But it's interesting because it's like it's easier to do this in drill because drill has a fixed syntax, right? It's a stat like has its own syntax. Well, for superset, it's really hard to get the dialect, right? There's so many differences between between different databases that to get the dialect right all the time. It's not trivial. That was one of the big challenges that I found when we when I was working on that was getting it so that it would not only answer the question correctly, but get it in a dialect that will work because there's a lot of, yeah, like you said, there's a lot of nuance in that. Yeah, even like, how do you truncate the metric every month or every week, right? That the syntax is completely different. Database have date trunks and uses something else. Yeah. That's one of the things I always wish for in terms of generative AI is sort of SQL auto correct that would say, oh, you're using the wrong date function. It's from some other database, but it looks like you're using this. Yeah. There was a library that I used called SQL Glot and I don't know if you've played with that or that. So I wrote a drill dialect for that and that's actually proved very useful in so in the widget that I wrote that did the genie piece, it actually did a lot of that translation. So somebody if the genie I used, I don't came up with the wrong date format, it would convert it to date trunk or whatever the correct one is. Yeah, we've been using SQL in superset. It became part of superset. And because like before we had a SQL parser that was dialect agnostic, so it would like it had this huge list of reserved keywords for all the different database. And get errors because like somebody like it would say, hey, this is a reserve keyword in the query, but people are running a query in Treno. So now we're using SQL and for the databases that have a SQL got dialect when we parse the SQL because we do a lot of access control. Also, we need to parse the SQL to figure out which tables, which schemas, which catalogs people are accessing. So now we use the dialect information when parsing and that helps a lot. It was a bit crazy before. I think here's a little bit. I've got to ask you one of the hard hitting questions that we always like to ask our guests as maybe a bit of a personality test, but we're wondering what's on your desk. If you have anything cool, you can show us. Okay, I, when you told me that I thought I'd come prepared, so I've got, I've got two things if that's okay. One is given that I like to toy with cyber security stuff and breaking things, a flipper one. Oh, yeah. I used to have, I have a slightly smaller death now. I used to have a lot of picking set here, but my other thing which doesn't quite fit on my desk is my trim on. So I don't know. Nice. A fellow base cliff reader. Yeah. That's awesome. Well, thank you. That's it. That tells us a lot about you. This, this little segments working, I think. Yeah, we can start a band also. If you know data, we're replaced by AI. We can Evan has the basis behind him. I don't know if you've got this. Have you found in your world that there's an extremely high correlation between, you know, data centric engineering types and musicians. There's a big overlap. Yes. And even if the person doesn't play, I think like I find that people have like a really good, like they'll really be into it. Maybe they're not like a musician themselves, but yes, I absolutely think so. It's funny. I was talking, I was talking to some other companies this week and you know, zoom call up and stuff. You had a whole wall of guitars. I'm like, yep. We're going to go. I have music instruments here too. This is nice. Like a weird drum machine. Yeah, I've got a bunch of bases back there. I haven't been playing enough lately because I hurt my finger recently, but I'll be better. My college roommate was a, was a bass player. They played up right though. Oh, man, those, that's. That's staying. I've played many. I've always wanted one, but boy, those things get pricey if you want a decent one. Yes, they do. Yes, they do. It's amazing how small of a car you can actually get one in though. Oh, yeah, that's true. So you get one of the hard shell cases for those things. Those are here. Let's see. So going back to our, you know, our respective projects. I'm curious if you have anything kind of new or upcoming on, on your roadmap or in your latest release that you're excited about that you can tell our. Yeah, so we are about to release a, well, we're about to release a bug fix release, which is not that exciting, but it does have some decent improvements in it. One of the, we argue also getting ready for the next like major release of drill, which will the biggest thing that it's going to have is an integration with another patchy project called daffodil. And what daffodil does, I had not really, I don't really know that much about it, but it's, it's like a schema mapping tool that is used in enterprise. And so for a lot of like kind of niche data sets, like healthcare records, a lot of scientific things, I guess, I don't really know. But basically someone in the affidil community saw drill and was like, hey, that would be really neat if we could integrate these two because then we could query all this really weird data that we have. And so we've been, I've been kind of trying to help, help them, kind of get this to work and we're, I would say we're very close to getting that merged. And so I'm pretty excited about that because I think that, that opens a lot of possibilities for different people to use drill. Yeah, that's hopefully in the next couple of weeks, that'll happen. Fantastic. Let's see, I guess also, you know, do you have any events or kind of community touch points you'd want to point out for people to get involved with or any kind of upcoming meetups or anything? Not at the moment, but if anybody is interested, I mean, we're always like right now, I mean, we've been expanding our Slack channel. So if anybody's interested in joining that or contributing to drill is frankly challenging. It is a beast of a tool. It's really hard to learn how to like actually write the code. But if someone's interested in kind of doing that, I mean, I would say please reach out to me. I'm happy to or just if you're looking to learn more about it. I mean, please contact me. I'm happy to. I was going to ask about that actually, like if I want to like the drop box integration, like if you want to write something like that, it's written in Java. I don't even know the program. It's in Java. So I have to write like a class in Java or something. Yeah, interestingly enough, like so I did the drop box one and once I kind of figured out how to do it, it was actually really easy. I think it was like one class and you just have to implement a few methods figuring that out though was was really hard. Yeah. But once once we did it, it was actually really easy. And then I also did one for box and I started to do one for one drive. But the I like also one drive would be quite easy to do. Just there's a library that it's not on maven central and it's kind of a pain in the butt to get off. And so at that point, I was like, all right, somebody wants it. But I would love to build integrations for like the other kind of cloud like I cloud or anything where there's like these remote file systems. I think that would be a good addition. And those are actually really easy to do. So yeah, there's some are kind of an ecosystem that people can jump in and more easily contribute one of those connectors or dialects or whatever the proper term is. Yeah, I don't know what the term for that for those are, I mean, there's not really like in like those end up just getting integrated into drill. I mean, most truthfully, most of those kinds of extensions, we just we tend to just integrate unless there's some like licensing reason not to. So mechanism for discovery or for like loading a third party like no, we we had defeated adding that, but it's the way Jules architect it's actually it's it's kind of difficult to that you can write third party user defined functions and add those there isn't like a central repository. I've tried to compile lists of them over the years, but what ends up happening is we end up just integrating them into Jules, so you don't have to deal with like third party jar files or something. The only one that's not like that is the the the IPG location that's because it requires this the thing from Max mine. Cool, I think we're approaching time here, so we'll probably wrap this up, but thank you very much for joining us today and the demo and my nature beyond it's been really cool. So cheers once more and well, thank you everybody for listening, please check out drill, check out superset, check them out together, appreciate you being here and see you. See it at a community over code and wherever other whatever other conferences we we cross paths at in the future. All right, thank you.