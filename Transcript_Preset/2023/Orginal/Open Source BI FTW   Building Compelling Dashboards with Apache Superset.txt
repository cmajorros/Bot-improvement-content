 Hello everybody, this is Robert Hodges, I'll be your host at our next OSACON talk with Evan Rosakis. Evan is a preset developer advocate and a member of the Apache SuperSet Committee. I also want to say that Evan has been one of the people who have been instrumental in helping to set up this conference. Thank you so much for your work and for this talk. So today you're going to be the title of your talk is open source BIFTW. I'm sure you'll explain to us what FTW means, building compelling dashboards of the Apache SuperSet. I'm a huge SuperSet fan. Evan, I'm really looking forward to this talk. Please take it away. All right. Thank you so much for the kind info. FTW is for the win for those that don't know. So thanks for joining me and thanks for attending OSACON and thanks for caring about source analytics in general. Perhaps piggybacking on the keynote from this morning that Robert gave. I wanted to talk about the open source. You know, last mile, data visualization layer of the modern data stack and we're going to do this in three parts today. First is how the Apache SuperSet project does open source and our take on what the Apache way is. And then we're going to get into an introductory tour of SuperSet moving parts. We'll build some charts and poke around to some dashboards. And I'm going to give a little hot take on why we think open source BI is the future. So I'll provide various links to resources as QR codes throughout this. Grab screenshots or have your phone handy if you're into that sort of thing. Okay. So most folks at OSACON are familiar with open source process in general, but I wanted to give you a really brief overview of how SuperSet plays this game in particular. We're part of the Apache software foundation. We're one of the biggest Apache projects, the top level projects. Anyway, you count it by GitHub stars, by commit volume, by Slack membership. It's hard to kind of weigh those individual metrics, but no matter how you slice it, we're doing okay in that realm. In fact, we're about to almost hit number one if I'm interpreting the blue line there correctly. And please pass through different kinds of Apache eCharts, which is a form we use and love. Shout out to the eCharts team that we're going for number one. So it's important to note about the Apache software foundation that they own repo. No individual organization owns it. They own all the trademarks and they provide a total of their benefits as you can see here and support our project. In short, they keep us responsible and responsive. They make sure we're on top of security issues and things like that. They make sure we have followed the Apache way, which is something they run by. And there's a few facets of that you might want to know about. One is that there's a few different key goals in Apache projects. One is contributors and that's you. That wasn't necessarily mean contributing code. It could be things like answering questions on Slack, joining design discussions, improving documentation, testing releases, improving translations. There's a lot that anyone can do in this project. And there's committers. Those are people that have right permissions on the repo, emerge and review and label things and these are folks that have been voted in according to standards that the project, the SuperSet project itself has come up with. It's unique to us. And there's the PMC, the project management committee. And these are folks that are also voted in and they handle things like security, setting up project policies and voting and onboarding committers, kind of the official business of the project. And there's a lot of core tenants of the Apache way. I won't go into it all for a sake of time because we want to get to the demo. One of the main things you want to know about is consensus. There's two types of consensus. Everything's consensus driven in Apache. There's lazy consensus, which is where you just send emails saying, hey, I'd like to do this thing and if nobody objects in three days, I get to do it. And there's voting, which is a lot of stuff we do around improvement proposals where the PMC members have binding votes. But how do we determine what's important and the need of consensus proposals? We have what we call our SuperSet operational model, which is a bunch of working groups around software, quality, security, expectation, developer experience, really strategy. The main goal here is since the community is pretty large, we want to provide opportunities for synchronous discussion and working sessions, the way that's still compatible with the Apache way, which is all about inclusivity. So there's a whole flow to this. And the idea being that we generate SIPs, which is short for SuperSet improvement proposals. And this is our way of kind of road mapping the project. So these SIPs can be proposals from anyone. They're not feature requests, they're actually plans, they're detailed out. And once we get consensus on these, we try to rally people around the alignment on design and approach and seek volunteers to implement and test these features and all sorts of changes. And we're finding this process is working and we're gathering steam. There are thousands of orgs using SuperSet and more and more of these orgs are contributing back to the project all the time. And on that note, this is an open source conference and I know a lot of you in the crowd are using SuperSet. This is a friendly reminder, just to say the best thing you can do to contribute to any open source project is simply tell the world that you use it. So you know, put your name on projects like ours. Okay, so let's stop talking about Apache for a second and see this thing in action. We'll poke around in some of the moving parts of SuperSet and show you how this thing works. And the thing you want to do, of course, is connect a database. And you're using preset for the records of things look a little bit different, but it's pretty similar to the experience you have using off the shelf, open source SuperSet. So when you connect to a database, you can fill out all the individual fields or if you like, you can simply use a SQL Alchemy URL train. We use SQL Alchemy under the hood to connect to basically anything that speaks SQL. And if you, even once you test the connection and everything's all good, it will be set. There's a bunch of other stuff you can tune here, like different cache timeouts. So if you're pulling historical data from a warehouse, you might set up things differently than appear in something that's more like a real-time thing about execute case or something like that. Lots of little things to dive into there, but I won't go too deep. One of the story is once you set up your database connection, you can go into SQL Lab, which is our full-toucher SQL IDE, and you can do a lot of stuff here. I'm going to do pretty trivial queries on a data set. I actually set up last night, folded from Kaggle and stuck it in Mother Dutch just for simplicity sake. My son and I are playing a lot of Pokemon, so I thought, hey, but there's a data set, sure enough there is. So I'll just do a six select star from, look. Look at the DCG, look at handy auto complete. And then let's see, I want to order by in these state. So when you run that query, it just takes a second. It'll fetch the results. And there's a couple other little features here that I can show. One is this query history tab. I don't know why this stick in so long. That may be the data set. But live demos are fun. So you've got your query history, and you can see that these all ran okay except this one, but it gives you a chance to kind of riff on your query and dial it in and go back to prior version. You need to do that. You can also save queries. And you have a whole history of these things that you can share with others and kind of collaborate on. Or you can go ahead and sometimes you can create a chart directly from a query, but in most cases, you'll probably want to create a data set. So I'll just call this, put them on. I want to save and explore. This will take us into what we call the, well actually we're going to go to chart new here. Okay. So we've got our table, but what I wanted to do is explore some of this curious about. We talked about this thing in the game called PowerCreep. And what that means is that over the years, the power of the various cards you play in the game gets stronger to kind of phase out the older cards. And I wanted to see if this is true. So I'm setting the x-axis for a chart to be the release date, setting the granularity to here because that's just more useful. And then I'm going to check out the average of the hit points of these cards. I'm going to go ahead. See that chart? So sure enough, the average strength of a book and fun card is going up over the years. And if we break that down a little bit, we can cut a dimension of series. I think it's called this data set very well. Yeah, there's that. And this is a little bit screwy looking here. So maybe let's add some markers. Yeah, now you can actually see where things are. In fact, this little scarlet and violet set right here is one of my son and I are collecting now. So that's kind of, so I'll go ahead and go into another little nerdy hobby of mine. I'm a fear enthusiast and a fear judge. So here in Denver, we have the Great American Beard Festival. It's been happening for a long time. And I got two data sets here that I merged together in SQL lab. One is a list of the historical figures of this particular Beard Festival. And another one is a really big list of breweries and all their different metadata like their website and phone number and address, latitude, longitude, and so on. So when you join these up, you can build a fun dashboard that's got all kinds of insights. You can see the total styles and breweries and obvious things. These are the main prize winners over the years. It was kind of surprised that perhaps it's the most prize winning brewery, but there it is. As the beer festival and general have exploded over the years, we see a number of styles creeping up. And you can see which styles of beer are the most of award winning. And you can see which states have won the most broken down by the metals that they've won. You can see that I've got cool silver bronze and gold things here because you can actually add custom colors to the series that appear in your dashboard. So you can make things thematic that way. And it does a lot of stuff. Like for example, if I wanted to dig into California, I can click that and it emits a little cross filter that you see here and that narrows down all these other things. You can see that Firestone Walker Brewing is doing the whole in California as a metal winner. It filters down this map and how that view works. You can see where the winning breweries are. You can see that I clear out that filter. You will see the map of where all the award winners are and the little court flat map to show that California is doing great. Colorado is doing well as well. So both my states have called home. But this little table to take advantage of the data sets that I've joined where you can build custom links here. So when URL to breweries available, you get the link. You can also build in little HTML tags to kind of make it a little prettier as to which level of war with these different breweries of one. You can search all kinds of fun stuff. And you can also create these what we call dashed-board native filters. So here you can add or edit all sorts of filters. You can do a different little divider. You want to add context to those filters. You can have cascading and edit filters. All kinds of crazy things. But just keeping it simple, if I filter things out to Colorado here, we can just see the charts inside the update. And you can see that actually the festival has kind of kept up where the most breweries have been to the constant because the number of breweries is always going up. The number of awards is always going up. OK, I don't know. There's a lot to dig into here. But perhaps one thing I'll point out is that we do have drilling. A lot of people ask about this. You can go into not just hierarchy of drilling like so many BI tools, but this allows you to drill by all sorts of different columns. So if I wanted to explore actually, I'll go for Imperial Stouts since it's stop weather. I can drill by brewery and see who's making the Stouts. North Coast in California is doing really well. It's old rest, but if I drill into beer, I'm sure enough there it is. And you can dry it metal. So you don't really have to go hierarchy. You can go all over the place and explore your data very quickly, very ad hoc. So I hope this gives you a pretty quick overview of how to build a dashboard. There's also a lot of stuff you can do. As you can lay out, you can add rows and columns and do some lay out stuff like you see here. You can get into customizing things by editing CSS. Here I just turned that one chart orange, but you can round corners. You can do all sorts of bells and whistles. You've got blog posts about all of that. But the point that we take away here is that you can build charts very quickly, very easily, very turn those into dashboards that are highly interactive and allow people to very quickly explore data. Whether it's fairly trivial CSV files like this or stuff that's much, much larger in interport scale. You can add tabs and do all sorts of things. And once you've done that, you can go over here and superset and build alerts and reports. I didn't pre-roll one of these, but you can write queries that if certain thresholds are triggered, it'll email you or since it'll be the Slack. Or you can just have periodic reports since you can kind of see how your data is looking today in the green box one way or another. So there's a lot of stuff like that that's really handy. OK, I'm going back to the slides. I want to talk about how presets fit in. I'll be slam doing this on preset. And I think that's important to talk about. Precests have been managed version of superset. You get the best offering of superset available without putting on the hope for any of the work that takes to manage all this stuff. So there's no headaches of infra-employance maintenance upgrading. On a story short, you don't have to hire a whole team or any number of individuals to manage your superset deployment. A bunch of differentiators from off the shelf superset. I didn't really go into here, but one thing you should know is that let's run many superset instances. So some use cases might be around. If you want to give a cordoned-off access to different teams or departments in your org, you could do that with work spaces. You could spin up superset in different regions for compliance purposes. You could create workspaces for different customer clients if that's a business need for you. But it's really easy to deploy them, share them in control access with our roll-based access control or R-back. And it's important to talk about the relationship of preset and superset and that we're an open source project. And a lot of open source-based products are using Lego bricks of open source stuff. And they tend to fork things and modify them. And that gets a little dangerous, actually. So what's different in the open core model is that we build a crust of additional features that are built around the open source project. And things like custom integrations that aren't available on superset or Y enhancements. We've got a few cool new features that are coming soon that this is in terms of map docs. So I won't go too far into that. But the key takeaway is it's in our best interest to make sure that superset is growing and stable and well supported. So that's very helpful. Now why open source went? This is the important thing for a conference like this. I really want to make about superset and I hope to talk you into giving it a try. What is that unlike proprietary BI solutions, which shall remain nameless, you have every opportunity to sit the table and raise your hand. And instead of filing future requests and bug reports that might turn into dead ends, you can get involved with advocating for a feature helping to direct how and when such a feature appears. And our continuing goal here as this project is to make sure that the barrier to entry here is as low as possible for everyone to participate directly. So superset connects to just about everything that speaks SQL. That's one of our core strengths. But really it's the community that contributes to all of this. And this is one of the ways we can kind of take over the world is with these integrations. Whether it's different data warehouses or solutions, whether it's something in petabyte scale or a new way to just parse that CSV that somebody emailed you. It's the community that powers this growth with these drivers and dialects. And we plan to expand this product as quickly as the ecosystem continues to explode. So besides drivers, you can add or enhance different things like custom plugins for visualizations. You can build custom dashboard components and you can leverage or extend the React component library product built around the mobile sorts of new UI features. You can also customize the dashboards that showed you a really trivial example of CSS there, but there's a lot of stuff you can do. And you can also provide theming, like color theming throughout your dashboards and charts and get really deep on that. And you can, of course, get into all sorts of different things to make the dashboards feel like you're brand. A lot of the stuff around things like white labeling is not quite perfect yet. But the communities are making it better every day. And you can actually kind of join this pursuit and make superset feed whatever you want to fit into your business and use cases. And also, you get to deploy it your way. So this is kind of a neat thing about open source is that we have a bunch of feature flags and a bunch of configuration settings that you can tweak on. So you can tune things like caching layers or you can progressively roll out and test new features to your audience and see if they're fit for your users. So you can deploy superset however and whenever, wherever you want, whether that's the top-tier home charts, all sorts of different ways of handling that. And unlike proprietary BI, there's no fear of vendor lock-in. This is a key thing we talk about it because we've created a preset CLI tool, for example, or you can use Terraform like we saw in a talk yesterday where you're able to migrate charts and dashboards and other assets between instances of superset or preset of workspaces. So having that fluidity to get on and off of a managed hosted product or your own hosted open source version of it is really key. You won't be locked into a certain vendor forever and often are proprietary things. But then there's the topic of data democratization. That's a mouthful. There's a lot to go into about how to do this properly around governance and building culture around data exploration in your org. But the key point I want to bring up is affordability and flexibility and superset and preset allow this. The low total cost of ownership means that you can give analytics BI to everybody in your org. And this lets all teams and roles have access to data, lets people answer their own questions faster. And it lowers the maintenance on all of this stuff, which means you're free to free up your team and in for folks to scale and govern and train around with those data operations. So I hope you give all of this a chance, if you'd like to try it out, there's a few ways to do it. You can download it and install it in full versions from the superset website or you can go to GitHub and you can just pull it. There's instructions on how to run it in various ways. So you can customize it and all of that. Or if the easiest way, honestly, is just to sign up for preset, you can try it for free. You can have one space for five people forever. Maybe that fits your needs, but if you grow out a bit, then of course we have eight plans that you can grow into. So supersets becoming more and more capable and more stable every day. This project isn't going anywhere. It's only speeding up. We hope you join us in this journey. Thank you for your time and consideration that I'm forward to any questions we might have in the chat. And you can also catch up on superset Slack or email me or after this is all that we can catch up on the preset booth here on AirMe. And Evan, we do have some questions. Obviously, there's some big fans of superset out there. So I first one is so a super set or preset could replace power BI, but you did shine competitors. Oh, yeah. I don't have my full competitive battle sheets at the ready at the moment, but yes, we're very competitive with most of these. You can kind of imagine the features of any BI tool is like a gigantic Venn diagram and all honesty. There's going to each one of them is going to do something special that the others don't. So we're very competitive with power BI, with Tableau, with Looker. We win in a lot of ways, but I think the open source model is the key differentiator here that if there is something that we don't do, it can be added. Like for example, that drawing stuff that I showed you wasn't available not so long ago. And that was something that other platforms do. And so a few different orgs got together and built that feature. And it was a real win. So we can cut up in a major way there. And we're going to continue to do that. We constantly look at power BI and Looker and all of the others. And we're filling in any gaps we can find. And I think we're going to be exceeding all of these tools soon. And of course, competitively as far as cost goes, it's open source, it's usually the clear win. Great. Here's another question. Really great. Infrastructure is code topic. What do you think about implementing the GitOps approach on the superset side to store data set and dashboard definitions in a version control system? In other words, similar to airflow, which reaches into the Git repo periodically and sinks the dag list. Yeah, absolutely. This is a fairly common workflow. And there's a few reasons you might want to do this. So preset does offer a CLI that allows you to download these assets, whether they're download or upload these assets, charts and dashboards and all of this stuff as code. So once you get those definitions and the ammo files and things, you can check them into Git and build workflows around that. And there's a few reasons you might want to do it. One is to just kind of keep periodic backups or things like that. Another is to kind of replicate assets. This is a bunch of customers and you don't want to get a seed of a workspace with a bunch of charts and dashboards per year built. It connects to their personal data. You can do that or people have different workflows like DevStagingProd instances of superset. So you can use this kind of automated workflows using Git and other related technologies to promote those assets through that pipeline. Great. Here's another question. Does superset or preset have any AI features? Ah, officially superset does not yet. There are a bunch of people that are threatening to produce such things. None of them have landed open source grounds yet. I think that gets a little contentious because not all of this AI stuff is open source. It's not to type names like open AI, which I almost let's look there. On the preset side, we are, in fact, building such things. We have something called AI Assist that we haven't launched yet, but it's being tested with a handful of customers and we expect to roll that out soon. I think there's a lot of ways you can leverage AI in a product like ours. So natural language to SQL. I'm really personally curious about SQL to natural language. There's all sorts of applications and we are definitely exploring. I just kind of a follow on question I'm going to jump to, but I could be related. Is there this is from Michele or Michele? Is there a possibility for people who don't know SQL like in HR or something to create data sets? To create data sets, not as much. So typically the workflow, unless I'm not thinking of something at the moment, typically the workflow to create a data set would be to purchase a SQL query. The natural language to SQL features that could be offered by some of these LLMs definitely bridges that gap where you can just say, you know, show me the winning basketball teams in this year and get a data set. But right now this might be where you would lean on someone to kind of create a data set for you. But then once you've created a data set, it really doesn't require that much SQL knowledge to build things. And that's kind of the point. It's very the exploration side of existing data sets is kind of a no code experience unless you want it to add calculated columns. Or if you want to add a little ad hoc column, like say you're building a pie chart. And you want to want to have a dimension that's something calculated via a short SQL expression. You can do that for the. So for exploring data sets, you don't really need to know SQL for creating them. It sure helps. Great. Another question here, can you build custom hover tool tips? For example, for charts. It depends on the plugin each each visualization plugin kind of has its own tool tips thing. We're both a lot of different libraries. So for example, most of our kind of tier one charts that we call built on the patch of each charts. And you could modify the plugin code to extend the tool tips a little bit if you want to. There were some like the deck GL plugins that allowed you to use JavaScript to create custom tool tips for each plugin instance. But allowing people to enter custom JavaScript is kind of a no-no. So most people have that feature turned off. But yeah, this is something where if you can't do it via the plugin to show you what you want, then you can definitely extend the plugin to add some more controls. Cool. Here's another one. Are there a lot of companies using Apache superset or the pre-service preset service in the US? I'm from Mexico and I haven't seen superset on job posts. Oh, yeah, there's there's an awful lot. We've actually been getting some analytics around this a little bit and we've been putting out surveys and all sorts of stuff. We're trying to kind of gather this information around what those are using superset. Obviously, we know all the preset customers are. But the superset community seems to be full of several thousand companies using superset. There's huge ones and tiny ones and everything in between. So a lot of household names, but yeah, that we're seeing them from US, Mexico, India, China. That's pretty good. That's that's how I found out about one of our customers at Autinity told us that he was using superset and it was awesome. He even demoed it and that's what I got interested in talking to you. So we we found it out of found out about it the best way possible. Let me see if we've got further questions. I think that's it. Let me just check the chat. I don't see further questions. So we're pretty close. Oh, here we go. Oh, a really good one here. I'm glad I didn't miss this. Can superset import existing workbooks or dashboards from Tableau? Oh, no. Yeah. There's no automated import for table extracts and things like that. That would be a tough to crack, but it certainly would certainly would provide some advantages if anybody wants to chip in on that effort. Yeah, that would be fun. Yeah, get some good committee, commit car. Great question. What can you are there other tools that you can migrate from that that might be another way of phrasing the question. Not so much in an automated way that I can think of like I don't think there's too many kind of dashboard dashboard. You know, import export tools that exist in these because everybody uses different proprietary formats to define their dashboards and all the metadata that pertains to those. But what I've seen people do, they migrate off of other tools like the periscope or whatever and becoming preset customers. There are a lot of interesting kind of side projecty things you can do to kind of track what assets haven't been kind of code frozen or migrated over people build workflows to kind of progressively kind of shut them down on platform A and build them on superset of preset. You can do all sorts of fun things integrating, you know, slack bots. Oh, this changed over here. You need to port that over here. So it can be like any big migration. It could be. Everybody does it a little differently and it can be a lot of work depending on how. How much your organization is trying to move. And again, since each platform has different capabilities like our charts might offer bells and whistles that other ones don't. You know, it's not always apples to apples. So you can have right. Thank you so much for at time. So Evan, awesome talk. Really, I really enjoyed it, particularly the part that the dive into open source culture and why we're going to win. I want to thank the audience for excellent questions. Hope you enjoyed this talk. There's another one coming up shortly and we'll be right back. Thanks again, Evan. Thank you.