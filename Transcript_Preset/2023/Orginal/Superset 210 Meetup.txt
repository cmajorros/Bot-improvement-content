 Hello everyone and welcome to the superset 2.1.0. Release notes, sort of details meeting where we're going to be going through basically everything that went into this release. So you have a better understanding of what it contains. I wanted to go ahead and introduce the people that are joining us as panelists today. I'm Evan. I'm a superset PMC member. And I'm joined by Vila and Elizabeth, who are also PMC members and Sophie is a superset commiter. Elizabeth and Sophie and I all work for preset. And preset if you don't know already is a fully managed version of Apache superset. So you can use that if you don't want to worry about upgrading official versions or deploying securing scaling superset. And we actually at preset run a version of superset that's much closer to master than these official Apache releases that we're here to discuss today. But we do help support the community by building these releases and testing them and shipping them. And you know, we're dedicated to the supporting the community in that way. So we can all grow together and improve the product. So talking about this release, just the first thing you should know is it's huge. It's a lot of stuff. And since the last release there have been 1261 net new PRs that are going into this release. Some of them are actually from prior to 2.0.1. But this represents the first cut from master sense. Actually, I believe 2.0 Elizabeth correct me if I'm mistaken. But it was shipped April 4th. So we're, you know, a little bit over a month since it was released. We'll go into why in a minute. And Elizabeth is the release manager. So thank you, Elizabeth, for putting this release together. And if anyone wants to check out the full blog that we're going to be kind of covering today. The link is available there on your screen to grab. So what we're going to be covering today here are a few different kind of topic areas. One is the security alert that I wanted to bring everyone's attention to it. If there's one reason to upgrade to 2.1.0, this would be it. Well, there's many reasons, but this one's important. We'll go into that. And then we wanted to go into all the features and fixes and more. So there's a bunch of bug fixes that we won't go into because the list is very long, but we're going to show you some of the key new features in the product. We're going to talk about performance improvements and connectivity improvements and API improvements. And then we want to talk about what's next, which is, you know, an update on upcoming releases and how those may or may not take shape. And of course, how you can get involved with all of that. So starting off with the security alert. There's a blog post that you can check out, which I will stick in the chat that goes into the full details of this. But there was a CVE or a common vulnerabilities and exposures report that was identified by a company called Horizon 3. And the way this all went down was that they notified the superset PMC via a private email list that we have where security issues are reported by Apache and others. And so Apache and the superset PMC took action and a patch was shipped and Horizon 3 was kept in constant contact throughout this situation, trying to resolve the issue. And when the CVE was finally published a few days back, that's when it kind of opened the door for us to talk about this and make a public and this, have this presentation and blog post. So a lot of blogs went out. You probably saw word about this on the superset Slack. The documentation has been updated. But long story short, thanks to Danielle Guestbar for fixing this and getting the fix into this release. Long story short, superset was shipped with a default secret key that the documentation said you're supposed to replace. So if you haven't, please do apparently a lot of people didn't. And now superset won't run with that default key in production mode. So you should be safe if you're upgraded. You may or may not be safe already, but there's a link on our blog post to a script that you can use to check your installation. If you're running superset in the wild, but of course if you're using preset, you were locked down from day one. So you should be all good. But there's questions about that throw them into the chat and, you know, our host today can probably jump in and interrupt me to answer anything that comes up. But that's the short version of the CV report. But let's get into the fun stuff. The new features. There's a whole bunch of things that shipped with 2.1. And if we have time, we might be able to demo a few of these. I'll probably save the bulk of that till the end of the presentation though. So the first one to talk about is the categorical x-axis we call it or a nontemporal x-axis or generic x-axis x-axis. The idea here is that the control panel for the bulk of what we call the tier one charts, the newer e-charts time series base charts and several others that have an x-axis that was locked down to temporal columns previously is now opened up so you can add categorical columns to those charts. And when you do so, there are a few things worth noting here that there is a time grain control that is, you know, appears and disappears dynamically according to what type of column you've picked for your x-axis. And also there's some new capabilities involved like time filters have moved from this time range control down to the actual filters control section. But not only is it in a more reasonable place, but you can have multiple time filters. So you might have, you know, certain examples like if you have two time columns and you want to filter on both the purchased on and shipped on columns or they shipped on and received on columns. So you can find a range of things that way or several other examples. And a lot of charts were renamed with this too. So if you turn on this feature flag for the generic chart axes, some of the charts will be renamed because it removes time series from those. And this is on by default on preset and open source superset as well. So there's a blog post about the feature which you can read up on here. And if you're curious about the feature flag aspect of some of the things we go into today, there's also a blog post don't paste here about feature flags what they are with their life cycles are how to use them, etc. Okay, for our next toy horizontal dashboard filters. So this is a really cool one, particularly if you happen to be using the embedded dashboard capabilities of superset, but actually a lot of people are starting to report that this is kind of their preferred UI for filters regardless. But the idea here is that this is a dashboard preference that you can set by clicking the little gear icon in the top left if you have this feature flag enabled. And change the filter layout from vertical sidebar to a horizontal and as illustrated in the screenshot here, if there are a lot of filters they drop into this convenient little overflow menu and everything works just like it does in vertical mode. And this is on by do sorry it's on for preset users and off for open source superset users by default, but again, you can configure that if you wish. And we've got drill to detail and this has been demoed in prior. Meet ups so I won't just dive right into a demo here, but the idea is that you can now right click on most of our newer charts and better supported charts and you can drill to detail which by default will bring up this modal that includes a lot of more granular data so you can get a deeper context on the data that's being aggregated by the chart. And many charts like for example this pie chart picture you can also drill to detail by clicking on a certain item and picking a column. And when you pick that column it actually applies a little filter to the table that appears in the modal which kind of scopes that tabular data and you can remove that filter if you wish, you can also. And then that chart by clicking the edit chart button and that takes you right into the chart builder so you can kind of further tweak on your filter chart. But also yeah it includes pagination and then metadata bar up at the top to show you the data source used and you know the owners of it and everything. So we've got more drilling things on the way there was a state of drilling meet up we did a little while back if you want to check out the video of that there's a YouTube link here. And there's a question about filter sets and whether or not that's working in horizontal I believe that feature is has not been supported for a while and it's actually kind of on the road to deprecation so that might warrant a little further testing but don't think it's going to get a lot of support and the somebody wants to open up above fixed. And open up above fixed from the community for that. Alright and then excel support. This is one a lot of people have been asking for a lot of a long time with many issues open on the repo but as of 2.1 you can download XLS X files from the chart builder interface. And yeah open things in Excel. But it's right there alongside the existing JSON and CSV and image exports. And we've got one new chart in this release which is a new e charts chart, which is a sunburst replacing our legacy. And this one is going to be more performant than the NVD 3 chart also in case you haven't heard that NVD 3 library is deprecated and will be all of the NVD 3 charts over time. So the feature parity on this one is not quite there yet but it's very close and getting closer every day. And we do reach that parity will make a migration and a future version of supersets so the old chart just disappears and this new one takes over. And actually the removal of that those other legacy charts from NVD 3 and a few other unsupported ones are starting to take shape and some of this is going to start happening in superset 3.0 which we'll talk about a little bit at the end. So the feature into that one of dashboard and chart cross linking and people have always had kind of a difficult time determining which dashboards contain a particular chart. So this is a new way to look at that. So when you're in the chart builder and you're looking at a chart you have this. And you can see a data bar that shows you how many dashboards are impacted by this chart. So you can be very careful on editing a chart if it's in 100 dashboards or something like that. And if you want to see which charts or sorry which dashboards that chart is used on you can get the list from the little overflow menu here. And you can go and visit those dashboards to see the chart you're concerned with in various contexts that might have additional contextual data around it. And if you're looking at the charts list you can also filter by a particular dashboard to find the relevant charts for that dashboard. And then cross filters. Some of you may or may not have used the cross filters in the past. And if you have acted a little differently there used to be as the feature was being developed kind of an early prototype phase. As you could say where there was a check box in the chart controls to emit a cross filter. That check box has been removed and all of the cross filtering controls have been moved to the dashboard layer. So right where you if you have this feature flag enabled. Then right where you would have seen the horizontal filter bar control earlier. You now see this enable cross filtering check box as well. And if you turn that on you can simply click on say a pie chart wedge in any dashboard and it will emit a cross filter that goes to all of the other charts in the dashboard. And if they're eligible to receive that filter, they'll just do it automatically. And a few people have noted that there's not currently a scoping control for those cross filters and that's going to be coming back in the near future. As it's just being treated as kind of a bug fix so it's in the works. And then the SSH tunneling feature for database connections is another new one again as another feature flag that's that you would need to enable. And here's some doc links on how that works exactly. And the idea here is that if you have a database that's, you know, not available on the public internet and you have an SSH configuration you can add here when you're connecting a database, then you can tunnel right in and everything will work splendidly. So with that i'm going to go ahead and hand it over to viola is going to talk about a few more new things in this release. Alright, hi everyone and does my microphone work because I had to switch to another microphone. Okay, great. Yeah, so there is in two dot one we've focused a lot on performance improvements. So in previous releases, I think there was more focus on getting new features in and over time that caused kind of additional overhead in certain operations. So we had to start looking looking more at getting getting more performance code in and just kind of reducing unnecessary renders in the front end and similarly in the backend. So one of the big changes that that we've been working on and this is actually something that we've been working on for a longer time. But historically speaking, superset was actually kind of kind of a combination of multiple different apps. So there was a separate app for for the explorer view, there was a separate one for the dashboard view separate one for equal lab. And the idea has been to start consolidating these and bring them all into a single page app. And this is this is work in progress. So with every release we're moving more and more of these components into the spot. And we call it so right now the explore application has been brought into the spot or the single page app. And then this add slice view, which previously was one of these service side rendered pages. This one has also been brought in so it's a much smoother experience. And you don't have to wait for the server server to render these pages when you're moving from from one page to another. And on the dashboard, there is now this new feature flag called dashboard virtualization and dashboard virtualization makes it possible to defer rendering of charts that are outside of the view port. So especially if you have very big dashboards. This this can really save a lot of kind of front end rendering time. So if you enable this feature flag and I think there's some configuration options where you can define. You know how much outside of the view port superset is going to is going to render these charts. So that really kind of speeds up the dash the dashboard experience. And then both on the front end of the back end, we've done a fair bit of memoization. So in addition to kind of avoiding re rendering front end components. And we're we're memoizing a lot of kind of expensive operations and similarly kind of on the back end. There were some bootstrap operations when when you're rendering the single single page app that had to do these kind of very expensive. Kind of performance checks and other kind of similar things. So those are now being cashed and it just makes it much smoother and much more performance when you're moving moving between pages. A big change is supports for Python 3.11. So of course with Python is introducing new versions, new minor versions once a year. And I think the previous Python versions weren't that spectacular. So I think they mostly kind of introduced new functionality around, you know, type annotations and. Some other kind of more under the hood improvements, but. But I think Python 3.11 is really interesting because it actually brings a lot of performance improvements and apparently. Based on some benchmarks 3.11 is 25% faster than 3.10. So especially if you're running superset in big deployments upgrading from 3.10 3.11 can really save save some compute resources for you. And then one thing that I think it's worth mentioning here. So CSV downloads are now faster in superset. So we've actually collaborated with with the pandas upstream project. We've helped them identify, I think two regressions in over previous pandas version releases and I think this CSV download one was one where we identified one. Performance regression. So that's faster. And then in some of the pandas post processing operations when you're requesting chart data for charts. We've done some performance improvements there as well. So this was actually a community contribution. It makes rendering of very kind of or charts with lots of series and a lot of data points much, much faster. So even if you go and can go to the next slide. And then there's some improvements are kind of administrative improvement improvements that I think server admins might might find interesting. So there was this one previously if you wanted to use the alerts and reports and thumbnails feature. You had to configure kind of an admin service account, which would then be used to render all of the dashboards and charts. And we've now added this these two new configuration flags, which make it possible to execute these these renderings. You can define a list of different user types and then based on on that kind of cascading execution list, then it can then execute these reports or thumbnails as a specific user in superset. So for instance, if if you have very sensitive data and you're using for instance, rollable security and you want to enable thumbnails on your deployment, then you can set the thumbnails to render as the logged in user, which will mean that when when user a logs in, they're going to see different thumbnails than the user be. And that and the same also applies for alerts and reports. So in addition to kind of making it more secure, I think it also simplifies the deployments, because you don't have to have this all seeing service account that can execute everything on all databases. And then there's if if you're running superset in an environment where you want to have kind of multi tenants, tenancy like functionality where you isolate different user groups. There's nowadays these kind of customer filters that you can use to exclude what kind of user user user names or what kind of roles you can see in certain drop downs. So for instance, if you enabled the dashboard are back feature flag. Then then you can restrict what kind of roles you can see in those drop downs. And instead of offering every single role that that the superset deployment has, you can restrict it to being restricted to certain roles that that you want to make accessible to the regular users. And similarly for for instance, for for signing ownership of charts or dashboards to other users, you can add these base filters for what kind of users you can actually offer to other users. So some something that that I've seen being used is is a base filter which restricts you to only see other users that have similar bar back roles as you do. And then there was actually a long standing bug which made it very difficult to assign database access or access to all all data sets that are contained within one database. So so based on the documentation. You should when you're setting up your deployment, you should always set up the regular users to be using the gamma role and then you should add these kind of additional roles for for database access to to specific databases. And then previously if you gave the database access on database X permission to someone, then they would actually be able to access all of the tables and all of the assets on that database, but they weren't able to see them in the list view. So if you want to the dashboard view, you weren't able to see any of those dashboards that you actually had access to. So now that the database access permission actually makes all of those those objects that you actually have access to also show up on on the data set chart and dashboard page. Yep, just skip to the next one. And regarding API migration. So I think some people probably aren't aware that there's there's there's this V1 API that's underlying the the new endpoints in superset. So superset is a kind of a fully restful API that that makes it kind of simpler to to do technical integrations into your superset deployment. So if you go to your deployment, then you go slash, swagger slash V1, then you can access the open API specs. And you can actually query all of these endpoints and just makes it very convenient to see what kind of endpoints superset is offering and then you know testing them, you know, try to get the data. And there's been a lot of migration work into it done into this already, but in the two dot one release 12 legacy endpoints that were completely undocumented have now been migrated over into the into the V1 API. And they're fully documented. So you're going to find those under the this back swagger V1 path. And then general, this just kind of improves documentation and makes it much more discoverable and I've heard a lot of kind of good feedback from from users or kind of more technical users who who almost kind of prefer to talk talk with APIs rather than clicking around their their user interfaces. And then we'll see you next slide. So like always supersets always add some connectivity improvements in new versions and I think two dot one is is is is no different in that sense. So yet go to the next one. So I think most organizations have started migrating away from basic auth in database connections and just kind of looking back at what superset database connections looked like, you know, five years ago, it was probably for the most part just basic auth with user name and password and using some kind of a service account there. And actually superset started introducing new authentication protocols to various database connectors and and then, for instance, if you look at the tree no impressed the connector. There's a lot of different authentication options available there. So if if if your security people are kind of feeling uneasy about using basic auth. And you're using basic auth in your superset database connections. I urge you to take a look at the documentation and I think the documentation has been fairly fairly well kept up to date here. So if you look at your the database type that you're connecting to you should be able to find documentation for for how to set up your your authentication scheme to something else. Snowflake has also now added key pair authentication. So you can either define this or configure this as storing the private key on your server deployment or then you can then you can just provide it as a as a string in the encrypted extras. Alright, next slide. And for those of you who do some of these database configurations for your deployments, you might have noticed that some while some of these database connection forms really only kind of asked for SQL alchemy connection string. More and more these connection forms are actually kind of asking you for, you know, post name username password, you know enable SSL, you know, toggle, yes or no. And the database, the Databricks connection form has now also been customized so that it's completely kind of tailored to whatever connection connection options Databricks, bricks requires from you. And I think this is a really good improvement because the Databricks connection string was was really horrible before so those having those access tokens and the HTTP paths really required a lot of kind of trial and error before you'd actually get them to work. So I think this is really good good kind of usability improvement. Alright, the next. So here's here's an improvement that I'm particularly fond of and I think anyone who's using Presto or Treno in big deployments will know that when you're using SQL lab, you're going to be spending a lot of time waiting for queries to execute. So now in two dot one, when you execute a query in Presto or Treno, you're going to get this. This progress bar that that shows you how far along the query isn't and how far longer you have to wait for it to actually complete. And then there's also a button for this is track track job. So when you click on that, it's going to take you to your Presto or Treno cluster and it's going to connect you directly to the information page for that query. So so that you can see, you know, is it what the status of that query is. So this makes it makes it kind of much nicer to be able to kind of know what the status of your query is. Alright, and next one. So then regarding database connection connectors. So it. I think whenever we come out with a new superset version, I think we've been able to introduce at least one new database connector and and I think this was this was no exception. So. We've been actually collaborating a lot with with the click house team and as kind of some background about click house database connectivity from superset the click house has kind of historically speaking been fairly fairly painful experience. So click house, I think click house has a head, you know, two or three different connectors and they've all kind of work, but they never really worked very well with superset. And the click house ink team decided to develop a new database connector and that one actually works very well and they they added a superset DB engine spec into it. So there's an entry point in the old connector. That kind of automatically integrates with superset. So that's how they added connectivity from the click house connect driver. But the problem with that that approach was that it became very difficult for them to support different versions of superset because as the base engine spec evolved in superset. It was kind of difficult to have just offer one database engine spec that can then work with multiple different versions of superset. So what we did with the click house team was we moved over there, DB engine spec into superset and then we added full test coverage for for click house. So in the future, whenever we introduce new kind of breaking changes into the base engine spec. We should be kind of safe in assuming that you know if they're passing a click house should be fully supported. And during that migration process, we also cleaned up a lot of small small issues. So I had as far as I know a click house is now fully supported and then works extremely well with superset. So for BigQuery, BigQuery has had a cost estimation. So previously, I think it was presto trainer and postgres that offered cost estimation. So now this is also available for BigQuery. And then finally, superset has added support for rising wave. So rising wave is probably one of the latest really kind of interesting distributed sequel engines. So rising wave rising wave is actually it's compatible with the postgres wire protocol. So you can directly use whatever, you know, drivers are usually used for for connecting to to postgres. But then it's then it's a fully distributed OLAP system and it turns on streaming data. So so really, really interesting project there and fully supported on superset now since 2001. All right, back to Evan. Thank you for that. I'm just going to go ahead and pause the screen share for a moment so we can tackle a few of the questions that are coming up since there's lots of them. We will have a Q and a section at the end, but I just want to whittle a little bit here. Somebody was asking where they can find more documentation. Actually, we've got a few of these requests. So if any of our panelists have specific documentation for the specific parts being asked about that'd be great to paste links in the chat. But in general, I wanted to point out that people can either request links to the documentation that they can't find or point out any missing documentation in the documentation channel that's on the superset slack. So there's kind of a growing number of people in that documentation channel and we're happy to help you find what you're looking for or kind of take contributions. Either by, you know, people opening PRs for anything that's missing or just making requests on the documentation. In fact, recently we added a little tool called bug heard, which has just a little button at the bottom of the documentation page and you can either point out errors or point out missing items and we'll try to address those in our documentation working group, which you're also welcome to join. But we'll try to circle back to the requests that are about the access filters that VLIS spoke about and we'll try to circle back to some of these other ones that are about user administration and various others. So let's see, where are the other ones I wanted to capture here. Somebody was asking about passing parameters into the dashboards, but you didn't say exactly what kind of parameters. I'm not sure if you're talking about dashboard filters, which is very much possible. We could provide that documentation link as well. I don't have it handy, but if you slack me. That can work. If you mean something else parameter wise, like ginger templating, etc. Then yeah, just ask again and we'll try to cover that. Someone was asking about why horizontal dashboard filters are so popular. And I think one of the use cases we hear a lot about is that when they're in the left side column, they can take up some real estate. So if you have a chart that you want to see in a very wide format, it does squish it a little bit. So although that collapses to make room for the dashboard charts, having it kind of out of the way and up at the top has been helping a lot of folks. But also embedded is an obvious use case. As for mobile support, which was also asked about and how that affects mobile. Super sets, not very mobile friendly at this point to be perfectly honest. There aren't a huge amount of use cases, especially for content creation, but there are some use cases around kind of content consumption that we want to eventually support. So there will be hopefully a concerted effort around mobile support in the future. Someone asks about how charts in the dashboard are now opening in the same window as the dashboard when you click the edit chart link. And how can they open the new window like older versions. And the answer to that is basically that the edit chart button used to not actually be an HTML link, but a little bit of JavaScript functionality that would automatically pop it open in a new window. And this frustrated people that actually wanted to make an edit to that chart, save it and be back at the dashboard. Whereas when it was in a new tab, people would edit the chart, save it, go back to the other tab and see an out of date dashboard, which is frustrating and borderline dangerous. So now it's just an HTML link and like any other link on the web, you can command click it on a Mac or whatever the PC equivalent of that is so that it will open in a new tab with that modifier key. Or if you don't use the modifier key, it just goes to that page like a link should. Then somebody asks about the drill to detail improvement and whether or not it works in all charts. It works in most charts. But there's certain ones have a limitation, for example, the legacy charts, while the legacy charts might not all be covered, but a lot of them are. Those that are might not have the ability to right click on a single element of that chart, due to the limitations of the library, but a lot of those do have just a drill to detail in general. Option, which will just pop open the table with all of the granular data, but not necessarily apply a filter for the part that you clicked. All right, there's a lot of other ones coming in, but anyway, that's a few. Let me go back to sharing the screen. We'll go to our next slide. So translations are another area where we actually see a huge amount of improvement in the product in this release. Some of these languages mentioned here, Russian Chinese French Spanish Slovenian have been amended significantly Russian and Chinese in particular have by Chinese I'm Mandarin have been greatly expanded, I believe Russian is pretty close, if not completed. So, yeah, you can try those out if they help your use case, and if you find that anything is missing, I'm happy to help steer people toward either contributing on that front or making requests from those who can. And there is a new translations channel on slack as well. So if you're not not slack, please join, there's lots of channels to help steer you in the right direction if you're looking for something. And who knows maybe hopefully this momentum will continue. Hopefully, maybe one day we can figure out how to get GPT integrated to just automatically build these translations or something like that. But we're not there yet for now. We're just taking manual PRs in there. Very welcome. So let's talk about what's next. I'm just just stuff shipped with 2.1, but a whole bunch more stuff is on the way as always. So let's talk first about the big one, 3.0.0 are next major releases of superset is coming soon. And this is going to be built largely as sort of a reset of superset. It's kind of a simplification release. And it's going to have a bunch of breaking changes and a bunch of deprecations. And we're hoping that they won't rock anyone's boat too hard, but technically when you're using December these are semantic versioning these sorts of breaking changes need to be done in a major version and that is happening now. The window for these breaking changes is open currently so breaking changes are being merged to master. And the window for these breaking changes to be merged closes right now and one week. And that may change if it needs to be extended for some reason, but we're hoping that's not the case. And these breaking changes, another word sounds scary, but most of them aren't terribly scary and they've been going through the official Apache consensus routine on the Apache dev mailing list, which anyone and everyone are welcome to join. And these PRs are being merged pretty much daily now, but there's still a little bit more room to get a few more proposals and consensus gathering opportunities through before the window closes. I would say the bulk of these are around deprecation of old API endpoints old charts and things like that. And many of these deprecations are just happening by calling them officially deprecated and they would be removed for real and superset 4.0 were also flipping some feature flags and things like that. But there's a lot of work and progress and a lot of proposals that may or may not be merged as part of 3.0 time will tell, but anything that doesn't make this 3.0 release train will be shipped as part of 4.0 or at least be open. And so we're going to be able to do that for committing and merging in the 4.0 breaking change window, which will be down the road a bit. And many of these changes that you see on the board here, which is a public board, I can take up the link and send it. We'll be discussed at the next superset town hall and we also have released strategy meetings that Elizabeth runs as part of our operational model working groups. So I hope that you're welcome to, you know, join those if they want to know more about how this works. Okay, so projections on what might happen with 2.x.x from here. So 2.0, 2 to 2.0, not end would be the next patch releases of superset and these are generally things that are bug fixes or security patches. and not breaking changes. And we're generally supporting two versions of SuperSept back. So, you know, at the moment, we're going to be supporting 2.1 and 2.0. But as soon as 3.0, it's the streets, then we're going to be supporting 3.0 and 2.1. So, 2.0.2 may or may not actually come to pass, depending on the timing of 3.0, really. And also the severity of any security things that may come to pass fingers crossed. They don't. And now 2.1.1 is a patch released to 2.1. We're talking about today. That is actually going to be coming pretty soon. Patches are already being tagged on the repo. And so if you have any requests of bug fixes, specifically, that need to be rolled into that release, then go ahead and ping us in the release strategy group on release strategy channel on Slack. Or you can ping Elizabeth and I on GitHub. And we'll try to help you out and labeling those issues. But that will not be a feature release. And then 2.2.X is something that's basically unlikely to happen. But the idea there would be that it would after since 3.0, there's, sorry, sorry, since the repo is open for breaking changes right now, it's not going to be an easy thing to make a cut of the repo and ship that as 2.2 because that would include breaking changes and can't really be released as a minor release. So that theoretical 2.2 release would have to be a cherry pick release where we pull in features and append them to 2.1, which is difficult and kind of, you know, you can run into bugs and all sorts of different things. So that's not likely to happen, but you never know. Volunteers welcome. So that's I think the future of where we're going. I'm sure that raises a lot of questions. But we have a lot of other questions as well. So now's the time. Evan, can I answer one? So I'm into type an answer, but then I clicked on answer live. So now I have to answer this live. So, MultiSim was asking, MultiSim was asking about his Python 3.11 support that out of the box in the Docker image. It's not right now supported, but people are actually working on it right now. And I've seen people updating their PRs, I think within the last 30 minutes or so. So I think 3.11 will be supported on the Docker image fairly quickly, fairly soon. Okay, perfect. If anyone else from the panel sees anything they'd like to answer, please jump on in. If anyone else from the crowd has something they'd like to ask, please ask it in the Q&A tab. Again, a lot might have slipped through the chat stream. So put them in the Q&A tab. It makes it easier for a bookkeeping. Go ahead, Vila. There was a question about native, that's for native filter sets. And this is actually something that I'd be curious to hear the community feedback on. So as some background, filter sets was added, I think two years ago. And there was kind of high hopes for filter sets being a kind of a natural complement to the native filter system on the dashboards. But it turns out a lot of people who were kind of using it ended up not using it so much. And it's kind of fallen out of support. So I'm not sure if it works very well anymore. And there's been actually talk about deprecating filter sets altogether. But then lately I've heard of some people actually using filter sets in their production environments and being interested in using it. So before we actually rip out the code, I'd be interested in hearing, you know, are people actually using this? How many people are using this? And this is something that people actually think is is worthwhile keeping around. And I'm sure we can, we shouldn't be able to revive this feature, but it's going to take some work because I think it's kind of fallen out of this repair. Agreed. Okay, then there's a few more. Is there any estimated date for three.os release? And the current plan is that when the change or the change window for breaking changes closes on May 15th, that's going to be the essentially the Shah of the repo that we cut from. So from there, as soon as we cut a release, we're going to enter the phase on the dev list, which again, anyone is welcome to join and let me know if you need a link to that info. And we'll put out the release as a release candidate and then people are allowed to test it and vote on it for seven days. And if that gets voted down because a bug is discovered or something like that, maybe we can patch that and build another release candidate. And the process basically depends on how many release candidates and voting rounds we have to go through. So hopefully a short matter of a few weeks after May 15th. I know that's a little vague, but we're going to have to see how it all plays out. Someone asked about any improvements coming to custom chart creation. And there are actually a few things that are happening in that department that we didn't really cover here. And I'm not sure what exactly made the 2.1 cut. I'd have to check. But there are improvements of how charts in the work in the chart builder capacity that a lot of the controls can be now normalized and denormalized so that you can switch between charts more quickly. So if you're creating say a bar chart and you want to switch to an area chart to a line chart to a scatter plot, for example, then you can do that without having to re-enter a bunch of controls. And and it there'll be kind of applied from one chart to the next that you pick. And if you're using a chart that has some as a tarot control, like say you're working on a pie chart and you set the you know inner diameter to make it more of a donut chart, you move away to line chart, you come back to donut, that'll be preserved. So there's things like that. There's probably more, but that's what jumps to ahead at the moment. Somebody also asked about if there is any documentation or improvement to to build these custom plugins for their own deployments. And the answer is the the docs actually the blog post that Vila wrote, I believe is still the most current thing I would point to, but there's also a really great YouTube video and some other resources. If you want to hop on the Slack and join the customizing superset channel, there's actually a lot of threads about this and I can help point to the traditional resources or answer any direct questions on what you may be needing to do. Somebody asks about having the the ability to open another dashboard in the same window. I assume this is from the chart builder experience where you click through to the dashboard that contains the chart. I would assume that's doable. Maybe Sophie knows if any of what he's been asking for that, we could talk to some of the design minded folks in the community about how they feel about that, but I think we're open to proposals or pull requests on that. Let's see. Anybody see that any day I want to answer while I'm looking around? And maybe we do mind giving a general guide guidance on if people have specific issues or requests or the best way to submit them or if they didn't get answered in the community. Yeah, I guess it depends on the kind of issue and request. If it's more of a actual bug report, like you see something that's broken that's going to affect other people, then by all means open an issue on the repository and if you can give as many steps as possible to reproduce that issue using the example dashboard as an example data that would really help. If it's more of a feature request, like you have an idea of how you want to improve SuperSet, get up discussions on the repo or a great way to do that. There's the ability to create ideas threads and you can also hop into the Slack community channels with or without that link to help evangelize it and get that conversation started. If you're having a particular blocker that affects only you that needs troubleshooting and you want help with that, then there are many topical channels on the SuperSet Slack that's where people tend to do this. Just know that that's a volunteer community and not every question and gets answered. So, you know, I guess there's a little bit of responsibility to kind of help the people answer your question by providing lots of clarity wherever possible. And if you're able to help others people by answering their questions, you know, there's usually some reciprocity around that. I don't know if we want to try to answer the one about external RBIG systems. Maybe Villa can help on this one, but definitely I've seen people use an API. If you want to do bulk updates to roles, there's also the security manager class that you can customize and basically monkey patch that. There's probably a much larger discussion that we can have, but those are maybe just two quick ideas. Yeah, I didn't see the question, but I think this is a really interesting topic. And I think any kind of big deployments will end up having very big security managers and very customized security managers. And I think it might actually be a very interesting community event where people could kind of come up and show what kind of security manager tweaks they've done. Because I think this is a really, really interesting topic. And actually, something that we try to make sure is ending new methods into the security manager so that people can override those that we kind of try to keep the security manager evolving over time as well. Somebody was asking if there's any new way to integrate custom charts on a superset image. And the answer to that for the moment is no, not really. If you need any links to the documentation or videos about how to kind of deploy custom plugins on your release, just mention me on a slack thread. And I can provide those links. But I'll also mention that there have been some questions going around about what we call dynamic plugins, which would be loading a JavaScript bundle from a remote location and bringing it into superset kind of like you install a browser extension or something. We've got a lot of ideas around this, but we don't have any firm grasp on the architecture and how that's exactly going to be built right now. So that's kind of a longer term thing for the off on the horizon, but we do hope to get there. Can you get the UUID of an embed, embedded enabled dashboard via the rest API? And you don't want to know, I don't actually know the answer to that question, but I'm saying it out loud so I can hopefully find an answer and provide it later. Are we talking about the dashboard UUID? I think that should be returned in the API. I'd be very surprised if it's not. Okay, well, if you can't find it again, ping us on slack and we're perhaps in the debug together channel in that case. And we'll try to figure it out. Okay, let's see. I think some of these other ones that are open might be a little bit difficult to tackle here. So if you didn't get your question answered, I think the best way again to reach us would be to ping us in the seemingly most appropriate channel. And please only one channel on the superset slack, which I will grab the link to right now. For anyone that doesn't already have it. Okay, so I know we're leaving a few unanswered, but I think we'll probably wrap this up here, unless anybody wants to tackle anything. Okay, well, thank you, Elizabeth, and Sophie and Vila for helping out today. And thank you, everyone, for attending. Please, upgrade. And let us know what you think. And we look forward to tackling any additional questions we're able to and steering toward the next releases. Thank you so much.