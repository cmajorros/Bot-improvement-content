 Okay, well welcome everyone. Thanks for attending today. Today we're going to get into everything that's going on with the Apache Superset 3.0 release. So looking forward to telling you all about it. I wanted to introduce the panel today. I'm Evan Rusakis. I work with preset. And we also have Mike Gamelina and John Bodley from AirBnB as well as Danielle Gaspar from preset. And all of us work on Superset and our PMC project management committee members. So if you have any questions about Apache Process, we're all able to answer those. And what we're getting into today is everything 3.0. So it's worth mentioning that Apache Superset 2.0 came out in July of 2022. It's been a little bit over a year and 2.1.1, which is a patch released for the long term supported version of Superset just came out a couple of days ago. So this represents a new major version, a new bunch of changes will get into. And also represents a lot of growth in the community. In fact, the community is grown. And we've grown by about 50% since 2.0 came out. And there's nearly 12,000 folks on Slack today. So thank you all for being a big part of this big release. And there's a lot in it. We're going to cover as much as we can, but just kind of hitting the highlights. If you want to interact with any of us and ask questions and so far, there's a couple of ways you can do it. And we're going to be joining the Superset Slack workspace, which I'll drop the link to in the chat. And the other which we're going to do a little bit differently today than we usually do is allow Q&A not by zoom, but rather we're going to use a Slido. If any of you have used that before, here's the link. I'm dropping that in the chat as well, or you can snag the QR code or just type the link if you're going to school. We're trying to keep an eye on those questions as we proceed through this and panelists please stop me if we need to discuss any of those. So talking about what's generally in this release and the broadest of strokes, there's a lot of stuff that's been deprecated and removed because this is kind of a reset release. And we'll talk about what that really means, but there's also of course new features that come along because this is a new cut from the master branch of the repository. And a ton of bug fixes and a whole bunch of migrations that support all of these features and fixes and deprecations and removals going forward. So we'll go through that whole list. And what a major release really is following semantic versioning or December is a chance to make breaking changes or remove legacy things, legacy code stuff like that. So we created a new process to gather consensus via Apache means by using a get a project. It was basically a giant con bond board where people could submit requests for breaking changes that would make it into three. And then we sent those as batches to the Apache mailing list for official consensus and then those changes, according to the proper timelines started making their way into the getting merged into master during what we were calling the breaking change window. And we've learned a lot through this process. We think it went a lot smoother than two dot oh, but there's a lot of things we think we can do to continue to smooth out and improve and speed up this process. So we're going to be continued to iterate on this as we start to think about what four dot oh is. And we'll go into all the nuts and bolts of how this process did work and could work in a future blog post and kind of solidifying that on the superset wiki going forward. So how big is three dot oh, let's just talk about it in sense of numbers. There were 39 database migrations for 301 fixes. There were 377 features and 305 other things that just kind of didn't go lumped into any of those prior categories. Long story short, it's a lot of stuff. We won't be able to cover it all today, but we're going to try to get into what we can. And these are the fine folks that have contributed the most PRs that have made it into this release. So thank you to all of you in particular, I know a number accounting PRs is not the best measurement of like engineering work or anything like that, but it's the best we've got the hands. So thanks for contributing. And the top two people are on this panel. So we've got the right folks here today. That's exciting. So let's get into some of the breaking changes. These are the things that will likely affect you when you upgrade from any prior version of superset, whether it's 1.5 or 2.0, things you'll want to know. The first are some security updates. So Daniel, I'll just go ahead and hand you the mic to give us a little update there. Yeah, so 211 came out two days ago and 3.0 that we are talking about brings some important security fixes. Also, it's really important to update. We are planning to increase our cadence on patch updates going forward. So report is security fixes around a patch will get out more quickly. So I've seen and that's really important to increase interest on by some really important and very talented, severed security companies, reporting fixes that they find with really thorough scanning and testing of superset that is really valuable. We are planning also to enlarge our community security team going forward and to better handle and the necessary fixes and we are also continue to ensure that a patch superset is secure but default at all times. So we have improved our continuous integration pipeline also to catch any possible our problem of security problems as soon as possible. Thank you very much. And also, I don't have the leak handy if somebody else wants to dig it up and share it, but we have a blog post that we published pretty recently about how this whole Apache security process works with the superset project if you'd like to know more. All right. So deprecation time we've had a lot of APIs and superset for a long time and a lot of them have been deprecated in prior phases, so whether it's 2.2.X. I should say or prior versions to that even. So it was time for some cleanup and 3.0. All of these ones are being removed. We're not going to talk through these, but you can grab a screenshot, check the change log or we'll write a full blog post about this later. Then. Let's see. It's progressing there to goes. Okay, so these ones are APIs that have been newly deprecated and what that really means is that they've reached their end of life and they're going to be removed in 4.0. Because of semantic versioning we can't remove things prior to that because it be a breaking change. Then we also have some new APIs that are enabling some of the new features and superset and enabling some of those deprecations that we mentioned as well. And these ones are feature flags that are going to be removed soon. These are marked as deprecated. So if you were using and configuring any of these flags, you probably won't need to going forward. You can ask about any individual ones if you need to in the questions. These ones have been removed because they were previously deprecated or simply unnecessary. So they're out in 3.0. And these ones are features that have essentially stabilized. So they've been moved from false in some experimental state to being true. The feature is on by default, but if you wish to turn it off in your deployment, you are still able to. These are new feature flags, which are new features essentially. So we'll get into those in a minute. Actually, two of them were just from configuration that they were bullion. So we call them future flags now. One of the biggest changes that people have asked about forever is the filter box and dashboards where is that going? What's the future of it? And it is officially now deprecated. So we highly, highly recommend that you migrate your dashboards to using the dashboard native filters feature, which is the left side bar you have in your dashboard tool. And now, thanks to the kind of folks at Airbnb, we've got migration tool. I don't know if you want to mention anything specific about this john, but you're welcome to, but and if you'd like, but there's a CLI tool that will change all of your filter boxes automatically into native filters. And on 4.0, we're going to basically force that migration converting everyone's dashboards for you, but now you can do it at your leisure. Let me know if I missed anything key john. And that sounds good. All right. Then chart updates and Michael feel free to elaborate here if you'd like, but there are some of these legacy charts, which use the old APIs, the old charting libraries and they have been migrated to their newer generally charts based components with certain exceptions. So when you upgrade to three.0, some of your legacy charts will be ported all relevant controls will be ported and everything should just work. We've also marked as deprecated the legacy bar chart, which uses the nbd3 library, so we'll kill that thing off eventually. And we deleted this preset chart x, y thing, which was not even being used by supersets. So that's just a cleanup effort. And also, I should note that you know if you're importing older dashboards into a three three.0 instance, those will be updated upon import. Okay, another security thing. I don't know if Michael or Daniel either of you would like to speak more to this. But essentially we're shipping CSP enabled by default. So if you have particular CSP configuration needs, you'll want to do that before shipping your deployment. So if you have a new one, you can just go ahead and do that. And then you can just go ahead and do that. There's just a few other deprecations. If anybody's using these legacy short URLs, they're not going to work anymore. If you're a plug and developer, then there are a couple of technical details that will just change how you write your code. Now we'll get into fixes kind of, but not really because there's way too many of them. And they're all too granular and they're all just kind of hard to talk about quickly. But there is more than 300 of them and they fall into these general categories. We're trying to speed things up, trying to make things smoother, more clean, more consistent, support more databases, support more features for those databases, just generally kind of build towards stability. So I think three dot O is a major leap in that department. And there's the link to the full change log, which I will go ahead and drop in the chat in case anyone wants to just kind of comb through those fixes and see if there's anything that jumps out of them. Okay, features. This is probably what you're really here for. So let's get into this stuff. I didn't know how to order these. There's some small ones. There's some big ones. So I don't know if I wanted to start with the good stuff or end with the good stuff. So I just went semi random. So I wanted to start off by talking about documentation. I think documentation is a feature. And we're trying to keep up with all of the changes that are happening in the code base and we need your help. So we added this. This little feature called bug heard where if you're looking at the docs, you can click the button in the bottom right and you can point at something on the page and either make a request or make kind of editorial suggestions, things like that. So come on in. You can also join us in the documentation working group or channel on Slack if you want to get involved more deeply and contributing. You've got a few other dashboard filter improvements. I won't read this slide, but you can configure a lot more in terms of how you set up your filters. You can we have a lot more support at various levels through the code base for time, grain support at the database level as well as the UI level and filters. And yeah, it's the mechanics of these things are constantly improving. We're adding small little features to make the filters more more viable. I don't know what the right word is. Catalog support. So a lot of databases support catalogs and we're trying to support that in additional databases. So these four made the cut for three. Oh, and I suspect we'll be hearing more about that going forward. SSH tunneling is now configurable in terms of timeout and as well as it gets imported and exported with databases. So you can migrate that around from instance to instance. If you need to Python has been upgraded to three dot nine and I don't know why those images are there. That's not relevant. I screwed up the slides. But in case I don't get to this later, we do have these new controls and cross filters, which I think is, and I really screwed it up. Okay, there's cross filters. We can talk about that for a second. You now enable them via the filters bar on the left. And you can also see when cross filters are emitted in the filters bar on the left and you can hit that little X button to get rid of them. Let's skip that for a second and go right into cross filters. We've added cross filters to the contextual menu, which you also use for drilling features, which are some of which are new in three. Oh, and we've supported additional charts like the fourth graph, which you can barely see there with this unnotable video. And the world map, as you saw on the prior slide. Now we've also upgraded cross filters indicators on dashboards. So you can see which chart is emitting them with the new icon that's easier to spot and understand. And you can also see the applied cross filters on any particular chart very easily. So you know what's affecting the visor looking at now let me back up to that slide I skipped earlier. Tagging system now throughout superset you're able to use tags. If you turn this future flag on to annotate your charts dashboards and queries with little tags of your creation. So you could better curate and organize your content. A lot of people have been asking for tags and or folders we went with tags since we believe it's a little more versatile. So take advantage. See. Okay, back in order. The world level security page is one of many pages that are in the process of working their way into react single page app that superset is becoming so that's the latest one to migrate away from a Python generated. So there's more of those coming SQL lab is in process right now. That's very exciting. It improves performance and all sorts of things. Translations have been a hotbed of activity lately. This is another great place to get started if you happen to use superset and speak or read a foreign language. This is an easy place to contribute and fill in some gaps. But we've seen numerous languages added. Also in supportive releases in general, we're adding telemetry a company called scarf has been kind enough to let us leverage their technology to to capture anonymized and aggregated data about usage. And the documentation have full opt out instructions if you'd like to do that. We want to be transparent about this existing and how to turn it off just in case but no PII capture. We're what we're really after with this is trying to figure out who's using what version in the wild. So if we see a bug or a security concern, we can know what versions do we need to patch how far back in history, do we need to care about this problem. How many people have adopted three dot oh at this point, these things are really important in developing the software. So if you can use it, it helps us. Another big feature request currency support and number locale, you know, the world's full of fun number games. Now we support those in a couple of different ways we'll get into here. One of which is you can set the the locale or the formatting of your number formats or you can set the currency in your config dot p y file. So if you're running your deployment, you can just tweak that and use those D three form matters and set it. However you'd like for whatever your local currency and number format is also again, the videos not behaving today. But what you can also do now is go to the data set editor or the superset semantic layer and you'll see new inputs for for D three format for any individual metric where you can add a currency. Yeah, you can pick the symbol and whether it's a prefix or a suffix and you can add a number format or there. So you can do this on a per column basis. And most of what we call the tier one charts are supporting this. So you can, you know, have one column of euros, one column of dollars or whatever you want to do. Conditional conditional coloring and big number charts. So if you wanted to do something that's sort of like an and on chart where, you know, if this number goes over a certain threshold that turns red. Now you can enjoy. Another video that isn't working, but what these all inverse legend selectors mean to describe it is if you're using one of the e charts like say a pie chart and you click on one of the items in the legend. It will try to remember if by default it selects or deselects that particular item in the chart. But in any case, you can hit inverse to invert that selection or you can hit all to select every every series in that chart. Come on slides. Make sure it didn't skip one. Okay. All right. Every once in a while we get a new country added to the country map plugin. This time we've got Sri Lanka. So thank you for contributing that if anybody else sees any gaps, please feel free to continue filling these it's another great way to add a somewhat easy, not not trivial, but relatively easy. First useful commit that other folks can leverage. And then drill by boy, another, I don't know why the videos are not be having today. But what this does to describe it is somebody says there's a pop up. I don't think so. That's it. Get everything. But, uh, drill by lets you take all of the tier one charts. And if you were to right click them. You can actually I got a blog post here. Let me just show you. It does this where you can right click on say a wedge of a pie chart, click drill by and then you get access to all of the underlying columns. It pops open a modal. This is a mixed chart. So you actually see two different tabs here. And you can see all the, the next level of granularity basically does a group by on your selected column and a filter for whatever, like in this case, wedge of a pie chart, you clicked. So you instead of having what people usually call drill down, we now have drill by which we think is a lot more flexible. So I'll drop the. I'll drop that blog post in the chat there. And press on. And then you can see the graph. Okay. Stream graphs. These have been added to the e charts. I want to I always want to say time series, but they do more than time series now. So we're just we're just calling them series charts. So whatever your series is, you can now view not just bar and line and area, but also stream charts with various forms of line interpolation. And then we've got a new deck GL layer, which is a heat map. A lot of folks have been asking for that. So dig in. We've also got a couple of more of these that are pending merge. So you can expect more fun deck GL stuff coming soon. And we've got the ability to sort the x axis or all series charts. So if you happen to have a categorical access or numeric access or any other type of access you can group controls over that. And you can also sort the stacking order of somebody can't see the link I shared is that the blog you're referring to. Let me know and I'll try to fix it. Things were sorted by the series when stacked in bar charts, line charts, etc. produce this sorted by me, but now you have full control over how you stack things. Yes, my link. Okay. Let me just. Oh, it's because I didn't share it to everyone. Thank you for pointing that out. Yeah, and if one of the panelists could share the link to the Q and I for anybody who joined a little later, that would be helpful. Okay, idea. They're ready. Thank you. Thank you. Then, yeah, so now another thing you can do in dashboards is export your full chart data as a CSV. But this comes with the word of caution. That's the feature flag, which is that if you have a gargantuan number of rows, you both your browser and your database are going to have a bad time. So use with caution. And then, you can use the ability in when building a dashboard, also to narrow the number of charts you have to pick from to simply show your own rather than everybody's which makes a big difference if you have a huge, hugely populated, supersed instance. So now is which is to showing your own charts by default is FYI. This is a surprisingly fun one that's been answering a lot of questions on Slack where people have always been asking how do they do random things in table, I conclude product photos or brand icons or whatever all sorts of different stuff. But now table cells support basic HTML and a little bit of CSS support. You can have some fun with this. I've got an example here where I just made a box with randomly generated colors via a group of SQL query, but you can do all sorts of fun stuff. Then we've got a couple of new databases that were supported. So thanks to all the folks who have put in those PRs to support star rocks and I'll see it in superset. I think I got through it in time. That's the main list of highlight features. So thanks for your patience, panelists, did I miss anything you wanted to talk about or add in you detail too. I think it's great. Okay, then let's talk about what's coming up next. So there's a lot of stuff. Part of it is how to upgrade to 3.0. These are just some kind of bits of advice you might say on how to upgrade. There are of course instructions on how to upgrade from any version of superset to any version of superset on the documentation page. But you know, usually after a release we get a bunch of questions on get up and slack and stack overflow and wherever else about some problem upgrading. So these are some of the things you want to do just to be safe and be diligent. Some of these we should probably move to the documentation honestly, but yeah, you're a mileage may vary on how that all goes depending on how you've deployed it and all sorts of different variables. There's too many variables to provide a perfect set of instructions on here are the exact steps you copy paste and it'll just work. I wish it was that easy. But you know, of course, you know, a couple of us happen to work for presets. So if anyone's having trouble deploying it and would rather not have that problem, we've got an option for you. Happy to talk about that of anyone's into that. Then, you know, next versions. Right now, the third release candidate. Thank you to Michael, by the way, for being the release manager on 3.0. That's a huge job. If RC 3 was just down voted on the official Apache emailing list, but it's still available for testing. So don't devalue it because it was down voted right now. That's the release candidate. It's the latest and greatest. So if you're able to run that and test that and look for any little bugs with databases or features or whatever you care about. Let us know what those bugs are. So the forthcoming release candidate number four can include fixes for all of those things because we don't want to keep releasing release candidate after candidate after candidate. So please test the last version. Let us know what needs fixing. If you want to get involved in the voting and testing, please just click or actually let me copy paste that. I can't click it. Anyway, send an email to this email address you see here and you will be subscribed to the Apache web emailing list where you can get involved with that voting and release process. I didn't go too deep on process earlier, but part of this release is enabling faster, not just major, but also minor and patch releases. So some of us in the PMC and including John and Michael from Airbnb are going to be working pretty actively to release patch releases much more often. So keep an eye on that and we'll try to continue to stabilize things as quickly as we can. And as far as these breaking changes go that you're seeing in three. Oh, we are starting to plan ahead for four. Oh, we don't want this to take another year to come out like three. Oh did after two. So we're going to try to start to kickstart this process as soon as three. Oh. Oh finally hits the streets. And we expect that by the way to probably happen in a couple of weeks voting takes a while. But if release candidate for has all the fixes in it that we need, then it'll come out pretty soon. And with that three. Oh release, it's worth mentioning that superset 2. X will remain supported for patch releases. It's the LTS version going forward until we release either three dot one dot oh, the next minor release or four. And the next major release another way of saying that I guess is we support the most recent major and minor. So we're kind of supporting two releases at any given time. And then if you want to learn or get involved even more, we've got a blog coming soon that'll have all of the three. Oh release notes ones that actually does ship so we can include any final fixes. We've got a superset town hall coming tomorrow. So if you want to discuss this or talk about getting involved in four dot oh or anything future looking feel free to join us. It's on the superset community calendar, which you can see on the superset website under the resources page. You can join us on Slack as pasted that link a couple of times we can do it again. But there are two main channels for releases one, the first one Apache releases is to kind of observe what releases are coming out or give feedback on them and the operational model release strategy is a place where you can get involved if you want to actually talk about like hey, can I provide a fix for that or I can't upgrade without a fix for this. Of course, one of the best things you can do for any open source project is tell the world that you use it. So if you don't mind by all means add yourself and your org to the in the wild page on the repo where at the bunch of companies that are using superset that really helps kind of you know boost our street cred and get the word out. Okay, so in a nutshell, that's the release that's going to be landing soon. Thank you all for your patience as I ramble. I'm assuming we probably have a lot of questions about the little futures and changes. I'll turn it over to my co host here to let me know if any interesting questions have transpired and feel free to ask anyone. Can you see anything on the slide? There's been a few little questions, but if you have questions, feel free to vote them up as well as we can kind of prioritize which questions we answer. Michael, you're muted by the way. Yeah, I'm just sharing you can go ahead to them. Yeah, I hear you now. John, but okay. Something we missed. Oh, I sorry, I'm sorry, apologies. Now just say there are a few questions of answer to some as well, but if people have questions, feel free to ask them and also up with them as well as we can prioritize which questions we answer. Okay. I think the first one is very important. The upgrade path from 1.3 to 3.0. Maybe we can just I think we can share the slide right here because it's pretty much the same steps from like any version from 2.0 to 3.0 or from 1.5 to 3.0. So it's pretty much like that's what we did at Airbnb. And even share we have like a spreadsheet here like a date is pretty cheap that we did. So we will look into all the proposals for 3.0 and then we had like all action items that we need to do to complete the migration. So pretty much to follow the same process here like backup your databases, careful read change log and update. This is really important because we have like a lot of breaking changes in 3.0. So those files are essential. The other things like adjust your feature flex and configurations because we have many like default values that change and some feature flags were removed others were added. So you need to check them and adjust your deployment. Check your CSP policy. Now super set by default has a CSP policy enable. So if you handle that using a third party software, you may want to disable CSP in superset or you may want to extend its configuration. So check that as well. Execute the migrations that are 39 if I'm having taken 39 migration. So that's why it's important like to backup your databases once you execute the migrations. And then for example, we have 30 party apps interacting with superset. So it's really important that you check all the endpoint changes and make sure that your 30 party apps still work. I think that's the main steps. Yeah, I think part of the question was because they're upgrading from a somewhat old version. So I think it's really important for a 1.3 I think. So does anybody on the call have a sense of whether it's preferable to kind of do incremental upgrades or can you just make the big leap. I think I think it's incremental is the best step. That's fast forward. So there are a couple of questions coming in. Oh, by the way, if anyone wants you can vote these questions up or down if the list gets long, please, you know, make them float to the top. So is when do we expect a 3.0 stable. Right now we're thinking it's fairly stable, honestly, being the fourth release candidate coming out soon. It's got a whole bunch of fixes that people have been finding in the prior release candidates, which is why we iterate. But also it includes all of the changes that are part of the 2.1.1 release, which is, you know, the most recent and stable patch release. It's, you know, two days fresh. So it correct me if I'm wrong. But I think all of those fixes are released. All of the most important ones. Are in 3.0. So we should be pretty good from both the security and stability standpoint. Yeah, I think it's important to mention as well that because we are increasing the patch releases. So if we have some bugs or is minor bugs in 3.0.0, they will be fixed like pretty soon in 3.0.1, like in two weeks or three weeks time. So at this point, we're more trying, we're trying to fix like the really ugly ones. But I think like RC4, maybe RC5, but I think RC4 should be sufficient. So pretty soon maybe next week or in the next two weeks, we have stable release. Cool. I found out why my videos didn't work. Google randomly logged me out in the middle of the presentation. So I was operating an offline motor, something weird. Okay. So there was a question about the currency formatters and can it be done by a chart instead of by config. So somewhere in the middle, you can do it at the data set level and the charts will respect that. So you can set default currency say US dollars for the entire deployment. But then if you have a data set that involves a bunch of euros or young or whatever, then you can set that at the data set level on the charts will reflect it properly or at least the majority of charts. The chart you need doesn't support it by issue. Well, we're coming. So let's see. What are the biggest user facing features? I hope we covered that in the slides. But if there's something you're specifically wondering about that might not have been included there. Let us know. But I think probably one, some of the bigger ones are, you know, the drill by feature. I didn't spend that long looking at it. I've covered it in prior meetups and blog posts and so forth. But that's definitely worth investigating. As well as you know, the continual shift toward each charts and more stable charts. Can you can you answer this one? I think like cross filters. Covert is one, right? Yes, we don't have the brushing capabilities specifically. That would be cool. The closest thing we've got to the brushing thing is in the series charts. You can configure. I forget what it's called, but there's a little scrubber bar that goes underneath it. You can kind of set the rain and move that around to affect that particular chart. But that doesn't. I think you may have a cross filter. But we do have the cross filters feature in general, which if you enable it via the filters bar on the left side of your dash. It will allow you to click a single bar on a bar chart and filter by that series or click a cell and a table chart and sorry, right click. Well, certain charts you can click like you can click a bar certain things like a table. You have to believe right click and emit the cross filter via the contextual menu that pops up. But yeah, all of the tier one charts now support cross filtering, pie charts, line charts, et cetera, et cetera. So you can emit those and most charts receive them. Believe more charts receive rest filters than emit them for the record. So it's pretty well supported in your dashboard. Yeah, maybe then you can you talk about a little bit about this CVs in Triletto. Yes, so every known CV is already fixed on the range of the versions where they are. So those are already fixed on two one zero on the link. And all the fixes that are in two dot one dot one, they are in Triletto as well. And Triletto has others as well. All right, I'll answer the one about the interactive plugin gallery library thing. Yeah, this is this is a bit of a dream that I've had for a while and I think others share this where the plugin architecture a few years back was pretty weird. That's why one of the deprecations we cover the slides was this biz dot p y thing that used to do some processing of the data for different plugins and then we moved it at least to the point where this plugins are just a single payload of JavaScript. Essentially, they don't require Python. So we're making strides toward that, but one thing we still need to do is make them dynamically loadable so you can just put in a URL to like a web pack remote module or something like that and load up a chart into your dashboard dynamically like the way you'd install a plugin for your ID or something like that. So we're still working on that. It's an architectural problem that needs some solving it, then it also becomes a developer experience problem where our plugin dev kit needs to be updated, which there is, by the way, if anybody wants information on how to develop plugins in the current world and use our little plugin generator. I can show you that. But yeah, we're not quite to the marketplace lowly yet, but we hope to get there with maybe maybe optimistically a four dot O architectural change. The aggregate map one is interesting to somebody is asking, you know, is there an aggregate map where you could show billions of points. This is not an easy problem. And heck yeah, I want a lot of people want it. There are at least two people that are working on this problem that I can think of in the community, different using different platforms. Some of these platforms charge quite a bit of money for the packages that power those. Some don't. So mixed bag. It's a bit of an open source question because you know we can't fully endorse something that costs a ton of money every month as an open source project. But there are some alternatives. Basically, we're looking into it. We've got a couple potential paths and trust me, when that happens, we'll be shouting it from the mountain tops. Oh, for translations. Yeah, keep sending those to the master branch. It's. Those translations are always useful for anybody that's just running off master. So the earlier the better. And they're not breaking changes by any means. So it never hurts. And then by doing that, they'll make it. Not only into the next major release, like the ones I was pointing out, but they could also make it into a minor release like three dot one or two dot two if that happens. Yeah, even I'm sorry, I'm trying to make a lot of them done as well. Do I go back to the top and I make sure we've answered all those initials as well. This one was this. This latest RC release table for every day use. Stable is we can make it, I guess is the short answer there. If test it, and if you find anything unstable, let us know immediately so we can fix it in the next release candidate. Yeah, I definitely don't recommend use them like for production environments or anything like that. Generally wait for an official release, but it's great if you can help us like test and make it more stable. Yeah, that's right. I guess it depends on what you consider every day use. If you're just, you know, using it locally or something, go for it. Yeah, but you've got a business depending on it that you might want to let it bake them in actually land. Oh, folders on dashboard space. I think we have a seep about this, right? Oh, you mean for organizing dashboards, I presume kind of a content organization thing. Yeah, I think there is a sip floating around about that. But for right now, the best feature that you can use that landed in three. O is the tags feature. So if you turn on that feature flag for, I think it's tagging underscore system, then you can go to the top right menu in the UI and you'll see a little item that says tags. And when you go in there, you'll get a whole UI to filter your content, whether it's dashboards or charts or saved queries by the tags you've created. And for something like a dashboard, you would go to the dashboard properties and you can apply or create any number of tags to append that dashboard and organize them in that other view. Hopefully that ramble made sense, but tags work. Try them out. Oh, there's a question about preset moving to three. O I can answer that one. So preset when we do releases, we don't use the Apache official releases. We actually have a team that constantly is either cutting or pulling and changes from the master branch on super set and we have our own whole kind of additional layer of QA and testing that goes into each of our releases. And we release far, far, far more often than these official Apache releases come out. So all of the things that are in three. O have already been out on preset, some of them for quite a long while. So we tend to kind of stay toward the bleeding edge more than the official releases. So hopefully that answers that. But if anyone has other questions about preset, you can hit up the vendor preset channel on Slack or DM me or whatever. Handlebars question. Sorry, I skipped one, but yeah, just it jumped out at me. So bar is not likely to support JavaScript. In fact, probably anything in superset going forward is less than likely to support arbitrary JavaScript input because that comes with a boat load of security concerns that we would just rather not have excess has related things. Probably not, but also there's a lot of improvements to make to the handlebars plug in which I think is one of the coolest things to come along in a long time. So we want to stabilize that and still hope to provide a bunch of examples in the blog post once we work out a couple of little kinks. Yeah, some people rely on past features that have been deprecated and they built on top of, is there a reason so much is being deprecated in a single release. Yeah, a lot of it is just paying down old tech that some of this stuff has been coming for a long time. If you have any particular features that you've built on top of that you rely on, then I guess there are a few options one would be to, you know, not upgrade that's one option, obviously, but the better options I think would be either to adjust your fork to kind of rekindle some of that foundational technology that might have been removed or it would be possible to open up a PR or even an improvement proposal as a GitHub issue and say, hey, I rely on this functionality. It was removed. I need this part of it back for this reason, you know, make a case for it. And if there is something that was removed and shouldn't be removed, maybe we can find a better way to support it and maintain it. So it's most of the stuff we deprecated was deemed kind of unmaintainable. So that's the main reason this kind of cleaning house trying to speed up the developer experience trying to make it easier to code and test this application. So there's going to be more chopping that's going to happen with every major version. But if anything died that you're particularly worried about. Let's talk. One important thing here as well as all this process and all things that were deprecated, we gather consensus first, right. So we submitted like any mail to the database with the proposals and then if someone everyone had the opportunity to object on each proposal. So that will happen. The same thing will happen for photo will like deprecate suggest or propose more deprecations for photo and then you can vote for requests that a specific feature is not removed. In fact, I think we removed some of the original list, right, like that people, oh, we don't we can't remove that part of the code or that specific API for that reason and we agree. So I think it was like consensus. Yep. Being in a patchy project, everything that involves consensus is on the dev mailing list. So join that list. Somebody can send the coordinates if needed, but if you want to be involved in those consensus making decisions, that's that's where you want to be. Skipping ahead of it, there's an interesting one I can one tackle, which is why was drill by chosen over drill down. A couple of reasons. One is that to do drill down the way people most people think of it, like, you know, click a bar that says country and then you get the bars with states, click the state, the cities. That requires explicit hierarchy that you'd have to set up in your semantic layer and somewhere and that requires labor that is a lot of setup for a lot of people and. So what drill by does is it allows you. So you can just to do exactly that like you can click the bar that says country and click state and boom you've got it, but you can also click country and select manufacturer and drill a different direction. So you have much much greater flexibility and how you drill into your data. As well as providing that fundamental drill by functionality. Now that's not to say we can't also. I'm sorry drill down that's not to say we also we can't also drill down in the future where there is an explicit hierarchy and have the best of both worlds, but the drill by thing provided not only the flexibility, but a good foundation to build upon. Let's see. Does anybody have an answer to the one about migration steps. I mean, I think we kind of covered that in the earlier slide, I think basically follow the. Follow the instructions on the documentation site with some those bullet points of things to kind of watch out for. But you know, do it in a test bed environment sandboxer for you to be the wise move. Yeah, I think we can also add that like use these like channels right because we have like a lot of like channels like people help each other during the migration process and then we have like a lot of different environments like installation environments. Someone is using Docker someone is using arm someone is using using help someone is using like pie pie releases. So this like channel is the best place to get help for your specific deployment type. So use the channels that will be really available. And asking about the filter charts, a filter box and will that be available in superset 3 yes it is available, but this is the last major version that will have it. So 3.0 includes that migration script that you can run on the command line and migrate all of your filter box components to dashboard filters automatically. But in 4.0 we're going to force people's hands and run that migration for them and that will be the end of the filter box. So if there's anything that the filter box does that is essential to your operation, then. And you know, let's talk about what needs to be added to the new dashboard filters to support your needs going into 4.0. So the more complex conditional formatting and charts there. I mean, I think that's one of those things were to say what so many people say an open source PR is welcome. There are some folks that are asking for things that are more specific like instead of doing gradient conditional formatting and tables they want to see just, you know, the solid color more like an end on chart we were talking about earlier. But yeah, if you have needs you can either open a ideas thread and GitHub and try to find some people that will help support this and commit the code if you're not of developer yourself. Or if you are developer then join us in the contributing channel on slack and let's talk about these features and maybe we can help steer you along, but I don't think it's on preset or Airbnb road map just speaking for the people that are here on this call today. I can take the next one are we planning in kind of option to clean up the metadata. Yes, like for further we already have like one tab specifically to like to remove old tables or broken relations from the metadata database. And we have a lot more coming in the next major release. If you search for super set through that old project and GitHub on GitHub you will find like the project board and all the tasks that we are already planning to tackle and for that all. Alright, somebody's asking about clicking on something like a button on a chart to trigger an API and point no, nope, that's not anybody's road map that I'm aware of right now. So it's a it's a fine idea. I would say again GitHub discussions or where this kind of thing is. A good spot to drop an idea and get a conversation going you can do it on slack too, but I think the get the ideas threads and get up discussions tend to get a little more traction over time. Okay, so where we get this whenever meet up, but when will the complete e charts library be available, never. Because e charts is like a framework to build custom visualizations. It's not like a set of charts. It gives you the capability to build most charts you could dream up, but it's not a set list of things we're just going to go down and tick off the boxes and add some of their examples like the cuts of beef chart is always the one I go to we're not going to add a cuts of beef chart to superset. But if there's something that you feel is lacking like in terms of a feature from one of their many, many bar chart examples, we can add that control to the bar chart in superset and make it more flexible. So we can we can definitely add missing ones we want to add a waterfall we want to add a bunch of things that. So if there's one that you'd like to add by all means open a PR started discussion, if there's a feature lacking a tweak you want to make we can add controls. But no, there's not like a full list we're just going to turn through. Yeah, there's always the option to use plugins as well, right? Like if there's a chart that you don't have access to, but you want, then you can create your plugin and use it. And we're also not limited to each arts you could use and V or VX or whatever other, you know, whatever other job as script thing you want to use in theory. As there logging process for security improvements. Like a limited amount of tries. Oh, you mean like a fail to ban that sort of thing or like if you log in unsuccessfully three times we boot ban you. I don't know of anything like that. We have, yeah, we have rate limiting enable is a lot of stake in and also logging, but then you can. Yep, on on so far for playing out indication for database authentication, we have the right limiting that will apply to every type of login and every type of authentication itself. Besides that integrating superset with active directory or other identity providers will get you the ban with authentication failures, but simple database authentication will not for now. We've got two minutes till the top of the hour. So I think I see a question I would like to end on the rest of these will follow up and continue to answer on slide. Oh, and we're going to leave this slide open for a few days. So if you have questions that come up later, or someone sees this on YouTube, hello, people from the future, then please continue to ask questions here and we'll do our best to address them. But somebody was asking about the project roadmap and they found a link to an old one that was a bit of an experiment. We that yeah, that experiment didn't really work out for reasons, but there's a lot of discussion around how we're going to kind of solidify a roadmap going forward. But if you want to get into that, I would suggest coming to this thing that's tomorrow. Everybody is welcome. Everybody is encouraged. It's the superset town hall. And again, you can find the superset community calendar that includes an event with the zoom link for tomorrow morning. And this is where a lot of, you know, a lot of superset folks just get together and talk about what they care about what's coming up, what problems are we facing, how are we as a community going to address X, Y and Z. So if you want to get involved in that conversation, that's great. If it doesn't fit your time zone, we can move it. We're very accommodating. We share out the notes for input. And you know, after the meeting, so everybody's aware of what we talk about on the Apache discussion list. But yeah, town hall is a great place to come and talk about roadmap stuff. And we are trying to formalize that process. So we will definitely keep you in the loop. We all want that. All right, top of the hour. Thanks everybody for joining us today. Sorry we didn't get to all the questions. We'll do our best. But thanks for joining us and let us know what you think of three dot oh. Good to see you. Thank you. Thanks, Goose. John Daniel, Michael, thank you. Bye everybody.