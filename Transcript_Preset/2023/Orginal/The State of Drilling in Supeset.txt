 Today, we're here to talk about the state of drilling in superset. So this is interactive drilling operations, and we're going to go into all the different flavors that this takes in superset. This has been one of the most commonly requested topics of conversation on Slack and on GitHub, and anywhere else people asking, what is the situation with drilling in superset? When will we have drill down or other forms of drilling and wondering how they can get involved or get some context on what's happening? So that's the point of this. But first, let's talk about who's here that you see as panelists. I'm Evan Rusakis. I'm a developer advocate. I work with preset, which is a SaaS host diversion of superset. And I'll just go ahead and rattle these off if that's OK, folks. So we've got Kasha, who's a designer at preset, and Sophie, who works in product at preset. And we've also got Mel and Ryan from the CCCS, the Canadian Center for Cybersecurity. We'll go into some detail a little bit later about what exactly they're doing with superset when they show us some cool new stuff. So the goal of the day is to tackle a number of different little topics here. We want to demonstrate where we're at in terms of drilling operations in the product right now. What's already shipped? We want to clarify some of the nomenclature that we've been using internally or in small groups. So each of these little features of drilling have their own names. And we just want to make sure that everybody's talking about the same thing when we discuss these. We want to show you what's on the pipeline or on the, coming down the pipeline or on the horizon and show some Figma previews and prototypes of what's in progress. And we also want to get ahead of some of the questions that we're hearing about future decisions and what we may or may not actually be tackling in this realm. And then of course via the chat, we want to kind of get some of your feedback and questions. And we also want to give you some resources so you can have more conversation with us going forward in different for us so you can stay connected and get involved if you feel like it. So let's start off by talking about what exactly comprises the world of drilling, at least thus far in superset. The first thing we shipped was a future called Viewers Table and we'll give you a demo of that. But that was basically what kind of opened us up to this little world. And then a drill to detail happened, which is available on the end of future flag. We'll go into that, but that shows you much more granular data of the charts and dashboards looking at. And then we've got Drillby, which is a cool new thing in progress. We're going to give you a sneak preview of that. Drill up and down is what people often ask for. They say, when can I get Drill down? But the definition of Drill down varies from product to product. We have our own. So we're going to go into what exactly that means in terms of the semantic layer and hierarchies and the pros and cons of that. And we're also going to show you the latest and greatest in cross filtering, which is not necessarily drilling, but certainly related in scope. And then also a new feature that's in development called Jump to Dashboard that relates to this world as well. First off, starting with what's shipped. What can you actually use today that is available, whether it's in a superset official released version or on master? We'll start there. So view as table, as I mentioned, is the simplest incarnation of drilling. I'd be hesitant to even call this drilling per se. Really what this is is if you look at a chart like this, on my little handy dandy community dashboard, you can view as table and you see the actual data that powers the chart you're looking at. Really, it's no more and no less. These are the actual data points that comprise this little area chart. And it just gives you the ability to sort them by various means and search within those. And it's just a way to dig around the makings of this exact chart that you're looking at. It's pretty straightforward. No feature flag or anything that's just live. The second version, which is significantly fancier, is drill to detail. And this is also shipped. If you want to turn this on in your superset environment, if you happen to be running one locally or your own deployment of superset, then you need to enable the drill to detail a feature flag. And what this really does is it gives you a couple of means to essentially click on the chart, charts that supported anyway and add a filter and drill by a couple of different areas. So it depends on chart implementation. But you can right click and you get this little contextual menu. And you can drill to detail just generally, which shows you a query of the underlying table. So these are the actual bits of data that make up that chart, including all of the columns. So you can get a lot more granular information here and a lot more dimensionality to it. And if you want to get a little more intricate, you can drill to detail by different things. So in this case, I'm clicking on the area chart and the little marker so I can actually drill by the specific date. And I get all of the stuff for that date. And it applies this nifty little filter, which I can remove. Or I can drill by a drill to detail by the specific type of, in this case, get up action. And so you get a lot more control of how you want to see the underlying data with that feature. And it's also using that table you decide is the new and d table, which is part of our design system. So that's an evolving thing as well that will be getting more and more features to kind of have some control over. Eventually filtering, sorting, searching, that table, all kinds of fun little toys. All right, then I wanted to talk about cross filtering a little bit. This is definitely related to drilling. I wouldn't, it's not called drilling on purpose. But this is a way to kind of dig around in a dashboard and kind of get a little more insight into things by, sorry, pardon the garish green air. I was screaming around this in customization. But here you can essentially click a segment of a pie chart and all of the other charts in the dashboard will update by applying that filter. You can see the filters that you apply when you're cross filtering over here. And you can very easily remove them in that context. If I want to filter this, it updates the charts, the colors in this charts day, the same, which is fantastic. And of course, it's bi-directional. So any chart that you emit across filter from will kind of dim out the other chunks that shows you that it's emitting across filter and that cross filter is applied to all of the other supported charts. You can see the filters being applied both here and here. So you're very contextually aware of what's being sent out by and ate this cross filters. You also have to enable the dashboard cross filters flag. If you want to use that in your deployment, this is turned on by default and preset with the record. And let's see. This is still a feature that's very much in progress. In fact, just yesterday, a couple of changes were merged here. So in my little lightning quick demo there, you saw some of the old iconography. Now we've got some new icons and filter indicators. And a lot of the flows here have been updated. So you can both add and remove cross filters via clicking the supported chart like the Wedge of a Pie chart. You can use the right click contextual menu just like you will with drilling operations. That's one of the relations. So you can emit across filter by right clicking and you can remove the cross filter by the contextual menu or those other means that we're showing you. So there's more of this stuff on the way. Now what's in flight currently decides that dialing in the cross filters. Drillby is, I think the most exciting thing that people are here to hear about. So instead of me rambling, I'm gonna go ahead and hand the microphone and the screen over to Kasha who's gonna walk you through a little bit of where this is all headed. Away. Okay. So let me just quickly share my screen. So I'll give you a little bit of the context around drillby. So when we were talking to users and when we were basically just seeing the feedback people wanted drilling, but when we were talking to them like more in depth about it, everyone had different definition of drilling. So for some, as I've mentioned, it was cross filtering, some where people were mentioning like drillby, drill up or down. And like everyone had a different definition. And then what we did, we also tried to research as much as we can about all of the drilling features. And it turned out that like also other BI products have different definitions around like drill across all drill up, down and so on. So we did a few user testing interviews and like we tested the prototypes. And we found that like the easiest way to actually start with drilling would be to like after drill to detail and give us a table, would be to start with something we are calling drillby. It is not like an endastry standard name for this function just because like we couldn't really find the best benchmark for it. But like what drillby is it's a feature that uses filter and group biologic. So I will show you that in a prototype in a second. But basically imagine you have a pie chart and you click on a specific slice, it will act as a filter. And then you can select a column from all of the columns that are available in the data set. And this column will act as a group by for this slice. So you will have a new chart and you will be able to explore the data that you have in this specific chart. So it's kind of like a drill down but without this semantic layer just because you have access to all of the columns from the data set and there is no clear relationship in which direction you should go. Like you want have just one. For example, you have country and you will drill down to CT. You will be able to drill down or buy whatever you want. So like with drillby we've got I think free outstanding pros that we could still that are kind of why we are starting with it. Like it will allow us to actually better define how users use drillby and drilling actions. So then you will see if we actually need drillby and up or do we need something else, we will be able, it will not stop us from introducing more features. It is just a good base layer for that. And of course, like we've got this flexibility because we don't have those defined relationships. User can select any column that is marked as as as dimensional. And like it also allows us to implement this feature faster because we do not have to really worry about this month of clear and figuring out like where and yeah, where it would live basically. So like that's an intro on drillby. And how does it work? Imagine you have this chart with vaccine candidates per face and you want to explore more the phase one in here. So you right click on it and you see that you have drillby. And in here you have all of the columns that are marked as as dimensional and your data set. So you would like to see the like how the phase one is divided into treatment versus the vaccine. So we just click on it. And when you what you get you get a model in here with the chart altered when you have like the base chart. To the base chart, we applied phase one filter and we grouped it by this treatment versus vaccine column. So and here we've got the chart and you will be able to also access the table and which you'll have the drill to detail details. So you'll be able to see like all of the underlying data that composes this chart. And for now, this is like a linear flow where you can apply as many kind of drillbys as you want to this specific chart. You can hear you've got the breadcrumbs of all the details. And let's say you want to explore the like phase one vaccine more. So you click on here for drillby and you can again, vaccine will act as another filter and country will be another group of eyes. So like we get to another chart, which is like more in depth exploration of this data that you have on hand. So like this is the V1 of drillby what we at least what we consider it to be. And when it comes to that timeline and the next steps, like we are aiming for a mid of the year to ship this thing. It's actually being taken up. So it's in progress. So we are hoping that it will be implemented sooner than later. And our next steps will be to of course improve the flow. I will show you like one mock that we are thinking about what we could do with this whole feature. And we'll also be of course gathering feedback from the users about drillby and how do they like it, how do they use it, and see where we can go from there and like what is the right for us. But as I mentioned before, like drillby does not require a disemounted player. So what we are thinking maybe like in this drop down in here, we could have sections which for example, will be like recommended columns. So let's say you have a specific call, specific column like a country, then you could have recommended column, which would be a city or something like this. And then you could also have a section which would be something like most used, which would be defined based on like how like which columns users choose for drillby for the base column in a way. So like there are many possibilities that and many things that we can do with drillby not only like just jumping to drill down and implementing an extra down or up. But yeah, we'll see how it will actually go. And that's the preview for now. Thank you. Thank you very much. So we're going to go in later. We're going to go into a little comparison between this and drill down a little bit more specifically to talk about some of the pros and cons of the drill down feature. Also, as mentioned, we are looking for feedback on this feature. So if you have any questions you want answered during this, great fire them away in the Q&A area. Or you know, you can I'll give you some coordinates to reach out to all of us on Slack and other venues at the end of the presentation. And while there's one question right there that somebody is asking if these features will be superset only or are preset proprietary. And I believe the answer is that pretty much everything will be superset available. Preset may lay around some little minor bells and whistles and customization to make it work for our customers at some point. But we generally try to contribute some of the newer and larger features to superset properly. OK, so then I will go ahead and share my screen again for just one more moment. And this is not the slide I was looking for, bear with me while I forget how to use a computer apparently. This is the next thing I wanted to talk about. Actually, I'm going to be handing the microphone over to Mel and Ryan from our friends at the CCCS to give us a preview of another related feature calling, we're calling jump to dashboard. So we'll get a little Figma preview of the design and a bit of a demo of where it currently stands. So take it away. Thank you. Let me share my screen. I apologize. I do not have a camera at the moment. I am in my building and we don't have cameras. So let me get this presentation going to oopsie just one too many slides ahead. There you go. So my name is Melanie. I'm a senior dev here at the Canadian Center for a cyber security. And I'll be presenting today with Ryan. So let's go over the agenda quickly. So I'll do a brief introduction of who we are. What we use in our stack, some of the contributions that we've made to Super Set. Then I'll be moving on to some contextual information. Basically, so what is jump to dashboard? Where is it coming from? Touching on the event's data types and do user story that drove our effort. And then it'll touch base on some high level aspects. So how is the dashboard list being populated? And what's going to be populated in the destination dashboard? And I'll wrap it up with a Figma prototype. And I'll hand it over to Ryan for him to demo the proof of concept that we have running here. So basically who we are? We're the Canadian Center for Cybersecurity. So we are a part of the government of Canada. And what we do is provide advice, guidance, and services that support on cyber security for all Canadians, like personal, smaller, bigger corporations, and other government organizations as well. Our stack, it's a pretty common stack. We use Super Set as a business analysis, business intelligence tool. So our analysts, Bill charts, and dashboards to try to determine trends that we have in our data. Everything is running on Kubernetes. We have analytics written in Python and Jupyter Hub that some of them are actually being run in regularly in airflow. We have two query engines living side by side, Trino and Spark, which are pretty common. And we have a series of notebooks that are stored in the gallery. So some of the contributions that we have done in Super Set, because we've been establishing a relationship, I guess, and we can say growing a professional relationships with the Super Set and then making contributions and working on efforts together. So one of the contributions that we've had made is Super Set tagging. So it's some additions to do UI that allows users to tag in Kubernetes and Super Set sets at dashboard charts or save queries with custom keywords for easy searchability. It's to be released in the future release, sorry, on their feature flag. And we also have, give me a second, we also have a select all new option that is in the select component to allow a user to quickly select all the available option when multi-selection is allowed. It is set to be included in the 2.1.0.0 release. And I'll cover in a bit more details a little later on what the advanced stage types are. So what is jump to dashboard? It's basically the ability to jump, to navigate to a new dashboard from a selection that we've made in a chart that is in a current dashboard that we are navigating in. And it is based on the data type of our selection. And we will, it will open a browser with the new tab, in the new tab, with the destination dashboard in it. So where is it coming from? So our user community has been working with advanced stage type for quite some time due to our legacy system. So they're basically, you know, the types of the data that they're looking at. And they want to be able to, when they do their investigation to what we call, enrich their data. So they refine their searches and add more information from data set to data set as they're carrying on in their investigation. So one of the contributions that we've made to superset is the advanced data type. So basically it's a specific type associated to a column in a data set. And it allows for identification of the data that's present in that column. And it also provides validation rules of the data. It also is a building block for new type of actions, such as jump to actions. So when we were doing user interviews with our somewhat users in our community for both data exploration and data analysis, a common user story that came up was the fact that as a users, they are users. They want to be able to jump to a different dashboard from this election that they made in a chart in the dashboard that they're currently in. So in the configs menu, they want to see a selection of dashboards that they could choose from based on the advanced data type of their selection. So that is the user story that actually drove our effort in this, yeah. So some high level aspects. So how is the list of dashboards being populated? There's going to be an API called that will return the list of dashboards whose native filters actually include, but not limited to a filter that is of the same advanced data type as the selection. So as you can guess, the context menu will actually be dynamically populated based on the selection that was made in the original dashboard. So now what's going to be populated in the destination dashboard? So basically, when a date range is present, we plan to transfer that to the native filters in the destination dashboard and all the current spawning filters in the native filters of the destination dashboard. So basically, all the ones that have the same advanced data type, what about multiple selections? Yeah, we do plan to have that also possible. And we have a bit of a technical details to sort out before that is fully implemented, but we do plan to allow the users to make multiple selections and be able to identify the dashboards that actually contain at least one of their selections of advanced data type. So moving on to the actual presentation, let me get out of this. So basically, same scenario here as Kasia mentioned. So we're looking at COVID vaccines. So we want to have more information on the phase one aspect of those vaccines. So the time range that we have is for last year. So if you right click on it, you have the dual actions like Kasia covered earlier. And here you have jump to dashboard. So what if I'm interested in figuring out or finding out how or what my colleagues how they viewed the data, what trends they've seen and how they explore the actual data. So what I want to come here, so for the sake of this scenario, let's pretend that phases is an advanced data type that's present in superset. So I see here that there are a couple of few dashboards that actually have phase advanced data type in their native filters. So I'm going to be able to click here and actually be, try to have a new tab open to open and then have my dashboard, my destination dashboard displayed with the time range, like the same time range as my original, my original, yeah, my original dashboard. And it's going to be populated and my phase one advanced data type will be populated. And the dashboard will automatically load it. As you can notice, you'll see that the filters have been applied to the charts. If there are more native filters appearing on this side, then for the first run, they won't be populated but they usually will be able to fill in more filters and re-run, reapply them if they need to have more information or more refined information to appear in the dashboard. So let me go back to here. So what we currently have running, so what we love at the moment is a pre-configured jump to dashboard, which is actually running in AJ Grid for AJ Grid, sorry, chart, which is a table chart that we have included in our distribution of superset. And the jump action is actually being configured by the user as they build their chart. So I'm going to hand it over to Ryan and he's going to do a quick demonstration of what we have running. All right, hi everybody. Let me just share my screen there. Cool. So everyone can see my screen. Good. Good, yes. Excellent. So yeah, Mel gave you guys a demo of what we're going for but I'm going to give you a demo of what we actually have right now. So in case you don't want to stoke any interest for anybody to help us kind of push this forward, does anyone interested? So it's pretty limited right now. So the first limitation is, as Mel said, it's limited to our AJ Grid. This is the grid that we basically use, most of our users use it, it's in our fork. So we need to expand that later. So you're going to see a bunch of custom dashboards I've made for all limited to grids. I apologize for the not-plated full dashboards, but we just have them in the grids for now. Yeah, so the first thing to stashboard is IDs and ports, that shows IDs and ports because right now, in superset, as a 2.0, there's two advanced data that's available. So those are IPs and ports, but I don't be fitting to kind of throw up some data involved again. So the first thing, actually, if you look at this chart, I actually want to show the data sets that's involved with it. The first thing you have to do is you'll have to tag the columns with the advanced data type and question. So in order to do that, you have to enable the feature flag, I think it's called enable advanced data types, and then you'll start seeing these. So in this case, I have IP, it's an IPv4 port is a port. So if we go back here, we can right-click on any of these elements, and we're going to see the context when you appear. So the first thing you'll notice is that jump action, you're going to see two available dashboards here. So we can do the same thing. We right-click on a port. We see port dashboards, and if we right-click here, we'll see it's great out disabled because this doesn't have an advanced type. You can also do multi-selection, right-click, and you're going to see all the dashboards available. So then, so we see we go to this one, we right-click, we go here, it's going to open a new tab. You're going to see in the new tab that we've gone to a new dashboard. This is actually a different data set. You can see it's different data. Still the grid, my apologies, boring. But you can see the filter now has that piece of data that we jumped with, and you can see the filter's been applied. So if we go back, we can actually do this with multiple pieces of data. Sorry, loading. And there you go. So it's a different data set. So if you have all of them, you can see what we have. And another thing we can do is you select like tons of stuff. It's only going to show you, it's only going to give you a valid thing. So if you click one of the one to only an IP, it's only going to filter on the IP. And if we do IPs and ports here, you can see this is a dashboard, multi-plate sets, multiple filters. We jumped to it, maybe this is a more detailed view of what you were just looking at. And you can see everything is sorted appropriately. All the filters have been applied. And yeah, we can see more narrowed down view of what we were looking at. And then again, you can jump and jump and go all over the place. The dashboard is linking to each other. You can kind of create any workflow you want with this. So some of those limitations we mentioned right now is once this is pre-configured by the user in the data set, our chart creation time. So if we want to remove that, this should be all done through REST API call to kind of auto-populate these options as they come in to being pre-configured. We also need to migrate this work once that's done. We're gonna migrate this work to every disk we possibly can. So if you right click on a pie chart with an advanced data type, you'll be able to go to whatever dashboard you want to grid. What are we gonna do to do there? Another thing that's not done is that date propagation we talked about is the date on the dashboard to be propagated to the next dashboard that's not done either. So this is all work that we are kind of have in flight. And if anyone wants to contribute, we'd be glad to have them so you can reach out to us. And yeah, that was really all I have. So, the Kevin, if you want to take it back. Okay, thank you very much. Let me share my screen again. We'll go back to the slides. I should say before I start sharing screen again, that actually there are some questions being answered by our CCCS friends. And if any of your questions don't get answered today during our Zoom call, please feel free to join Slack. I'll send you the link in a little bit and we can get to the bottom of things there. Oh, I see, sorry. One asking me to go back to previous dashboard. Please touch here. I think they mean like in the future, is there like a bidirectional link? I don't know if you want to answer that now or type that. I can expand chat, sorry. Okay, cool. Yeah, I was writing it as I was writing the answer as well. Yeah, so what's next? Beyond this feature that we just done, amazing demo of and thank you for that. What's not next, I guess, is really the pertinent question too. So we talked a little bit about drill by versus drill down and a lot of people often ask for drill down and kind of what you see in other tools where you might click a country and it drills down to state and you click the state and it drills down to city. And basically we're thinking that this is not really necessary once we have drill by fully built out because drill by prevents a lot of unnecessary, we feel work. So if you want to go ahead and build this drill down and drill up feature, there's a few things we have to address is how to impose a hierarchy and then there's the pros and cons of doing so. And the fact that it just puts this extra work on the user and chart and dashboard creators. So going into that, we have a couple of problems we'd have to solve. So if you had a chart like this trumped up example here, if you were to click USA cars, there's a couple of directions that could be considered to drill down. For example, if this is cars in the USA, would you want to drill down to cars by a state or would you want to drill down into vehicle subtypes by country? You know, there's a fork in the road and we don't want to make any bold assumptions necessarily of which way you would want to go as a dashboard explorer or consumer. So the drill by feature allows you to basically choose your own adventure and pick the column that you want to drill into. So it applies both the filter and the group by and you get right to where you want to go. The other thing is if we were to add a hierarchy that would be imposed, you also have to set that hierarchy up. So that poses a couple of problems. One is we have a whole UI design project that we'd have to undertake to get into this semantic layer UI and figure out how do we set something as the parent or child in a hierarchical sense between these column relationships. There's a lot of ways to do that, which one is the right one would require some pretty extensive user research. But also, I think the bigger issue potentially is that then you have to go as an author and set up these relationships and establish these hierarchies and that involves a lot of work for the maintainer of these charts and dashboards and one size may not fit all. So that's the concern. So that we're proposing that this drill by feature scratches the edge of drill down and drill up while giving you a lot more flexibility and a lot less setup work. So that's the proposal that's essentially currently on the table. But if anyone has strong feelings about this, we'd love to hear more about why the drill down feature would be required by anyone. Then another question we get on Slack and get up and other venues a lot is how people can contribute to this project. And there's a few ways. One is engineering effort. A lot of, we have a lot of plugins and supersets. Some of them are legacy plugins that use an old library called NVD3, which is supported anymore and those charts are not going to support the right click contextual menu. So for those incompatible ones, we are trying to replace those charts over time with more modern versions usually using the charts, but exceptions may apply. And we're also trying to just kind of enhance other charts and visualizations throughout the product to support more and more of these right click actions, like adding them to the legends instead of just the chart itself, things like that. So if anybody has any interest in exploring that arena, we have a laundry list of tests that need to be taken care of and we can certainly talk about that. So ways to get involved if you have questions, comments, concerns is getting into Slack. If let me actually paste the Slack link into the chat for those that aren't already on there, please join us for more than welcome. And there's a couple of channels there, one very topical about drilling and one for just customizing superset in general where we can talk about how to code things, open PRs, et cetera, et cetera. And I also wanted to share that we'll be going into some of this at the next town hall meeting, which happens to be on this coming Friday morning, if you're able to join, that'd be fantastic. It's on the community calendar, which is available right here in another link in the chat. And we also are proposing at that town hall to start a new operational model group. What is the operational model? There's a blog post for that. But essentially, there are working groups around different topical areas of superset. And clearly, drilling is one of these emerging areas. So I think I'll be proposing that we set up sort of a monthly or somehow periodic working group where those of us that are interested in contributing to this project and designing and building around it can get together and kind of share the current state of things and share feedback in it, sites. So if you have any interest in exploring these topics further, please join us in these different places. And now we've gotten through it. So we're all very curious to hear your feedback on what you're liking and not liking or questions that you might have around the things we've shown you today. So please, prior to it, we'll in the Q&A area of the Zoom if possible. I'll do my best to actually read those questions instead of just verbally answering them. You can read one or two questions for you to answer. Hi, all. First of all, is what's, how do people access the recording afterwards if they join late or want to revisit this webinar? Okay, cool. So this will be trimmed down a little bit. So we get rid of some of the preamble chatter and then we'll post this on YouTube. So it'll be available for anyone that wants to revisit. I'll be sure to post that link on Slack. So everybody knows about it. And then we got a few questions in Q&A on things outside of the drilling topic. What's the best way for people to reach out on any general SuperSet questions? General SuperSet questions, I would say, Slack is kind of the go-to. It's also possible if you have discussions that you want to be more kind of long term, like a future idea or so forth that you can start up an idea's thread on GitHub. There's a discussions tab up at the top and you could submit ideas or Q&A topics there as well. But typically most people go to Slack and there's Slack rooms for all sorts of things. But if you want, you can just DM me. My last name is very easy to find on there and I'll point you in the right direction if I'm able. See a question about how do we figure out which plugins are NBD3? Specifically, there is one. If you go looking in the code base, there's a folder in the plugins directory called something something NBD3. But most of these old plugins are actually called legacy. They have a legacy prefix on the folder. And all of those are in need of replacement to some degree whether they're built with NBD3 or not. They're using a legacy API that we're looking to get rid of and they do some data transformations in ways that we don't really want to support anymore. So anything that says legacy is something we're looking to replace. But a lot of those are NBD3. And in fact, some of them are effectively replaced like line charts, area charts, bar charts. They've been effectively replaced by charts but due to feature parity and other little details we're probably saving, removing the older versions of these charts for a major version release because it might be considered by some to be a breaking change. And that's how you do it. Let's see. Yeah, in which Slack groups you share your opinions and needs as a user and Slack, I would say if it's regarding this drilling actions work, just jump into the drilling actions channel by all means start a thread and we can go into it. Let's see. Somebody's asking if there will be simple instructions and how we enable to drill by so they can help provide feedback. Yeah, that'd be great. We'd really love the feedback, especially since drill to detail for example, is kind of a beta feature right now. So in your config.py file, there's a feature flag setting. If you happen to be a preset customer, just ping this, these things should already be on for you. But you can enable the drill to detail flag for the drill to detail features and you can enable the, I think it's called enable cross filters feature flag to turn on cross filter stuff. And there are some little quirks and gotchas that are being addressed. Somebody mentioned one in a question earlier. I forget what it was, but yes, it's one of the little things we're aware of and there's kind of a long tail of work to do on some of these bits. So let's see, oh, somebody had an interesting question about the data zoom in timeline charts and will that be integrated with cross filtering? I don't think we have any current plans for that, but it's certainly an intriguing area to show that little kind of time window thing collapsing when you apply a cross filter rather than the current means. Haven't looked into that, but I like the idea. It's like Sophie's addressing another question right now that I'm not sure the answer to. So I'm just going to not read it out loud. The question about timeline on jump to dashboard. When is that coming out? And the answer is the timeline is not exactly established yet, but they're working on. Diling it in. And I think part of the area that will need some contribution to help around is enabling the contextual menu to support this in various charts and graphs. So lots of little PRs there if anyone's interested in getting involved. Let's see. Also to Gavin, if you're looking for any specific instructions. Go ahead and hit me up on slack. I and the team will make sure that things are covered in documentation or blog posts or whatever is most relevant. Okay. Sophie, Kasha, anyone do you see anything else that's in the answer to area of the Q&A that's worth addressing out loud? We'll just scour these for a moment. If anybody else has any last minute questions, go ahead and fire it well. And like I said in the chat, if we haven't addressed your questions directly in the Q&A, it either means that it's a bigger answer than we're willing to type right now. Or we don't know. So please hit us up on slack. And we'll try to get to the bottom of it. For anybody that's not on our slack yet. What's the best way for them to join? I posted the link in the chat a moment ago. Let me do that again just for good measure because that is. We're encouraging people to use. And we're going to do that. And we're going to do that. Okay. Cool. Well, it seems like the questions are pretty much slowed down. So I think we'll go ahead and give people 14 minutes of their Tuesday back. Thank you all for joining. It's very nice to see you. And we look forward to sending you somewhere info about this drilling operations operational model group and getting a project board together and, you know, rallying and organizing around this as we go forward. So thank you so much. Take care. Thanks.