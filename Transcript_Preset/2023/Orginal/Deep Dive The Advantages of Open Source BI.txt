 All right. Well, we'll go ahead and get started with our event today. What we're here to do is really address one of the most common questions that we get in the Super Set community. We get this question a lot on Slack and when we're at conferences and things like that. I guess this is kind of a two-part question. Why is open source BI better than alternative solutions? And, you know, what are the main advantages that Super Set has because it's open source? So that's kind of the meat and potatoes of what we want to get into today. And we hope that as we go through this, we're going to help you with a few different things. One is to kind of understand the value of this product and its community and how everything fits into the open source ecosystem. And we also hope that, you know, you can better understand the value and power that you have in helping to shape this product and its roadmap. And also, we hope that you can better relay some of the values and virtues that this product has and, you know, cost savings and things like that to decision makers within your organization that might be selecting a business intelligence tool to expand into. And just before we get into more of this, I wanted to mention for a second that if you have questions that you'd like answered during this, go ahead and put them in the Q&A tab that helps us better manage those questions. And if you want to use the chat, that's just for general discussion or making a comment that you're saying, hey, we can't hear you or anything like that. So I just wanted to clarify the difference between those two things. So then we'll go ahead and move along to this, which is I'll introduce myself. My name is Evan Rusakis. I'm a developer advocate, a dev-real kind of person. You've probably seen me do these things before. But I'm all over the superset Slack community, which I will paste a link to really quick in the chat. So if you have any thing that we can help you with. By all means, hit me up on the superset Slack community. And please join if you haven't. There's a ton of value to be had there. And I will also go ahead and hand it over to Will. Hi everybody. I'm Will Fringle. I head up sales engineer and here at Preset. And in my background, I've also gone through implementations of other business intelligence tools in the past, built some in-house visualization layers using a combination of open source and proprietary solutions. And obviously in my role run into lots of people who are coming from other tools, looking to move towards open source, move away from open source to host the solutions. So happy to speak through a lot of what we're seeing in the market and then specifically where superset fits into that as well. So just for those that are might be a little less familiar with working with open source solutions in the past, open source BI tools obviously give you a lot of advantages over some of the more proprietary vendors that you might have worked with or looked into in the past. Obviously the big one there is avoiding vendor lock-in. We'll talk a little bit in a moment of kind of stay in the market and what's happened over the past couple years. But this really puts you in control of your own future in terms of being able to one, deploy the tool in your chosen location. So while preset makes that easy in a hosted version, superset gives you that flexibility. If you need to deploy on-prem, if you need to be in a specific cloud that might not be supported by some of those hosted solutions, you really have a lot of flexibility in terms of how you want to deploy that tool, how you want to build in specific permissions or controls where you might have very tight compliance or security concerns. And then we also see many customers then use superset or other open source BI tools as really a starting point for building really their own custom solution. So particularly some of those that adopted superset early on really use that as the base where they can really create a very custom business intelligence tool for their specific industry or use case. And obviously contributing, Evan can talk more about that. But the more we all contribute to it, the more it gives us stability going forward. And with superset really growing in that space, it really has given people a lot more stability and flexibility moving forward that they can rely on one other members of the community contributing meaningful features. And obviously the more and more we do that, the more superset becomes a leading tool in the space, not just in the open source space, but across all business intelligence tools you might be considering. To speak to that first bullet point on vendor locking, this probably isn't news to many of those who may have followed kind of business intelligence market over the past couple of years. But a big reason we hear a lot of customers looking to superset and preset these days is given a large amount of consolidation among some of the major players in just the past five years alone. Chartio in Periscope were some of the more recent ones that were acquired by some other players, kind of in Surrey in the space. Both of them have now been shut down or in the process of being entirely shut down. This is obviously kind of the worst case scenario where none of that was really easy to then migrate to any tools, given this was fairly proprietary in terms of the way they were formatted. And that really leaves those organizations that relied on those tools as having to restart with an entirely new business intelligence solution. And that means rebuilding everything from any business logic that lived in those tools to rebuilding the dashboards and everything else that goes alongside that. So that's a very painful process when you're chosen tool might get entirely shut down. So obviously someone we want to avoid by going with that open source solution where even if we were going with a hosted version, we could always migrate back to something we could host ourselves and not have to start entirely from scratch. Redash, we'll speak to in a moment as well. Just as being one of the more leading open source tools. Since the acquisition in Databricks though, has been much more involved with the Databricks team rather than continuing that open source project. A mode is kind of a very, or most recent one that happened here. So we don't really know what's gonna happen next with mode here at this point, but based off the industry trends, doesn't look that great for those that have invested a lot of time into building their dashboards in mode. Likely would be migrated to Thought Spot based off industry trends, but we don't really know what's gonna happen there. And there's not an open source version of mode to move whatever work that you might have had specific to mode to apply for. You can run that yourself at the moment. You really have to follow along with whatever integration so they're gonna do with Thought Spot. Now obviously the two biggest acquisitions that have happened in the space are Looker in Tableau. Both happened in 2019. Obviously some of the bigger dollar amount acquisitions there, most notably on the Salesforce side. What we've seen with Looker is that, you know, while they were acquired by a major player in the space, we haven't really seen nearly as much product development re-acquisition, notable cuts and support. And then more focused on integrating within the GCP suite. So there might be some benefits for those that are on Google Cloud and want to consolidate Billion and certain integrations within there. But for those that want to be cloud-agnostic, hasn't really necessarily been the greatest acquisition for them. And then simply on the Tableau side, if you're a Salesforce Power user, there might be some bundling that you can take advantage of within there. But most of the product development has been focused much more on integration within the Salesforce ecosystem. Rather than bringing Tableau to be a modern more cloud-agnostic tool that works well with other data tools coming into the space. So feel free to ask any questions if you want me to speak on anything more specific to some of these competitors in the future and how SuperSet addresses some of use cases more specifically. But we also can dive into that as you reach out in the future to any contacts here, both within SuperSet Slack. Or if you want to reach out to PreSet directly. So good news is you have multiple options to go with on the open-source side. This is obviously not an exhaustive list of all the open-source tools that have been out there. But these have been some of the most popular open-source BI tools based off GitHub metrics and just usage in the market. As we spoke to Redash has slowed down a lot since the acquisition of Databricks, but still for technical teams, occasionally gets used for a simple visualization. Really, we see kind of two major players here being SuperSet and MetaBase. MetaBase is a great tool, very user-friendly and great for smaller teams. Has trailed off a little bit in terms of the total size of the community. And that's where SuperSet has really kind of bridge that gap for both technical and non-technical teams. And with the Apache license and community and just greater momentum in terms of stars, poor, quest, contributions, despite having started later on has gained a lot more momentum, particularly amongst larger enterprises. So giving you that ability to grow to a much larger scale than some of the other projects that are out there today. So within SuperSet, there's a lot of other open-source tooling as well as just principles that allow you to make it very easy to work with and integrate with other open-source tools. So one is that SuperSet is really agnostic to what data source you might be working with, even some of those other open-source tools are a little more limited in terms of what database as you can connect to. And then obviously some of those proprietary tools are very much built to work alongside certain cloud ecosystems or certain data warehouse partners. SuperSet supports, you know, over 50 database drivers as is today and is still growing, as well as can just talk to anything VSEEQ Alchemy. And then our awesome engineer Beto also has his own connector called Chalely that makes it easy to connect even to S3 buckets directly, APIs, GraphQLDBs. So really giving you that ability to connect to many different data sources, even within the same BI tool. The Apache license obviously gives you that cleaner governance that also allows you to get involved and have a voice in the product direction. That way this isn't just a community addition software or something you're able to run for free. It's something that you really can get involved in and contribute to to ensure that this will keep moving forward in a way that is beneficial both to your organization as well as the larger community, rather than being reliant on just one company's contributions to that product. And then within what you see shipped in SuperSet today, these are all open source trading libraries. So we're not reliant on paying licenses to whether it's a high charts or some other type of visualization library that if you're building your own tool, you might be looking into. These are all open source largely using each arts these days for functionality. So that gives you that ability to potentially contribute new custom visualizations in there, but also not be locked in on the licensing side from the visualization front as well. And then when it comes to how we'll talk to this a little bit more in a minute in terms of how you interact with data in SuperSet, but it plays very nicely with other open source tools within the space. Most notably on the semantic side, where we're not trying to lock you into a proprietary semantic layer like some of those tools that came in in the past would. Play is very nicely with particularly open source tools not space, most notably DBT and cube. So if you want to lean into having an open source semantic layer define your business logic metrics, different joins within those layers, those can easily be replicated in SuperSet without having to go into the UI and recreate those metrics. You can run simple sync commands to have all that logic live in SuperSet as well. And that is all capable because this can be easily managed by code. And all of this is very easy to read EML files behind the scenes. So if we want to export and import different assets between different instances of SuperSet, if we want to migrate between the hosted version of SuperSet that preset provides and back and forth to SuperSet, all of that is very easy, both via compatible APIs, but also easy to use EML files that handle all the configuration behind the scenes. And in terms of how we're interacting with data, given that SuperSet is meant to work off a data set, it really encourages creation of proper data sets that can be easily leveraged by SuperSet, but that also means that they are locked into a specific tool. So if you want to leverage those data sets in other applications, it makes it very easy then to migrate that to other analytics tools or other applications where it might be useful for your team. And just to touch a little bit more on that, this is really where we have the preset logo here, but SuperSet or preset would fit in. And again, we're not relying on extracts, like Tableau and others, what in the past that are really trying to use that as an ETL tool. We're not forcing you into any proprietary semantic layer, we're playing very nicely with Cuban DBT there. And then really relying on the power of your underlying database to return those results and the results from your queries, rather than creating some separate server that adds additional cost to your BI instance. So you can really work with the best of breed tools for whatever your use case is, and then use SuperSet as a nice visualization on top of that, as well as adding that drag and drop functionality for less technical users. And with those data sets, again, that's really as a best practice, as a best practice, we always want to materialize as much as we can back in the database so that we're not locking that logic into any proprietary BI tool or that metric is only defined there. You can very easily add additional semantics onto those data sets within SuperSet. So if we need to create new metrics or new calculated columns, new types of dimensions within there, we can do so on the fly within SuperSet. But the more we solidify those into common data sets, the less we're locked into any specific BI tool. In that way, we can reference those same data sets across multiple applications if need be. And just for the record, if anyone's looking for more information on some of this stuff, I've pasted a few links that are relevant to this kind of data set-centric philosophy, as well as a few things from the prior slide about chart libraries and managing assets as code. And if anyone's from the future watching this on YouTube, I'll post those on the video description. Yeah. Yeah. And talking a little bit more through some of the items that we discussed, what's really great about SuperSet is how it can be managed as a headless BI resource, so that we can manage all the assets within SuperSet that we see in the UI as code through simple YAML files and then use the API and CLI to make it easy to back these up to GitHub repositories for version control. We can migrate between different instances, so if we want to use this in more a dev staging and production workflow, or if we ever need to move back and forth between preset and SuperSet as well. So within the SuperSet UI, you'd always see that ability to export your individual dashboards. And what we get when we do so is really the underlying YAML file. So that has very easy to read, different parameters that configure this specific dashboard, as well as the underlying databases, data sets, and charts that power it. So it's very easy to then version control those into a repository of your choice, as well as migrate them into other instances of preset. Should you be firing up another instance for a specific department, or to use in a more dev staging and production workflow? So the preset CLI really allows you to take this, and this also is a SuperSet CLI as well. The preset CLI allows you to then migrate all these different assets very easily. So I can move different assets between different instances of SuperSet, and I can do everything from exporting all of those different dashboards, database connections and charts, but I can also even do that for individual metadata around those, so I can export the ownership of them, the role level security, the roles, the users within that workspace. And while this is getting a little technical, what's very powerful about this, is it really gives you that freedom moving forward, ones that you can back up everything about your BI tool into a repository that you entirely own, but also allows you to then spin up those additional instances. If you need to spin up different experimental workflows for your BI instances, so if you want to spin up an entirely new instance, play around with how you might want to customize that further. You don't need to mess with the existing instance as is, but also this allows you to migrate back and forth between different deployment methods. And as we've seen with some of our customers here, who've started on SuperSet, but then want to move to a fully hosted version where they don't have to deal with the updates and maintenance of SuperSet, you can migrate back and forth between hosted versions, such as preset, so that you have that flexibility, knowing that you might wanna go with preset to start, you might migrate the preset at some point, but if at a point you're not satisfied with preset service, it's very easy then to export everything about that instance that you have running and migrate it back to SuperSet. So you really have that flexibility and future proofness to manage this as code, backup, all your resources. If anything were to happen to preset, you wouldn't be in that situation where your entire options of running your dashboards that are completely shut down and you have to start from scratch. You'll always have that flexibility to move back to the open source version if necessary. And you'll also have that flexibility to move to a hosted version, starting on SuperSet as well. So that just gives you a lot more optionality where if you wanna move towards a more customizing your own BI tool in the future, you are getting limited by starting with SuperSet or starting with preset right away. And with that, I'll toss it back to Evan here to talk through a little bit more of some of the ways you can get involved with the SuperSet community. Yeah, thank you. There's actually quite a lot you can get involved with. I mean, really the best thing about open sources that you all are kind of the biggest part of what we're doing here. And you have a voice in this product and how and you have, you can help steer its roadmap and kind of shape how this thing develops. So there's a lot of ways you can do that. One is the most obvious one, which is contributing code. Anybody can open PRs on GitHub and that might be to resolve bugs. That might be to add features, which can have a little bit of more of a political thing around it in terms of submitting improvement proposals for bigger changes, but small UI tweaks and things like that are always welcome. And of course, we have other things like translations that can always be improved and expanded. So there's a lot of ways to contribute by adding to the code base. There's also the topic of content. So documentation is always something we're looking to keep updated. So if anyone has interest in that, particularly if you run into a problem and then learn how to solve it, there's probably an opportunity there. Or if you're migrating to Super Set or if you've been using Super Set for a long time, you might be writing blogs or your own documentation or whatever, that stuff is really helpful too. So there are places on Slack to share that and we're happy to help syndicate some of that stuff in the Super Set Community Newsletter. Then of course Slack itself. There's a lot of people on there. We're getting toward 12,000 people, I believe. And there's a lot of questions flying around. And I guarantee you are able to answer some of those questions. So if you ever want to get on there and help some other people so that they can be more plugged in and help you out, that'd be really wonderful. Another thing is we have working groups. What we call Super Set's operational model. And in fact, I have a little link I'll post to for that. But we have working groups around developer experience and quality, release management. And of course there's the Super Set Town Hall, which is where we take opinions and solicit feedback from community members. So you're welcome to join those two. And then as the quote says there at the bottom, the best thing you could do for this community or any open source community is just tell the world that you're using it. So there are many ways to do that. One of which is just in your circles, just kind of help evangelize the product and let people know that it exists in the world as a competitive option. And if you want to make that more public, there's ways to do so by doing things like, there's an in the wild page, which I'll also give a link to in the chat where people can list their names on the repo and you'll see it on Super Set's read me. That your organization is using this product and that's really helpful to kind of get the word out for your org and for Super Set itself. But yeah, if you have any questions about any of that, there's a million ways you can get involved and a million ways you can tribute through code or otherwise. So just ping me on Slack and I'd love to help you in the right direction for any of that. And with that, I guess we'll go over to Q&A. And right now it seems like there's not a ton. There's one particular one about BigQuery that I was starting to address live in the chat. But it's one based around time granularity and it's more of a specific thing that I hope is not a bug. I think it's a question of applying granularity to time ranges either in the chart or in dashboard filters. And there are options to do that. So I'll get into that with you in a moment on the chat or we can talk about it on Slack. But if anybody else has any other questions that they'd like addressed, go ahead and hit us up in the Q&A, that'd be fantastic. Yeah. And speaking to, while you're feel free to drop any of those questions again in the Q&A or in the chat, speaking to some of the topics that have come up in the chat, looking at Power BI, for instance, everything we've seen here in Super Set and preset is meant to be run directly in the browser at full functionality. Obviously, Power BI is going to be much more aligned to the Windows suite and most notably, putting real feature development on Power BI into PC only. So moving with Super Set, well, obviously, give you that flexibility where you're not more locked down or a specific device type. And then obviously within the Microsoft ecosystem, somewhat ironic that the Bing team in Microsoft is one of the larger Super Set users. So obviously, there are some advantages to using both, but Super Set will give you that flexibility where you're not going to be device-specific for that full functionality. And I know we have a mention of currently using Looker. One area that we've seen many of our customers coming over from Looker is looking to get off of the proprietary aspect of LookML, moving that logic further back into the Datastack, either materializing it directly in the warehouse using Airflow or whatever means is most preferable by your data team, but also exciting advancements from open source players like DBT and CUBE that are really replacing all that functionality and then making it accessible to many different applications. So one, you can then easily use all those metrics, all those more virtualized tables that you would create as an Explorer Looker. You can recreate those now in DBT and CUBE and then leverage them in multiple applications as well as have those in an open source back solution so that you're not locking that logic into something that may come and go depending on. Obviously, Google has a history of shutting down some projects so you might not want to have that level of your business logic living in a proprietary tool. I click on that. There's another question that came in on the Q&A tab. And by the way, if the number of questions right now is not overwhelming, but it would help to move them from the chat to the Q&A tab so we can keep them in line. But there was a question about eCharts. And is there a plan to include all eCharts visualizations or is it up to developers to make this visualization plug-ins? And there's no plan to include all eCharts. In fact, that's a very nebulous thing because eCharts itself is kind of a library slash framework. There's not like a fixed set of charts per se. It's a bunch of little tools you can use to kind of compile charts and make new things. So for example, what is the perfect bar chart? There's probably 20 different bar charts in their examples. But we've tried to take some of the most essential and important components of that library to make what we think is the best bar chart that we can offer. And if you want to improve that, we don't need a new bar chart. We need improvements to the existing bar chart, most likely more controls. So adding those new controls to turn on and off some of these eCharts features is really kind of how we're approaching it. But then also in those examples, you're going to see a bunch of goofy stuff. There's one for cuts of beef. And we don't need to add a cuts of beef chart to superset. But if you happen to be a butcher that tracks data on cuts of beef, then that's an option. And you would probably want to build that chart on your own or implement it on your own. There's a little bit of a dream of one day adding some kind of eCharts configuration wizard so you can get really granularly custom with that. But that's not on the roadmap. Yeah, and there is a handlebars visualization type that allows you to then quickly work with just the results that you see here within superset. And then render any metrics or columns that you're applying those results in HTML and CSS. That does give you some flexibility to create some simple custom visualizations purely on the front end, which is very nice. And I saw some mentions of how you can customize some of these with CSS. And outside of the standard looking field that we can control by editing dashboards in superset in a simple drag and drop fashion, if you'd need to customize that looking feel further to match your existing branding, just for internal purposes, or speaking to embedded analytics, which can be done both in superset and preset, we can easily add CSS templates, which we can store in the superset instance itself, or directly edit them here. And that makes it easy to really customize the look and feel as you see in the background here in a standard way that any front and web developer can feel comfortable targeting those different elements. So you have a lot more control over what you would just see within the UI. Yeah, I'll go ahead and dig up the blog post about that too and stick it in the chat. And speaking of custom viz plugins, if you are in the market to build custom visualization plugins, or you're not seeing what you want in superset, we mentioned each arts in D3 and one of the other ones earlier. But really, you're not beholden to any of those, anything that is JavaScript, whether it's you writing your own fancy pants plug in with vanilla JavaScript or any other library, all of that's up for grabs. And it's a pretty wide open plug in ecosystem. Yeah. And Brian had an interesting question in terms of what organizations would not use superset or preset. We see a wide variety of organizations across many different industries using superset and preset today. Some of those with specific visualization types. So if you think of those, they might be looking at a tool more like RGIS, which is very focused on geospatial data at a much more detailed degree. Some of those in the health care or finance space that really need very specific chart types that are running more like a Bloomberg terminal or within the biotech space, where they just have very different visualization needs specific to imaging and such. Those are typically the types of industries where we see less overlap. But across, as you can see from the visualization support of there, these can all be fairly agnostic to many different industries. So that really just changes in terms of if you would be from some of those industries and need in very specific visualization needs and writing streaming analytics, you certainly could use superset, but you might need to fork and customize it further than you might feel comfortable with. And that just adds to the additional cost of hosting, whereas it is much more applicable to those that can work with some of the future step that's in there out of the gate, because that way we don't need to do nearly as much customization of the tool to get the value right away. And in talking with the pricing model, while we don't want to focus on presets so much today, you can always see our pricing. And for those that are interested in just getting started with superset, preset is often the easiest way just to get started, as we do have a very friendly free tier here that you can use entirely free for all time for up to five users. You will be full admins and have all the same features that you would have available if you were to spin up superset locally or deploy it simply within your own environment. We then do move up to some more custom pricing, as well as our standard $20 a month, which allows you to really choose how you want your users to be allocated. So everyone can be admins. A few can be admins. A few can only be dashboard viewer type roles. And now the enterprise tier, we can talk about more custom pricing for larger organizations dealing with embedded analytics. If you need to split up between some cheaper viewer roles and only have a couple admins, we're certainly happy to talk to you more about specific pricing if you want to grow into that. But again, all of this, you can ultimately migrate back and forth between superset. So we've had very large organizations with thousands of users, thousands of charts and dashboards already existing, be able to migrate from superset to preset within a day using the CLI. And that can obviously be supported in reverse. Thankfully, we haven't had to do that for our customers today as they've been happy with our services. But you do have that flexibility, if at any point you are unsatisfied with preset service. Just looking through some of the other questions open. There are a few technical ones that are getting off the topic of today's presentation. So if you want to take those to Slack, that would be ideal. You can just ping me there. And I'll do my best to direct you to the answer you're looking for. Things like customizing ISO codes for maps and stuff like that. That's probably possible. But it's a bit tangential to this. So we'll handle that elsewhere. I also added a couple links regarding pricing in the chat. One of them is our general pricing page in case you need it. And there's also a contact sales link that's on the website through that there. In case you want to talk to someone about the higher tiers. And I think if I'm not mistaken, we have a little bit of a pricing calculator to compare our pricing to certain other offerings. But I'm trying to do that up right now. And I'll share the link about it. Yeah, no, again, we don't want to get too much into pricing with preset today because we're happy to have that discussion offline. And we want to focus more on kind of the benefits of open source today. But obviously, also be very specific to what their tool you might be comparing to is others would charge you by rows or servers, process, and stuff. And the nice thing with superset and preset is that we're not charging you by, you know, rows scans or anything. Presets licensing models are going to be more on the user front right now. But again, happy to discuss that more specifically with your organization. So you see someone's asking about beyond portability or to some other conversation starters and selling points that could be used for investing and moving the data model from a proprietary, proprietary solution, like look at them, I'll back a few layers to DBT or other alternatives. I guess that would mean cube, for example, I don't know if there are others. But yeah, so advantages of that, I guess, are that that modeling can then be used by or take an advantage of by any other tool that can access your data. So I think it's fair to say that in some orgs, you know, superset might be the tool you use to democratize data access where the pricing point is affordable, whether it's preset or open source superset, so you could empower basically everyone in your org to have access to superset, but with some of the other, you know, more proprietary BI tools, you might need them for certain use cases, but they might have a much higher price point, so maybe you have a limited pool of licenses, and you want all of these pieces of software to be able to access the same shape of data that is kind of certified by your data team. So that's one of probably many arguments to move the modeling up the stack. And back into the product just to address some of the questions. I'm actually not sure where the customized logo is in the configuration file, but under preset, we just do that within our admin tools, and that does it, but certainly can be done for superset users as well. Oh, yeah, that's in the config.py file. You'll just search for logo and there you'll find it. Yeah. And then on the embedded side, we didn't touch too much on this, but both preset and superset can support embedded by generating a guest token, which can give temporary access to a dashboard. So you don't need to name that user and give it a proper role with data access on the backend. That is right now at the dashboard level. So if you want to invite users in to create their own dashboards, you really be able to go into that explorer mode where they can actually edit the data. That is where you would want to name them as users of your preset or superset instance. But that is something that preset is planned to deliver in the next few quarters here to allow you to embed more functionality of superset and kind of pick and choose what functionality you want to do. Whereas those that have typically done that with superset today will embed the entire instance of superset in there, which can be a little more confusing within an application. Because it's kind of an application inception at that point, but does allow you to put that under your own URL. If you'd like to do that with superset. And before that explore functionality, then we saw a question in terms of how that explore functionality is we're implicated to be a looker or in comparison to looker. As you see here, you have a very similar layout to those that are familiar with looker and other tools. We can simply drag and drop from the left hand side between the different metrics and columns or dimensions that you've created here. The nice thing is compared to lookers, we don't need to be a looker-mell developer to create any new metrics or dimensions within this data set. We can do those as long as we have the edit rights within here, which again, we're not getting paid that excessive developer fee to do so. And obviously with superset, we're not getting charged today, I think, on that user fee. And we're also just doing that via simple SQL expressions. So no new languages to learn here. But this is where we can add additional semantics to anything that doesn't live in the underlying data set today. You can add additional formats, currencies, certifications or warnings to guide your users in terms of how they should use the specific metric or dimension. And then they have that ability to quickly drag and drop between all of these different items that they can see here. I can search within this data set if it's particularly long. So if I want to look for that airline, I can go ahead and drag and drop that and start to turn that into a visualization. And again, this makes it very easy for those that are not fluent and SQL to easily query that data and then make their visualizations without having to be any type of data expert. Let's see. There's a question about SIPS, which is a term I used earlier without really stopping to explain. These are superset improvement proposals. And technically, these can be opened by anyone. They're basically GitHub issues. And somebody posted this link to a board where we track the progress of them. And the question was basically, you know, regarding the roadmap, can we talk about the status of these things? So there's the list of open SIPS. And the statuses are all over the place to be honest. That board is a relatively recent thing to track them and we try to get together with the PMC or the Project Management Committee and update the status of those about once a month or so. A lot of them are very slow moving or many of them are stalled, but many of them are very active. So it's a mixed bag. The reason for that being some people open a SIPS, but don't really go out and find the people to do the work or they don't step up and volunteer and do it themselves. So it just can kind of slow down. But the other thing is that a lot of it, what these superset improvement proposals require is a bit of a patchy process. It's a way of gaining consensus. And this is super important to superset being an open source project is that if there's ever a big change, like you want to fundamentally change the way a superset works or connects to data or displays, visualizations, or something like that, then you'll want to do one of these proposals and get everybody in the community to officially have consensus. And that involves the Apache mailing list, which is how Apache rolls. And you would have to subscribe to the dev mailing list. If anybody ever wants to do that, just send an email to dev-subscribe at superset.appatchy.org. And then when these things happen, you can vote on them. But the author of the SIPS has to start a discussion. They have to call for a vote and then we will tally the vote and then we can proceed with the work. And the SIPS stays open until it's done. So there's a lot of those things that are kind of in flight, some more active than others. And we are trying to track it on that SIP board, which I just again posted the link to if anyone wants to track that. If you are asking about any of them or particular, just DM me on Slack and I'm happy to kind of check the status of it more manually. Yeah. And speaking to some of Brian's questions that were up there that we didn't answer yet, all of this data can ultimately be exported as well. So for those users who just want obviously, well, if rest rates have an eye, obviously there's lots of people out there who still just want to bring everything down to Excel. So that is supported if they need to do so. And then if they need to transform any data, one, they always have that ability to use a SQL IDE within superset. That's going to be for your SQL proficient users that can run joins between different tables, if anything's not materialized already, obviously use anything that they could run as a query against their database to transform that data. But we also make it fairly user friendly to do that on the fly as well. So I wanted to know just the average carrier delay or if I wanted to compare the carrier delay to another dimension. One, it gives me some simple aggregations here where I can then just create that average on the fly. I can give it my new average name as well here. But I also can use just custom SQL, which while this is using a SQL expression, it also makes it very easy to then just say, I might want to do that over the sum of flights or flight date or whatever else that might be. I didn't come up with a very good example for this one, but that does allow you to just create some simple calculations on the fly, even if you're not particularly in SQL these days. And I didn't really prepare the demo, but we do also have some natural language to SQL coming into at least the preset product that ultimately will be preset specific right now, but that allows you to leverage chat GPT to write natural language text and translate that into a SQL query amongst your data. So it makes that some of those more complex queries much more approachable for non-SQL fluid users. Yeah, then we've got a question about if there's any step-by-step documentation available to contribute a new e-chart or for that matter, any other kind of chart to superset. And I should say that if you're using open source superset and you want to have a custom Vis plugin, you can do whatever you want on your own deployment, but if you want to contribute something to the main repo for everybody to use, it needs to be kind of a highly reusable thing that kind of benefits all. Otherwise, it just adds to the maintenance footprint, which is difficult, but that said, there is a blog post on how to do this. So this might not get into all the nitty gritty advanced things that you can do with building plugins. So I hope to publish a part two of this eventually, but this should get the ball rolling. There's a plugin generator that you can use and kind of spin up some basic code. And there's a DM me if you need additional assets beyond this, there are videos and all sorts of things out there about this topic. I have a question on if a semantic layer like cube is important. Obviously, people will have very different opinions in the database there. We ultimately, the nice part about going with superset is that you are agnostic to whether or not you want to lean into a semantic layer, whereas tools like look are you kind of really need to lean into that to make the tool useful. The benefits really with a semantic layer or with the data set center of approach is moving that logic just further back in the data stack. So certainly a lot of our customers simply transform their data either prior to the data warehouse or after the data warehouse, even just using their own Python scripts or orchestrating those with air flow and other open source tools. And as long as you have good data sets to work with, there's certainly no need that you need to necessarily use a semantic layer like a cube or DBT. What is nice about those semantic layers are the additional functionality in terms of how they define metrics and then make those applicable in other tools. And then also that ability to create more virtual data sets that are going across different tables. So while physical data sets here are meant to be individual tables from the underlying data source, and then you also can create virtual data sets within preset, which ultimately is the results of any query that I would run in the SQL IDE here. So if I wanted to turn that simple join into a data set that my non-SQL fluent users can explore, I can simply use the results that query in a drag and drop fashion. Cuban DBT's semantic layers allow you to define those data sets that might go across multiple different tables, similar to the way that you might use look at a mouse or some other semantic layer based tools. So it does allow you to grow into some unique use cases and then also can make more complex databases, we're talking with one customer right now about potentially using that for making a GraphQL database much more relatable to the superset interface. So those do give you some additional flexibility on top of what's already provided in superset, but obviously not a requirement that you use a cube or DBT alongside superset. We've got a question about somebody that's looking to do ad hoc queries without SQL, but they want to see the data in formats other than the table or pivot table, just to explore raw data. I'm kind of curious what the use case is there if you're able to explain a little bit more about that, maybe Slack's a better place to get into that conversation, but that's not the case. But typically this is where I would point out SQL lab and just say you SQL, if there's actual queries and clauses you want to add to filter the data, that's a great place to do it. And then you can see the table. But if you're looking for a table that's not the table visualization or pivot table visualization, it'd be more curious about the need you're trying to address. And maybe we can find a way to help there. Yeah, I was speaking a little bit to that earlier when we were just creating some metrics on the fly because I know some other tools would have kind of like a table calculation or where you would edit that more directly in the table visualization. So if I was looking at the layers and origin here, rather than have that as part as the specific visualization, we just bring that into the left hand side here where we manipulate the data. So for instance, I wanted to manipulate origin and I wanted to add a reporting airline in there as well. Or do any transformation within here. I would just do that on the left hand side rather than doing it within the visualization itself. As what I see within the visualization is meant to be really just a display around. In the way we customize that is on the customized tab of SuperSet, where if I do want to add search box, if I want to change the formatting of how I'm showing the delays within here, all of that would be done in the customized tab, but any transformation of the actual data would be done on the data tab within here. And for some simple transformations, I also can, we'd want to bring in some time series data. But you do have some advanced analytics capabilities within here as well. So for common transformations such as if I want to do some rolling windows, so in this case, I actually am applying a rolling window over seven days of data that I want to calculate the mean from in the advanced analytics section of SuperSet and preset, you can use a lot of those on the fly here. So without needing to know the sequel, how it actually calculate these values, I can shift the time to compare it to, a week ago's data within here. I can even do some simple predictive analytics if I want to forecast out of certain amount of periods in the future. So some of that transformation that might be a little tricky to do via sequel or in other tools, you do have that ability within the UI to add some of that as well. I saw a price comparison on QuickSight. That's a very tricky one to compare to you because there's a lot of different ways you can take it. You can take QuickSight. QuickSight's obviously a great tool to get started with in the AWS ecosystem and can be very cheap within there. But then as you look to go to data sources outside of AWS and then really just giving that full functionality starts to limit you a little bit more. And then obviously you're kind of at the whims of how much AWS continues to invest in QuickSight there. And again, this particular webinar is focused more on the open source side of things. So as far as pricing goes, if you are using open source and willing to deal with all the stuff of securing it, maintaining it, upgrading it, etc, all of that, there is work that comes with doing the open source version versus preset. Preset exists to kind of relieve you of that effort. So a pricing model is associated with that. There's no comparison comparing the price of open source with anything commercial, it's free. But when it comes to preset, there are a lot of things to consider. And I dropped a link in the chat earlier to talk with sales because depending on the scale, there may be some little adjustments that could be made depending on what your org needs are. So there's that. But I should also say that for presets pricing, we are kind of building a little bit of a documentation around comparing prices and features of these different tools. So if anyone has anything they'd like kind of added to that checklist, I can try to, you know, consider that for when we publish these things. And I think we've pretty much reached the, the bottom of the list of addressable questions for today. I know not everybody got their question answered. Some of them were kind of technical or tangential. Again, by all means, please do reach out to us on Slack, either Will or I are able to help answer your questions or point you in the direction of someone that can. So thanks for your patience and thanks for following up if you didn't get answered today. But we really appreciate all of you being here and all of your input. And yeah, thanks for everything. We hope this answered a lot of questions you have. And thank you Will for all of your presentation here. Yep. Thanks all. Hope everyone has a great day. Yep. Take care. See you next time.