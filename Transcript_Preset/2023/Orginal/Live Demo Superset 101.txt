 Welcome everyone to our first, I believe, or at least first in a long time, a Apache Super Set 101 session. This is something we've been wanting to do for a while since we know there are a lot of folks who are new to this particular project. And product and might want to know kind of what it's all about. See a little demo of some of the basic mechanics of how to build stuff here and hear a little bit of the backstory about how it came to be and kind of how it works as a community. So if there are things that I don't cover today that you'd like to see in a 101 session, which is intended to be introductory, then by all means, let me know in Q&A or in the comments or in other places. So first a little introduction, my name is Evan Rusakis. And I've got a couple of roles here, one is that I'm a super set PMC member, which is I'm a contributor, I'm a commiter, and I've been voted into help kind of steer the project a little bit along with many other fine folks from different organizations. And I've also I happen to work at preset, which we'll get into a little bit later, but I'm doing developer relations developer advocacy work here. So you've probably seen my face on slack on here and on slack and other places. Somebody's asking if this is going to be recorded and yes, absolutely, it will be on YouTube. So hello, YouTuber people from the future. If you have questions during or after this here are a few means to interact. I'm going to go ahead and stick the the slack link in the chat. So everyone has it. If you're not already on superset slack, that's probably the best way to get your questions answered as you start to discover the product. But also just for now, you can talk during chat. I'm not going to pay that much attention to it, but I will circle back to QA periodically and try to get to whatever I'm able to. And afterward, of course, feel free to send me an email and give me feedback on how I can do better at this. That's always important to So let's see. Why is there a blank slide there? All right. So what is superset? superset is an open source BI product and we're part of the Apache software foundation. We're a top level product. And what that means is we've made it through their incubator program. We're a real deal. We've learned how to release software reliably and all of that. And by now, we're one of the biggest Apache projects, whether you measure that by commits a number of people on slack by GitHub stars, all those sorts of things. None of these metrics are great on their own, but we're kind of doing very well in all of them. The product itself was started by Maxine Bushamine. He also started Apache Airflow, both of these things stemmed out of air's Airbnb is open source projects. Before he handed them over to the Apache software foundation in Max is now the CEO and founder of preset where I happen to work. But what is the ASF that he handed it over to exactly there are governing body for open source software Apache actually owns the repo. No individual company does outside of Apache. We all just kind of chip into it Apache owns the trademark. They help keep us responsible and responsive and on top of security and all sorts of other things. And we as a software. You know, group project. Have to follow what they call the Apache way, which is a whole system of practices, but there are different roles involved here that you probably ought to be aware of that you mentioned. One is just the community role. That's you anybody can be a contributor in all sorts of ways, whether it's technical or non technical. And we can talk about that at any depth you'd like in the future. But there's also committers. Those are people that have right access to the repo so they can merge PRs and close issues and tag things stuff like that on the repo. And then there's PMC members that are voted in that, you know, have additional responsibilities in terms of security and governance of the project. So why open source BI? Why is this better? These are things you can't do with other BI products. One is avoiding vendor lock in. You can run superset on your own. You can change superset. You can do kind of whatever you want with it. That's the joy of open source. So you were not beholden to a particular proprietary piece of software. You can deploy it wherever you want. However you want, you can customize it. And of course, you can change it and contribute it. Hopefully you do contribute and whatever changes you make will be useful for everybody and you can send them on back. So that everybody can benefit from them. Now, superset is a BI tool that connects to all kinds of databases. Here's a lot of them. This is by no means all of them. But if you have a SQL alchemy driver and you can create a DBA PI, then you can connect to pretty much anything that speaks SQL. So it's very wide open. And superset is used by a bunch of organizations. Here's a handful of them. And by all means, the best thing you can do for open source software is tell the world that you do. So if you want to add your name to a list like this, there's an in the wild page on the repo that you can open a PR to add your name to. Or just, you know, put your org if you have one in your slack handle. That's useful too. But let's get into the main parts of it. I'm going to demo all of these chunks of superset in a little bit, but just to show some screenshots real quick. One key ingredient is that superset includes a very advanced SQL IDE. So you can write your SQL queries. You can save them. You can share them. Come back and edit them. You can create data sets from them or you can jump directly to creating a chart out of these. Then we've got. Once you've got the data set, you map that to create charts. And by mapping that, I mean, you've got a control panel where you've got all sorts of declarative controls of how you would create or customize a chart. And the left column there, you've got all of your metrics and dimensions and things like that. And you simply drag and drop those to those chart controls to create a chart. However, you see fit. We've got a whole bunch of charts over 40, I think pushing 50 something like that. And we're always adding more. There's a whole plug-in framework if anybody ever wants to expand on the number of charts. We support and superset. There are a few more. We'd love to see. You can always add more controls to help these be a little more customizable too. This is a library agnostic visualization platform. So we use Apache eCharts. Kind of a sibling project, I guess you could say or a cousin. And they're very licensed compatible and very robust. But you could use anything that leverages JavaScript to write these plugins if you want to get into it. And then of course out of those charts, you build dashboards. And this is the representation of your data that you're most likely to share with your stakeholders. And this includes all of the things you'd want to see in a BI tool. So there's dashboard filters. There's drilling. There's cross filtering. And there's additional dashboard components like tabs and markdown and all sorts of things like that. So we'll get into that a little bit more in the demo. And now the main advantage of superset compared to other BI tools is that there's a couple of things. But one of them is that you can build these dashboards really quick. Time to dashboard is in metric. We always target as we're developing and improving this product. So we hope that we're among the top in terms of just, you know, going from a data set to a dashboard. Now other parts of superset exist. I'll show you a couple of these when we get into demo time. But aside from the databases and data sets and saved queries already mentioned. There's a few other things like annotation layers that are a little more advanced. We probably won't show them today. But you can layer data on top of a chart. You can get into CSS templates and also, you know, color palettes and themes that you can apply to your dashboard. We've got blog posts and all of that. So if anyone wants those resources, let me know. There's a semantic layer. I'll show you a little bit of which allows you to kind of annotate your data with custom metrics and columns. There's ginger filtering, which is another advanced topic. We won't go into today. But in a nutshell, it allows you to add filters to things like your SQL queries so you can make them a little more dynamic. It's kind of an advanced customization option. Then we've got alerts and reports. I'll show you a kind of a shallow tour of that. And then of course there's all sorts of role-based access control role level security and all sorts of different ways to lock down access to your data and charts and other little bits and pieces of superset. You should also be aware that superset has a very robust API, especially now that superset 3.0 just recently came out. This has been tidied up quite a bit. There's some new V1 endpoints and we've deprecated a few in 3.0. So it's really kind of coming together. It's very consistent, very well tested. And yeah, try it out. If you run superset locally or you just want to see it in the docs, you can see the full API documentation of that URL. Then last but not least, I mentioned vendor lock in for a second. It's worth noting that superset has its own CLI so you can manage assets as code. And you can also, if you don't want to use the CLI, you can import export dashboards so you can move them from one superset instance to another. And preset, which is a managed hosted version of superset also has a CLI that controls additional preset stuff, but also allows you to manage these assets as code in a much more robust fashion. And you can use that for open source superset instances or preset workspaces. And then for some reason, some of these little title slides are not showing that's odd. Okay, so this is the what is preset section. That's what that title slide was supposed to show just very quickly. We're here mostly to talk about open source superset, but preset does exist and it allows you to spin up multiple workspaces of superset if you want to. And this also comes with a lot of other benefits. You don't have to manage superset. You don't have to install it, configure it, secure it, upgrade it. All that stuff set up off, et cetera, preset ships with all of that. It's, you know, it's got sock to compliance and a whole bunch of other features right out of the box. And it's easily scalable. So if you want to not roll your own and run superset on your own, you can try preset. It's got some extra features as well on top of standard superset, but we won't go too much into that. Okay. If you want to try out superset, why are some of these images not working? That's very odd. Okay, you can do two things. You can try preset. There's a free account. It's you get, I think five users in one workspace. If you just want to kick the tires on it. Otherwise, you can download it from GitHub, which includes just pulling from the repo and running off master. Or you can download the official Apache releases from there as well. And then of course the docs screenshots are not coming up today. They worked last night. But you can check out the superset docs for all the official installation instructions, whether you're installing via Python or via Docker compose. Or the preset docs are also available that provide a lot of augmented information for new superset users, whether you're using open source or not. And that includes like chart specific walkthroughs. So you can learn how to build all sorts of different charts, things like that. And then of course, if you want to know anymore or you get stuck, the best place again to reach out is on Slack. There's a lot of different topical channels you can explore, whether you're deploying, customizing, installing, etc. So without further ado, I'm going to go ahead and launch into a little demo. So what I want to do is the first thing anybody would do is connect a data source. So I was part of me. I got too many windows open and even see my browser. Okay, so if you go to database connections, this is the first thing most people will do is add a database. You can like I mentioned connect to a whole bunch of different databases. But in this case, I'm going to go ahead and choose mother duck. Oh, and incidentally, I am running this demo on preset, but the things I'm doing today, you can do on open source superset or preset equally. So this is just kind of a convenient way for me to do this. But I'm going to take my SQL alchemy URI connection string and actually I'm going to pause my screen share for a second so you don't see my handy dandy user token. And hopefully you can see that again. And when I click test connection. It should come back successful and we're good. So I'm going to go ahead and connect to mother ducks. Now what I did for today, I happen to be a beer nerd. I don't know if people know that about me, but this last weekend was the Great American beer festival here in Denver. And there were a bunch of prize winners to go for the best beers in the United States. And I get very curious about that stuff. So I scraped their website and got a little data set of that. So if I go to SQL lab, we can dig into that. I just I made a basically made a CSV from their website, stuck it in mother duck and we should be able to snag it now. So this is SQL lab aka our SQL ID and if I select the schema, it should load the few tables I've put in here. And we're going to start with GABF 2023. These are this years winners. That's going to load up all the columns and everything from that data set. Do do do. Well, no, no, no, there you go. Live demos are fun, right? Okay. So now we can show you that this has auto complete. GABF. So there you go. Now you can of course run these queries and a superset just sits on top of your data warehouse or database, whatever. That may be so it doesn't actually keep any of this data locally. It doesn't like, you know, clone or import your data. It just acts as a database client. So pretty much everything you do in superset, whether it's here in SQL lab or creating a chart or building a dashboard, superset just kind of modifies and inserts little bits to your SQL queries, ships them off to the database and then parses the results accordingly. So here you can go as deep as you want with queries, but a simple select star works for our case at the moment. So I'm going to go ahead and create a chart from here and this will kind of invisibly create a database or a data set. Sorry. And we'll save that data set if and when we save a chart. Spoiler alert we will. So this table is raw records. This basically shows everything in that table, which is very handy. You can also of course go to an aggregated table. So maybe we will search for breweries and then we can whoops pardon my zoom controls are in the wrong place. We'll do account of metals as a metric. If we run that then we can see who some of the top metal winners were and good for them. But going back to raw records, we'll go ahead and bring that back and we'll save this chart. This is a very convenient way to start a chart. Now this is all winners. And what I want to go ahead and do is create this database or sorry data set. I'll call it GABF 2023, great American beer festival. And I'm going to make a new dashboard. I'll just call it GABF. Oops. There you go. Click that. A new dashboard will be created. All right. So now if I save and go to dashboard. Then we have a dashboard. Hooray. Humble beginnings. So let's go ahead and create another chart to start getting slightly fancier and having a little more inside. I want to select the data set. I just created. There it is. And I'm going to take a pie chart. Although I don't want to pie chart. Pitch charts are not that cool anymore. We're going to make it a ring chart. But let's start by figuring out which states are the biggest winners. So again, state would be the dimension. That's how we slice our pie chart. And then I'm going to get the total count of metals as the metric. And it looks like California's the big winner. Now when you're creating any chart, you've got two tabs here. Data tends to be the controls that affect your query directly. When you add things to them, customize tends to be what affects the visual presentation of your chart that most likely doesn't reshape your query. But just how the results of that query are presented. So for example, like I said, I want this to be a donut chart. And there that's a little more pleasant. So then I will save this as winners by state. And I'll put it on the gf dashboard. Cool. Cool. All right. So now what we can do is do some fun stuff with this already. We've got a couple of charts. But people might say, okay, neat. That's not that interactive. What do I do with this? So this is where things like filters start to come into the picture. So let's go ahead and add a filter to our dashboard. And in our case, I'm going to do a value filter. And what I know I want to do is figure out the category. And I'm just going to call it style or beer style. And save that. So as you can see, for 2023, California is a big winner. That's great. Now as an IPA enthusiast, I want to go ahead and pick that. And I hope there were more IPA styles. Why am I not seeing them? Interesting. Okay. Well, that didn't work. Why did that not work? Okay. Well, there's, oh, it's probably under India and not IPA. They don't use the short syntax. So you can look for more of these kind of substyles that sort of match. I'm curious about all of them. So you can select multiple. You can configure your filters to allow multiple selects or not. That's up to you. There's actually another webinar on filters if you want to go deep on that. But check it out. If you pick out the IPA winners, then California wins by a landslide. My home state of Colorado is doing okay. All right. Let's build another chart. Just for fun and games. We'll do a bar chart. I see some chat happening. If you guys can answer each other's questions, that's awesome. I see some Q and A things also coming in. And I will get to those. All right. So for this, we are going to see what kind of styles are doing well. We have a generic x-axis. So while Super Set used to be more driven by time series charts, in fact, it started off as a druid client. We now have this what we call generic access x-axis, which allows you to use a categorical access like category. So now I'm going to go ahead and add a dimension of metal and for metrics, we'll do a count of metal. And what this dimension should do, if I'm not mistaken, is split our bars vertically. Oh, if they were stacked. So let me go to stacked. Okay. So this is every metal from every category. So unsurprisingly, it's a very full chart. But let me just say this and you'll see where I'm going with it. Okay. There we are. So now if I add another filter, oops, pardon. And I've got state. And then you can even add, actually, I should have just added another filter. Okay. So now we've got some options. We can really start digging into this stuff. So instead of digging in by state, I actually want to, or sorry, instead of digging in by style, I want to see, let's see how a particular state did. What did California actually win? And it looks like they got metals in a lot of things, including they swept strong pale ale and a couple of other categories. So good for them. Or you can see, for example, if you want to, what states won the most gold metals? Then that becomes interesting where Texas actually beat Colorado, Colorado beat Texas in terms of overall metals, but Texas won more gold. So here by using the filters and a couple of different chart styles, you can actually start to get some deeper insights into all sorts of stuff. But this sort of filter is not the only thing you can do. So if I go back and go back to SQL lab here, I added another data set that I scraped from somewhere on GitHub. Let me wait for the table to load. Now these are GABAF historical winners. And the data here does not include this year because that just happened. It also doesn't include last year. Some maintainer didn't get to update it, but it does have the entire history of the competition up until 2020. I think it is maybe 2021. So if we go ahead and load this up, you can see all the results here. And what I want to demonstrate now really quickly via the magic of copy paste is that SQL lab here does allow you to do joins. One limitation you should be aware of is that superset does not allow you to do joins across database. So if you have two different databases and two different tables, you can't join those unless you use some other semantic layer or pipeline kind of tool, maybe DBT or something along those lines. But in this case, since both of these tables sit in MotherDuck, I can just union them because I know the column names and can make those in line. So when I run that, I'm going to go ahead and do this. So now I can save that. I'm just going to go ahead and create a chart actually. This time we want to get into a line chart and we're going to do a little bit of a time series. As you can see here, it doesn't know that the 4 digit year which is stored as a text column happens to be the year. It doesn't know it's a temporal column. So in superset, we have a very light semantic layer that we call the data set editor. And you can do that actually once you save the data set that hasn't been done yet. So let me go ahead and make this a categorical x-axis for now. Again, we'll go with metal winners because that's easy. And then dimension will go state. So we can see how different states perform over time. And that should work. We see the gigantic rise of California over time and a lot fewer participants in the early years of the festival. Cool. All right. So we're going to save this thing, create that data set that we need. And this is going to be gbf historical. And something like that. Okay. So when we save this chart without going to the dashboard, that will save our data set. And then I can do a little editing on that data set real quick. So if I edit data set, here's where you can do all sorts of fun stuff to kind of annotate your data. You can create additional metrics in here with little SQL expressions. I'm just going to go ahead and create a calculated column. Since I want to create a time based column. So a temporal column. And I already have a year column that's text. So using duck db's syntax, I can just call it that. And I'll just call it date time. Yeah. That's going to say this may affect other charts. Say la vie. I accept my fate. Now we should have actual dates instead of just screen representations of years, which means you can go over to the customized tab and do things like add number form matters. That uses d3 form matters. If anyone knows d3, there's all syntax to it. As fantastic documentation. For now, I'm just going to go with this format as an illustration. Okay. Now the whole point of this was to put it on that dashboard. And then show you one more little trick that you can do in dashboards. Okay. So here we are. We've got this chart. Actually, I want to show you the edit layout. One thing I haven't showed you is that you can stretch these charts around and use these layout elements to add rows and columns and all sorts of things. You can add actually, let's put a little markdown based column in here for fun. So if you know your markdown syntax, you can type whatever you want in here really. Pardon my fumbling. Oops. Cool. So you can set the height of charts, all kinds of things. Everything's pretty squishy and scalable. At some point, we're going to hopefully make this more responsive and design for smaller clients, but that's another project. And once you've got it all laid out the way you want, you can use cross filters. This is something that allows you to click in one chart and it emits a filter from here to all of the other charts. So now we're looking at California and you see just that line. If you want to look at say Ohio, then you can click there and there's all your information. All of the charts in this dashboard are filtered. That way you can clear it right here. So that's pretty neat. And then of course, people ask about drilling all the time. And since this is geographic, this might be a good example. If you right click on some of the newer charts, most of the what we call tier one supported charts, you can do a couple of things. You can drill to detail and see a tabular representation of what makes this chart and all of the data underlying it. But more exciting than that for most people is you can drill by. So in this case, we're looking at states. So you can drill by any of these columns really, but I'm going to go ahead and drill into Colorado by city. And then you can see my home city of Denver has 13 metal winners in this particular year of GABF. So that's cool. You can see all the other cities. So this allows you to go as deep as you want. Really, you can keep going into categories until you run out of columns. So you can drill and drill and drill and drill all day long. And we think that's better than the typical sort of hierarchical drilling. Okay. So you can drill, you can cross filter, you can filter, you can build all sorts of wacky charts, you can build all sorts of dashboards. What else? Let's say you want to keep an eye on this data regularly. There's a few options. Of course, you can share the dashboard with others. This is actually a preset construct. It invites people to your workspace, but you can share the URL on open source superset. There is a whole embedded SDK that's beyond the scope of what we're going to get into today. But you can actually on open source or on preset, build react applications and include your dashboard within those as an embedded instance. You can create permalinks to share with coworkers and so forth. But one thing I want to show is up here. Alerts and reports. This is a fun thing that a lot of people need in various business contexts. The easier part to start is probably reports where I can take the dashboard that I just created, GABF, and I can set a screenshot with if I want. And I can set it to go by email to myself. Or anyone I want really, I can also send it to Slack. All of this stuff is configurable on open source superset. It's available out of the box on preset. But you can create this sort of report and it can show up in your inbox every morning if you want to kind of keep an eye on your sales data or whatever the important thing to you happens to be. So you can do Cronsen tax, all sorts of fun stuff. But on top of that, you can also do alerts, which are a little bit of a different animal. The idea here is still that you select your chart and or dashboard. Which would be live data more than my little cooked up example for today. But if you pick a particular database, then you can write query here that actually triggers this. So you can write SQL that says, you know, if I have a column that has more than zero null values in it, when you're expecting no null values and the null value shows up, it's a bad thing. So you want to see a alert show up in your inbox. You can do that. Or if you know, some number dips into the negative, or you know, you can dream up a million use cases for it. But you can set these triggers that are non-chronological. Well, there's still a chronological factor. It actually runs this query every so often. So maybe every morning you check the integrity of some data and get an alert if things don't match. Let's see. What else am I forgetting here? Gosh, I think that's the bulk of it. Let me, those are the, those are the broad highlights for a 101. Anyway, there's a lot of other interesting stuff we can go into like CSS templates where you can style your dashboard. We've done other meetups on that. There's blog posts on that. So I won't go deep here. If you're managing your various assets like dashboards or charts or any or queries, any of that stuff, there are bulk actions that you can take to kind of bulk delete them. And yeah, this is another dashboard I made with a lot of other filters and you can divide those filters. Some more chart types. I think hopefully you get the general idea. So let's bring up the Q&A tab. I'll stop sharing for a second. Actually, what I'll do is go over to this slide, which has the slack link again for anyone that needs it. It's also got my email address if you want to reach out directly. But for now, I am going to try to get through some of these questions. Okay, this will be shared on YouTube. Yes. Are we working on generating SQL queries using NLP? Yes. There are some folks on the open source side that are speculating about how to do this and kind of community friendly tool and platform agnostic way. That's going to require a lot of talking about. But preset, the hosted version of Superset that we sell commercially is also working on this. And since we're a private version of Superset, we have a little more leeway on how we do this architecturally. So we do have a text to SQL integration coming soon. It's in a bit of a beta phase right now. So contact me if you want to know more about that. Then it is using a large language model kind of thing. It's not one of the more traditional NLP things, but AI, generative AI stuff. Okay. Can Superset be configured to automatically create complex reports based on templates in document formats, for example, and be integrated with generative AI for summarizing data tables and charts and executive summary paragraphs? Not yet. So as far as the A4 formatting of dashboards, yes, you can create a dashboard that's specifically for reporting. You can set a width for that dashboard that you want it exported as. And that will come through as basically a high risk screenshot that you can kind of put into any document you want, however you want. I might be up to you to add some integration that pulls it from email or Slack and sends it into whatever document format you need. But you can also extend Superset if there's some other formats you you want to export. But the executive summaries in paragraph and text paragraph format, summing up dashboards that hasn't been done yet. That's also kind of on presets potential road map for these AI features. So things to come. How can one filter using the chart data, eG&Pite chart containing gender when I click the female color portion, I get female numbers in all other charts? Oh, yeah. So that was, let me go back. So if I go to this dashboard, this is, I guess, a fine place. Right now, I'm emitting a cross filter. So that's what you're saying when I when I click something, it filters all the other charts in the dashboards. If you don't want to do that, you can instead of emitting a cross filter like this, you can actually create and emit a filter directly from the filter bar. And when you apply that, it filters all the charts accordingly. So now these are all the Ibanez guitars in this example. Now, if you don't want it to affect all charts, you've got more options. So if I go to edit filters and I go to this manufacturer filter I'm messing with, you can set the scoping. So if right now it's affecting all of the charts in all of the panels and tabs. But if you want it to only affect, I don't know, let's say everything, but total sales. Then I can save that. And this number should not change regardless of filters. So here, 128,000 fake dollars. Speaking of GPT, this data set was created by GPT. It's fun for making up bogus data. You can have it generate CSV files all day long. It's very amusing. Okay. Yeah. So hopefully that answers that question. Let's see. So cross filters and filters are kind of different animals. They work well together, but they both have their merits. Oh, and I didn't mention you can also like in the the beard dashboard I made, I didn't set a default, but you can set defaults for filters too. So maybe I want it to start as vendor and always have a single filter value in there. You can do that. Okay. Is the data in superset periodically updated as it gets new records in the original data warehouse? Yes. So superset has a whole caching system to it, which is very configurable. And we don't want every load of every dashboard and every chart to hit your database over and over and over and again, that would be very annoying. So what we do have is a caching layer is typically redis, but you can configure it differently using memcache or others is a chart data cache. So here this data is cached and you can set the time out. I forget what it defaults to in a standard configuration, but you can force to refresh it if you want right then or there or you can set a different periodicity to it. And that is one of several things you can do in the dashboard metadata, which actually I'll go into for just a hot second, because I didn't really talk about the dashboard properties. So if I go to not embed dashboard, edit dashboard, then I go to edit properties. One fun thing I should have showed you is you can pick different color pellets. And if you do that, then suddenly your dashboard is much prettier, hooray. But let's say I've got this chart where I've got my bronze, gold, and silver. Another thing you can do is go into the advanced JSON here and there is a whole bunch of stuff. But one of them is label colors. So let me grab a little copy paste thing I made last night. Oops. These are not the greatest colors in the world, but you can pick a series in your dashboard and a color value as an example. And when I apply that, I need a comma. Then hey, you've got gold silver bronze. It works. Okay, but that wasn't quite what I was going for. I think what I was actually trying to show you before I went on a wild tangent was that you can set some of the timeouts in here if I remember correctly. I haven't actually messed up the timeouts for a while, but that's in the documentation. So I know there's someone config.py. You can mess with a lot of that if you're running your own instance of superset. But I think you can overwrite it on a per chart basis. I'd have to look that up. Okay, moving right along. And you show us how to customize chart colors without applying the dashboard color scheme. Oh, there you go. Okay, so you can do it the dashboard color scheme like I just did. You can do in the dashboard properties, you can do a per series color like I was just showing, which I showed with Hexed Esselmall, but it works with any kind of HTML friendly color format. But if you don't want to do that and you want to do it on a per chart basis, you can also actually just delete this color scheme. And let me save the dashboard here. And if I go to edit this chart, you can go to customize and why is that still unhaurating? I should not be that I'm not save it. I probably didn't save. We get it at the dashboard edit properties. Oh, yeah, it's still there. I think I forgot to save it. Apply it save. Okay, now if I didn't screw that up, should be able to go here. And oh, why is that still not working? Okay, I don't know what's up with that at the moment, but you should be able to change the color scheme for any individual chart there. And the reason this is throwing that little error is that the dashboard color palette will override individual chart color palettes. But when you create a new chart, you can pick any individual color palette for that chart. You should be able to do it for every chart in your dashboard. And only when you apply a dashboard color palette will override those individual ones. I feel like I'm taking crazy pills at the moment. This should work. It's tested often. So I don't know what I'm doing wrong, but I'm just going to move on. Let's see. So there's some questions about permissions. Those get a little nuanced. So I'm probably going to skip most of that for now. We can do a separate entire webinar on our back and permissions and all of that. But I think somebody's asking about permissions by dashboard. And one of the things you can do is if you go to dashboards here, you can set owners. So if I edit that dashboard, you can restrict access or add access for any individual different person. It gets a lot deeper than that when you get into granular our back controls or on preset. We have workspace roles that are shared across different workspaces. But it might also be worth mentioning that I don't not only can you create owners for charts and dashboards. But you can add certification to. So you can see, you know, I haven't made this. And then it'll get a little icon here saying, hey, this is important. Please don't edit or delete it. Okay. If you want to hit me up on Slack with any kind of permission and our back control stuff, we can get deeper on that. And I can start gathering a list of questions for a webinar on that all topic. Okay. Are there any plans to make local customizations specifically on Docker compose installations easier to achieve? So yeah, currencies and locales and number four matters are supported. There's room for improvement here. No doubt about it. But whether you're using preset or superset, there are ways to do this. So on both as of 3.0, which was just released the other day, you can now set a default currency selection and a default number locale in your config.py file. So you can set it up to be commas instead of periods or periods instead of commas for certain locals, you can pick your currency formatter. You can also even go by the column in your data set and set different D3 formatters for each column. So you might have a column of Yen, a column of a dollars and a column of euros or something like that. And all of that is now supported by the bulk of, you know, the tier one charts, the big big numbers tables line charts kind of the the greatest hits of charts. And translations are also possible. They're built into superset. You can enable those in your configuration and maybe not all the translations are complete, but now that you can set currency and number four matters in a variety of different places, including at the chart layer in the chart customization controls. It's getting better. If anyone wants to flesh out some of the translations, that's a big project for working on too. So feel free to contribute. Can you create embedded dashboards that are locked to specific users? Yes, in fact, the embedded, well, okay, we've got a whole other meetup on embedded. I can share the URL for the YouTube video to that and there's some documentation about that. But when you're creating an embedded dashboard, you actually have to set up a guest token and that guest token has certain permissions. So it's kind of using a generated user account for that embedded instance and you can set up permissions for that. So, okay, you want them to only see specific data for a specific user. This is probably where you start to get into the ginger temp letting, which is, where it gets a little custom and intricate, I think that can be done, but it's definitely be on this goop of all one on one. So hit me up on Slack and I'll try to point in the direct direction. Then let's see. Oh, links to the CSS stuff. Yeah. Let me find that. There's a preset blog. The preset blog is full of all kinds of resources. I highly recommend you check it out. This one about CSS is part of a three part series. One part is on color palettes. One part is on CSS and the other is on the state of the theming. So if you wanted to let it white label superset, we're not quite there, but it's going in the right direction. So there's the CSS one. You can do all kinds of crazy stuff. So a little bit of it is Wild West unsupported things. But just to scroll through this real quick, there's a million examples. You can target specific charts to give them individual styles. You can target types of charts. You can get all sorts of bits of the UI and splashes of color. Or you can add icons. There's a whole world of customization and superset. In fact, all of the tables, like the table chart and everything now support basic HTML. So what I didn't do is add little icons for the gold, silver, and bronze medals in the table. But you could totally do that now. Yeah, customization goes deep. So hit up the customizing superset channel on Slack if you want to get into that. All right. We got time for a few more. Is the cross filtering and drilling open source or just in preset? It is on both. So if you're running open source preset, there's some feature flags you would need to turn on. Cross filters are enabled by default as of superset 3.0 as are, I believe, drill to detail and drill by. But all three of those flags are in your config.py file. If they're not turned on already, because you're running something older than 3.0, you can just flip them on. There's also a preset blog about feature flags. If you want to know all of the configuration options or at least like the usual go to ones. Okay. Yes, you will be able to download the demo. We're running at a time, and I won't be able to get to all of these questions. But please, feel free to ask more questions. Don't ask them on YouTube when you see the video, but please go to Slack and DM me there or just ask on the appropriate channel and we'll get to the info you need. Somebody is asking about deploying the API without the UI. You can absolutely do that. You can run the backend and not build webpack, not serve those front end assets. Yeah, and that's just kind of tweaking your config file if you want to get into all of that. How's the support for GIS? It's not a full fledged GIS solution. It's not ESRI level stuff, but we do have DeckGL KIP plugins. There's a couple of new ones that are getting merged in. One new one shipped with 3.0. But yeah, you can do WebGL based maps of various formats using those DeckGL plugins. We also have country maps. Not every country in the world is there yet, but they're easy to contribute if one's missing. You can use your ISO 32 codes. I forget to map a core of plethe of regions within a country map and there's a world map as well. There's a lot of geographic stuff. We can maybe make that another demo. That would be cool to go into. Let's see. Just looking for a last couple of opportunistic questions I can answer easily here. Can you export a dashboard in CSV, PDF, etc? Not yet. I think some of that's contributable. If you want to get into that, the CSV export has a couple of things that are worth mentioning. You can export each chart as CSV. With tables, there's even a future flag you can turn on to export the entire non-paginated tables data set as CSV. That comes with the caveat that your table might have a bajillion rows and explode your database or explode your browser. So use caution. But without that future flag, yes, you can export any chart as JSON from a couple of places. JSON or CSV. One is if you go to a dashboard, you can download as CSV or Excel right here. Or if you go to edit the chart, then you'll get a couple of more options. Up here, you can download a CSV, JSON, image, or Excel. So there's a pretty good number of export options right there. Dashboard exports are a little different. You kind of need to do that with the browser. So those alerts and reports actually use a headless browser to generate those screenshots. Let's see. Somebody's asking if superset3.0 is considered stable. That's a pretty interesting question. I think it's pretty darn stable. It's been very tested. It went through four release candidates. It's got all of the bug fixes that are in superset2.1.1, which we are considering stable. So that said, it's also got some new features and bug fixes and things like that that were rolled into it that happened after the 2.1 cut. So I would consider it stable, but that's a very suggestive question. If you really want, you can wait for a superset3.0.1, which will address any bug reports we get in the next few weeks as people try out 3.0.0. But it's been pretty well tested and had a lot of eyes on it. So I think it's looking pretty good. We don't technically call anything stable until the patch release comes out for it though. Somebody's asking for installation links. You can just go to... You can probably just google superset versions and get right there. superset releases. So these are all the official versions and for each of them, you can download the tarball or the source zip and you can run that via Docker Compose or however you want to do it. So here's 3.0.0, the official. And if you scroll down further, you'll get to 2.1.1 and all of the rest. Three minutes left. Can you run superset on Windows? Okay. Okay. Officially, it's not supported. Larby Dragons. That said, people have done it. I don't know about Windows 2016 in particular, but there are people out there running superset on Windows. There are weird things you have to do with packages and builds and all sorts of stuff. It's not built for it and it's not something that we test as a community. So officially, not supported, but in practice, if you want to go forward, you can. And I think there's a growing little grassroots community of people that are doing this. I hope a Slack channel appears and maybe with enough effort, we can make it official. Let's see. Somebody said CrossFilters weren't working on their Docker instance. Depending on the version, you probably just have to turn on the flag. And if you turned on the flag, then you might just have to restart your servers somehow. Okay. Let's see. Can you filter across embedded visuals? Yes. If you embed a dashboard, you can choose whether or not you want to show the filter bar. And if the filter bar is shown and the guest user that is effectively the embedded user has permission to use filters, then yep, they will work. How do you use saved queries in charts and dashboards? So when you write a query and you save a query, that gives you kind of a point of reference to go back and make tweaks to it. But at any point from SQL lab, if you go to, let's just make this a save query. All G A B F owners. Okay. So we've got a saved query now. And actually, if I go over here to save queries, you should see it. Very cool. Now I can go in here and edit the query. So that's great. You can kind of come back and update that at any old time. And from there, you can create a data set directly. And from that data set, you can build charts. Or if you go ahead and just run that saved query, then you should get the button here that will allow you to jump to creating a chart directly. Kind of temporarily skips the data set creation step just for convenience. Okay. Well, we're at time. There's a lot of unanswered questions. I'm sorry. I didn't get to them all, but thank you all for joining us today. And I think we'll be doing this again. So if you have more questions that went unanswered by all means, DM me, email me or just reach out and let me know how we can improve this in the future. And maybe we'll do it periodically for all the new users. So spread the word about superset. And yeah, looking forward to seeing you all on Slack. Take care.